
;; Function izp_convolve2D (izp_convolve2D)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 12 (  1.3)


izp_convolve2D

Dataflow summary:
def_info->table_size = 214, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={11d,66u} r1={2d,10u} r2={18d,25u} r3={3d,9u} r4={2d,8u} r5={2d,8u} r6={3d,46u} r7={15d,25u} r17={12d,4u} r20={1d,1u} r21={76d,99u} r22={73d,96u} r23={2d,1u} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={2d,7u} r38={2d,7u} r39={1d,7u} r40={1d,7u} r41={3d,9u} r42={3d,9u} r43={3d,9u} r44={3d,9u} r1102={1e} 
;;    total ref usage 706{243d,462u,1e} in 278{278 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 0 )->[2]->( 3 8 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 2 [cx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 23 [xmm2]
;; live  in  	 1 [dx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 23 [xmm2]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]

( 7 3 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 6 5 )->[6]->( 6 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 6 4 )->[7]->( 4 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]

( 7 2 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp] 20 [frame]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(6){ }u-1(7){ }u-1(20){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 47 to worklist
  Adding insn 327 to worklist
  Adding insn 44 to worklist
  Adding insn 42 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 364 to worklist
  Adding insn 362 to worklist
  Adding insn 360 to worklist
  Adding insn 359 to worklist
  Adding insn 358 to worklist
  Adding insn 357 to worklist
  Adding insn 356 to worklist
  Adding insn 354 to worklist
  Adding insn 329 to worklist
  Adding insn 39 to worklist
  Adding insn 49 to worklist
  Adding insn 270 to worklist
  Adding insn 267 to worklist
  Adding insn 325 to worklist
  Adding insn 349 to worklist
  Adding insn 257 to worklist
  Adding insn 253 to worklist
  Adding insn 251 to worklist
  Adding insn 247 to worklist
  Adding insn 242 to worklist
  Adding insn 238 to worklist
  Adding insn 234 to worklist
  Adding insn 230 to worklist
  Adding insn 226 to worklist
  Adding insn 222 to worklist
  Adding insn 218 to worklist
  Adding insn 214 to worklist
  Adding insn 210 to worklist
  Adding insn 206 to worklist
  Adding insn 202 to worklist
  Adding insn 198 to worklist
  Adding insn 194 to worklist
  Adding insn 190 to worklist
  Adding insn 186 to worklist
  Adding insn 182 to worklist
  Adding insn 178 to worklist
  Adding insn 174 to worklist
  Adding insn 170 to worklist
  Adding insn 166 to worklist
  Adding insn 162 to worklist
  Adding insn 158 to worklist
  Adding insn 154 to worklist
  Adding insn 150 to worklist
  Adding insn 146 to worklist
  Adding insn 142 to worklist
  Adding insn 138 to worklist
  Adding insn 134 to worklist
  Adding insn 130 to worklist
  Adding insn 126 to worklist
  Adding insn 122 to worklist
  Adding insn 118 to worklist
  Adding insn 114 to worklist
  Adding insn 110 to worklist
  Adding insn 106 to worklist
  Adding insn 102 to worklist
  Adding insn 98 to worklist
  Adding insn 94 to worklist
  Adding insn 90 to worklist
  Adding insn 86 to worklist
  Adding insn 82 to worklist
  Adding insn 78 to worklist
  Adding insn 74 to worklist
  Adding insn 70 to worklist
  Adding insn 66 to worklist
  Adding insn 62 to worklist
  Adding insn 58 to worklist
  Adding insn 53 to worklist
  Adding insn 264 to worklist
  Adding insn 262 to worklist
  Adding insn 261 to worklist
  Adding insn 259 to worklist
  Adding insn 373 to worklist
Finished finding needed instructions:
processing block 8 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 372 to worklist
  Adding insn 371 to worklist
  Adding insn 370 to worklist
  Adding insn 369 to worklist
  Adding insn 368 to worklist
  Adding insn 367 to worklist
  Adding insn 366 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
  Adding insn 263 to worklist
  Adding insn 344 to worklist
processing block 6 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 256 to worklist
  Adding insn 254 to worklist
  Adding insn 250 to worklist
  Adding insn 249 to worklist
  Adding insn 343 to worklist
  Adding insn 248 to worklist
  Adding insn 342 to worklist
  Adding insn 245 to worklist
  Adding insn 244 to worklist
  Adding insn 341 to worklist
  Adding insn 243 to worklist
  Adding insn 340 to worklist
  Adding insn 241 to worklist
  Adding insn 240 to worklist
  Adding insn 339 to worklist
  Adding insn 239 to worklist
  Adding insn 338 to worklist
  Adding insn 237 to worklist
  Adding insn 236 to worklist
  Adding insn 337 to worklist
  Adding insn 235 to worklist
  Adding insn 336 to worklist
  Adding insn 233 to worklist
  Adding insn 232 to worklist
  Adding insn 335 to worklist
  Adding insn 231 to worklist
  Adding insn 334 to worklist
  Adding insn 229 to worklist
  Adding insn 228 to worklist
  Adding insn 333 to worklist
  Adding insn 227 to worklist
  Adding insn 332 to worklist
  Adding insn 225 to worklist
  Adding insn 224 to worklist
  Adding insn 331 to worklist
  Adding insn 223 to worklist
  Adding insn 330 to worklist
  Adding insn 221 to worklist
  Adding insn 220 to worklist
  Adding insn 219 to worklist
  Adding insn 217 to worklist
  Adding insn 216 to worklist
  Adding insn 215 to worklist
  Adding insn 213 to worklist
  Adding insn 212 to worklist
  Adding insn 211 to worklist
  Adding insn 209 to worklist
  Adding insn 208 to worklist
  Adding insn 207 to worklist
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 203 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
  Adding insn 199 to worklist
  Adding insn 197 to worklist
  Adding insn 196 to worklist
  Adding insn 195 to worklist
  Adding insn 193 to worklist
  Adding insn 192 to worklist
  Adding insn 191 to worklist
  Adding insn 189 to worklist
  Adding insn 188 to worklist
  Adding insn 187 to worklist
  Adding insn 185 to worklist
  Adding insn 184 to worklist
  Adding insn 183 to worklist
  Adding insn 181 to worklist
  Adding insn 180 to worklist
  Adding insn 179 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 175 to worklist
  Adding insn 173 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
  Adding insn 165 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 161 to worklist
  Adding insn 160 to worklist
  Adding insn 159 to worklist
  Adding insn 157 to worklist
  Adding insn 156 to worklist
  Adding insn 155 to worklist
  Adding insn 153 to worklist
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 149 to worklist
  Adding insn 148 to worklist
  Adding insn 147 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
  Adding insn 143 to worklist
  Adding insn 141 to worklist
  Adding insn 140 to worklist
  Adding insn 139 to worklist
  Adding insn 137 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 129 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 121 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
  Adding insn 117 to worklist
  Adding insn 116 to worklist
  Adding insn 115 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 101 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 93 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 57 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 375 to worklist
  Adding insn 286 to worklist
  Adding insn 348 to worklist
  Adding insn 285 to worklist
  Adding insn 284 to worklist
  Adding insn 283 to worklist
  Adding insn 282 to worklist
  Adding insn 281 to worklist
  Adding insn 280 to worklist
  Adding insn 279 to worklist
  Adding insn 278 to worklist
  Adding insn 277 to worklist
  Adding insn 276 to worklist
  Adding insn 275 to worklist
  Adding insn 274 to worklist
  Adding insn 346 to worklist
  Adding insn 273 to worklist
  Adding insn 345 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
  Adding insn 377 to worklist
  Adding insn 376 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
  Adding insn 353 to worklist
  Adding insn 290 to worklist
  Adding insn 288 to worklist
  Adding insn 328 to worklist
processing block 2 lr out =  1 [dx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 361 to worklist
  Adding insn 355 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 11 (  1.2)
deleting insn with uid = 363.
deleting insn with uid = 37.
;;   ======================================================
;;   -- basic block 2 from 354 to 47 -- after reload
;;   ======================================================

;;	  0-->   354 [--sp]=bp                         :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   355 bp=sp                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   356 [--sp]=r15                        :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   362 use bp                            :nothing
;;	  2-->   357 [--sp]=r14                        :c2_decodern,(c2_p4+c2_p3)
;;	  3-->   358 [--sp]=r13                        :c2_decodern,(c2_p4+c2_p3)
;;	  4-->   359 [--sp]=r12                        :c2_decodern,(c2_p4+c2_p3)
;;	  5-->   360 [--sp]=bx                         :c2_decodern,(c2_p4+c2_p3)
;;	  6-->   361 {sp=sp-0x38;clobber flags;clobber :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   364 unspec/v{0;}                      :c2_decoder0
;;	  7-->    42: debug tmp => 0.0                 :nothing
;;	  7-->    44: debug i => 0x8                   :nothing
;;	 13-->    45 {cx=cx+0x7;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->    33 [bp-0x48]=si                      :c2_decodern,(c2_p4+c2_p3)
;;	 14-->    46 flags=cmp(cx,0x7)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->    34 [bp-0x54]=dx                      :c2_decodern,(c2_p4+c2_p3)
;;	 15-->   327 [bp-0x50]=cx                      :c2_decodern,(c2_p4+c2_p3)
;;	 15-->    47 pc={(flags<=0)?L295:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 15
;;   new head = 354
;;   new tail = 47

deleting insn with uid = 287.
deleting insn with uid = 289.
;;   ======================================================
;;   -- basic block 3 from 49 to 353 -- after reload
;;   ======================================================

;;	  0-->   328 ax=dx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    49 [bp-0x40]=di                      :c2_decodern,(c2_p4+c2_p3)
;;	  0-->   353 xmm2=0.0                          :nothing
;;	  1-->   288 {ax=zxn(ax-0x1);clobber flags;}   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    39 [bp-0x4c]=0x8                     :c2_decodern,(c2_p4+c2_p3)
;;	  2-->   290 ax=ax*0x4+0x4                     :c2_decodern,c2_p0
;;	  3-->   329 [bp-0x38]=ax                      :c2_decodern,(c2_p4+c2_p3)
;;	Ready list (final):  
;;   total time = 3
;;   new head = 49
;;   new tail = 353

;;   ======================================================
;;   -- basic block 4 from 267 to 270 -- after reload
;;   ======================================================

;;	  0-->   267: debug j => 0x8                   :nothing
;;	  0-->   376 ax=[bp-0x54]                      :c2_decodern,c2_p2
;;	  4-->   377 flags=cmp(ax,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   270 pc={(flags<=0)?L268:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 5
;;   new head = 267
;;   new tail = 270

;;   ======================================================
;;   -- basic block 5 from 345 to 325 -- after reload
;;   ======================================================

;;	  0-->   346 ax=[bp-0x48]                      :c2_decodern,c2_p2
;;	  1-->   345 cx=[bp-0x40]                      :c2_decodern,c2_p2
;;	  4-->   274 r14=[ax]                          :c2_decodern,c2_p2
;;	  5-->   276 r12=[ax+0x8]                      :c2_decodern,c2_p2
;;	  6-->   278 r11=[ax+0x10]                     :c2_decodern,c2_p2
;;	  7-->   280 r10=[ax+0x18]                     :c2_decodern,c2_p2
;;	  8-->   282 r8=[ax+0x20]                      :c2_decodern,c2_p2
;;	  9-->   284 si=[ax+0x28]                      :c2_decodern,c2_p2
;;	 10-->   348 ax=[bp-0x48]                      :c2_decodern,c2_p2
;;	 11-->   273 r15=[cx+0x28]                     :c2_decodern,c2_p2
;;	 12-->   275 r13=[cx+0x30]                     :c2_decodern,c2_p2
;;	 13-->   277 bx=[cx+0x38]                      :c2_decodern,c2_p2
;;	 14-->   286 ax=[ax+0x30]                      :c2_decodern,c2_p2
;;	 15-->   279 dx=[cx+0x40]                      :c2_decodern,c2_p2
;;	 16-->   281 r9=[cx+0x48]                      :c2_decodern,c2_p2
;;	 17-->   283 di=[cx+0x50]                      :c2_decodern,c2_p2
;;	 18-->   285 cx=[cx+0x58]                      :c2_decodern,c2_p2
;;	 18-->   349 [bp-0x30]=ax                      :c2_decodern,(c2_p4+c2_p3)
;;	 18-->   375 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 22-->   325 [bp-0x60]=cx                      :c2_decodern,(c2_p4+c2_p3)
;;	Ready list (final):  
;;   total time = 22
;;   new head = 345
;;   new tail = 325

;;   ======================================================
;;   -- basic block 6 from 53 to 257 -- after reload
;;   ======================================================

;;	  0-->    53: debug tmp => 0.0                 :nothing
;;	  0-->    54 xmm0=[r15+ax+0x14]                :c2_decodern,c2_p2
;;	  1-->    59 xmm1=[r15+ax+0x18]                :c2_decodern,c2_p2
;;	  2-->    55 xmm0=xmm0*[r14]                   :c2_decodern,(c2_p2+c2_p0)
;;	  3-->    60 xmm1=xmm1*[r14+0x4]               :c2_decodern,(c2_p2+c2_p0)
;;	  4-->   330 cx=[bp-0x60]                      :c2_decodern,c2_p2
;;	  6-->    57 xmm0=xmm0+xmm2                    :c2_decodern,c2_p1
;;	  6-->    58: debug tmp => xmm0                :nothing
;;	  9-->    61 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	  9-->    62: debug tmp => xmm1                :nothing
;;	  9-->    63 xmm0=[r15+ax+0x1c]                :c2_decodern,c2_p2
;;	 11-->    64 xmm0=xmm0*[r14+0x8]               :c2_decodern,(c2_p2+c2_p0)
;;	 15-->    65 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	 15-->    66: debug tmp => xmm0                :nothing
;;	 15-->    67 xmm1=[r15+ax+0x20]                :c2_decodern,c2_p2
;;	 17-->    68 xmm1=xmm1*[r14+0xc]               :c2_decodern,(c2_p2+c2_p0)
;;	 21-->    69 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	 21-->    70: debug tmp => xmm1                :nothing
;;	 21-->    71 xmm0=[r15+ax+0x24]                :c2_decodern,c2_p2
;;	 23-->    72 xmm0=xmm0*[r14+0x10]              :c2_decodern,(c2_p2+c2_p0)
;;	 27-->    73 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	 27-->    74: debug tmp => xmm0                :nothing
;;	 27-->    75 xmm1=[r15+ax+0x28]                :c2_decodern,c2_p2
;;	 29-->    76 xmm1=xmm1*[r14+0x14]              :c2_decodern,(c2_p2+c2_p0)
;;	 33-->    77 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	 33-->    78: debug tmp => xmm1                :nothing
;;	 33-->    79 xmm0=[r15+ax+0x2c]                :c2_decodern,c2_p2
;;	 35-->    80 xmm0=xmm0*[r14+0x18]              :c2_decodern,(c2_p2+c2_p0)
;;	 39-->    81 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	 39-->    82: debug tmp => xmm0                :nothing
;;	 39-->    83 xmm1=[r13+ax+0x14]                :c2_decodern,c2_p2
;;	 41-->    84 xmm1=xmm1*[r12]                   :c2_decodern,(c2_p2+c2_p0)
;;	 45-->    85 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	 45-->    86: debug tmp => xmm1                :nothing
;;	 45-->    87 xmm0=[r13+ax+0x18]                :c2_decodern,c2_p2
;;	 47-->    88 xmm0=xmm0*[r12+0x4]               :c2_decodern,(c2_p2+c2_p0)
;;	 51-->    89 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	 51-->    90: debug tmp => xmm0                :nothing
;;	 51-->    91 xmm1=[r13+ax+0x1c]                :c2_decodern,c2_p2
;;	 53-->    92 xmm1=xmm1*[r12+0x8]               :c2_decodern,(c2_p2+c2_p0)
;;	 57-->    93 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	 57-->    94: debug tmp => xmm1                :nothing
;;	 57-->    95 xmm0=[r13+ax+0x20]                :c2_decodern,c2_p2
;;	 59-->    96 xmm0=xmm0*[r12+0xc]               :c2_decodern,(c2_p2+c2_p0)
;;	 63-->    97 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	 63-->    98: debug tmp => xmm0                :nothing
;;	 63-->    99 xmm1=[r13+ax+0x24]                :c2_decodern,c2_p2
;;	 65-->   100 xmm1=xmm1*[r12+0x10]              :c2_decodern,(c2_p2+c2_p0)
;;	 69-->   101 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	 69-->   102: debug tmp => xmm1                :nothing
;;	 69-->   103 xmm0=[r13+ax+0x28]                :c2_decodern,c2_p2
;;	 71-->   104 xmm0=xmm0*[r12+0x14]              :c2_decodern,(c2_p2+c2_p0)
;;	 75-->   105 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	 75-->   106: debug tmp => xmm0                :nothing
;;	 75-->   107 xmm1=[r13+ax+0x2c]                :c2_decodern,c2_p2
;;	 77-->   108 xmm1=xmm1*[r12+0x18]              :c2_decodern,(c2_p2+c2_p0)
;;	 81-->   109 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	 81-->   110: debug tmp => xmm1                :nothing
;;	 81-->   111 xmm0=[bx+ax+0x14]                 :c2_decodern,c2_p2
;;	 83-->   112 xmm0=xmm0*[r11]                   :c2_decodern,(c2_p2+c2_p0)
;;	 87-->   113 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	 87-->   114: debug tmp => xmm0                :nothing
;;	 87-->   115 xmm1=[bx+ax+0x18]                 :c2_decodern,c2_p2
;;	 89-->   116 xmm1=xmm1*[r11+0x4]               :c2_decodern,(c2_p2+c2_p0)
;;	 93-->   117 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	 93-->   118: debug tmp => xmm1                :nothing
;;	 93-->   119 xmm0=[bx+ax+0x1c]                 :c2_decodern,c2_p2
;;	 95-->   120 xmm0=xmm0*[r11+0x8]               :c2_decodern,(c2_p2+c2_p0)
;;	 99-->   121 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	 99-->   122: debug tmp => xmm0                :nothing
;;	 99-->   123 xmm1=[bx+ax+0x20]                 :c2_decodern,c2_p2
;;	101-->   124 xmm1=xmm1*[r11+0xc]               :c2_decodern,(c2_p2+c2_p0)
;;	105-->   125 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	105-->   126: debug tmp => xmm1                :nothing
;;	105-->   127 xmm0=[bx+ax+0x24]                 :c2_decodern,c2_p2
;;	107-->   128 xmm0=xmm0*[r11+0x10]              :c2_decodern,(c2_p2+c2_p0)
;;	111-->   129 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	111-->   130: debug tmp => xmm0                :nothing
;;	111-->   131 xmm1=[bx+ax+0x28]                 :c2_decodern,c2_p2
;;	113-->   132 xmm1=xmm1*[r11+0x14]              :c2_decodern,(c2_p2+c2_p0)
;;	117-->   133 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	117-->   134: debug tmp => xmm1                :nothing
;;	117-->   135 xmm0=[bx+ax+0x2c]                 :c2_decodern,c2_p2
;;	119-->   136 xmm0=xmm0*[r11+0x18]              :c2_decodern,(c2_p2+c2_p0)
;;	123-->   137 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	123-->   138: debug tmp => xmm0                :nothing
;;	123-->   139 xmm1=[dx+ax+0x14]                 :c2_decodern,c2_p2
;;	125-->   140 xmm1=xmm1*[r10]                   :c2_decodern,(c2_p2+c2_p0)
;;	129-->   141 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	129-->   142: debug tmp => xmm1                :nothing
;;	129-->   143 xmm0=[dx+ax+0x18]                 :c2_decodern,c2_p2
;;	131-->   144 xmm0=xmm0*[r10+0x4]               :c2_decodern,(c2_p2+c2_p0)
;;	135-->   145 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	135-->   146: debug tmp => xmm0                :nothing
;;	135-->   147 xmm1=[dx+ax+0x1c]                 :c2_decodern,c2_p2
;;	137-->   148 xmm1=xmm1*[r10+0x8]               :c2_decodern,(c2_p2+c2_p0)
;;	141-->   149 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	141-->   150: debug tmp => xmm1                :nothing
;;	141-->   151 xmm0=[dx+ax+0x20]                 :c2_decodern,c2_p2
;;	143-->   152 xmm0=xmm0*[r10+0xc]               :c2_decodern,(c2_p2+c2_p0)
;;	147-->   153 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	147-->   154: debug tmp => xmm0                :nothing
;;	147-->   155 xmm1=[dx+ax+0x24]                 :c2_decodern,c2_p2
;;	149-->   156 xmm1=xmm1*[r10+0x10]              :c2_decodern,(c2_p2+c2_p0)
;;	153-->   157 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	153-->   158: debug tmp => xmm1                :nothing
;;	153-->   159 xmm0=[dx+ax+0x28]                 :c2_decodern,c2_p2
;;	155-->   160 xmm0=xmm0*[r10+0x14]              :c2_decodern,(c2_p2+c2_p0)
;;	159-->   161 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	159-->   162: debug tmp => xmm0                :nothing
;;	159-->   163 xmm1=[dx+ax+0x2c]                 :c2_decodern,c2_p2
;;	161-->   164 xmm1=xmm1*[r10+0x18]              :c2_decodern,(c2_p2+c2_p0)
;;	165-->   165 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	165-->   166: debug tmp => xmm1                :nothing
;;	165-->   167 xmm0=[r9+ax+0x14]                 :c2_decodern,c2_p2
;;	167-->   168 xmm0=xmm0*[r8]                    :c2_decodern,(c2_p2+c2_p0)
;;	171-->   169 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	171-->   170: debug tmp => xmm0                :nothing
;;	171-->   171 xmm1=[r9+ax+0x18]                 :c2_decodern,c2_p2
;;	173-->   172 xmm1=xmm1*[r8+0x4]                :c2_decodern,(c2_p2+c2_p0)
;;	177-->   173 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	177-->   174: debug tmp => xmm1                :nothing
;;	177-->   175 xmm0=[r9+ax+0x1c]                 :c2_decodern,c2_p2
;;	179-->   176 xmm0=xmm0*[r8+0x8]                :c2_decodern,(c2_p2+c2_p0)
;;	183-->   177 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	183-->   178: debug tmp => xmm0                :nothing
;;	183-->   179 xmm1=[r9+ax+0x20]                 :c2_decodern,c2_p2
;;	185-->   180 xmm1=xmm1*[r8+0xc]                :c2_decodern,(c2_p2+c2_p0)
;;	189-->   181 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	189-->   182: debug tmp => xmm1                :nothing
;;	189-->   183 xmm0=[r9+ax+0x24]                 :c2_decodern,c2_p2
;;	191-->   184 xmm0=xmm0*[r8+0x10]               :c2_decodern,(c2_p2+c2_p0)
;;	195-->   185 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	195-->   186: debug tmp => xmm0                :nothing
;;	195-->   187 xmm1=[r9+ax+0x28]                 :c2_decodern,c2_p2
;;	197-->   188 xmm1=xmm1*[r8+0x14]               :c2_decodern,(c2_p2+c2_p0)
;;	201-->   189 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	201-->   190: debug tmp => xmm1                :nothing
;;	201-->   191 xmm0=[r9+ax+0x2c]                 :c2_decodern,c2_p2
;;	203-->   192 xmm0=xmm0*[r8+0x18]               :c2_decodern,(c2_p2+c2_p0)
;;	207-->   193 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	207-->   194: debug tmp => xmm0                :nothing
;;	207-->   195 xmm1=[di+ax+0x14]                 :c2_decodern,c2_p2
;;	209-->   196 xmm1=xmm1*[si]                    :c2_decodern,(c2_p2+c2_p0)
;;	213-->   197 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	213-->   198: debug tmp => xmm1                :nothing
;;	213-->   199 xmm0=[di+ax+0x18]                 :c2_decodern,c2_p2
;;	215-->   200 xmm0=xmm0*[si+0x4]                :c2_decodern,(c2_p2+c2_p0)
;;	219-->   201 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	219-->   202: debug tmp => xmm0                :nothing
;;	219-->   203 xmm1=[di+ax+0x1c]                 :c2_decodern,c2_p2
;;	221-->   204 xmm1=xmm1*[si+0x8]                :c2_decodern,(c2_p2+c2_p0)
;;	225-->   205 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	225-->   206: debug tmp => xmm1                :nothing
;;	225-->   207 xmm0=[di+ax+0x20]                 :c2_decodern,c2_p2
;;	227-->   208 xmm0=xmm0*[si+0xc]                :c2_decodern,(c2_p2+c2_p0)
;;	231-->   209 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	231-->   210: debug tmp => xmm0                :nothing
;;	231-->   211 xmm1=[di+ax+0x24]                 :c2_decodern,c2_p2
;;	233-->   212 xmm1=xmm1*[si+0x10]               :c2_decodern,(c2_p2+c2_p0)
;;	237-->   213 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	237-->   214: debug tmp => xmm1                :nothing
;;	237-->   215 xmm0=[di+ax+0x28]                 :c2_decodern,c2_p2
;;	239-->   216 xmm0=xmm0*[si+0x14]               :c2_decodern,(c2_p2+c2_p0)
;;	243-->   217 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	243-->   218: debug tmp => xmm0                :nothing
;;	243-->   219 xmm1=[di+ax+0x2c]                 :c2_decodern,c2_p2
;;	245-->   220 xmm1=xmm1*[si+0x18]               :c2_decodern,(c2_p2+c2_p0)
;;	249-->   221 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	249-->   222: debug tmp => xmm1                :nothing
;;	249-->   223 xmm0=[cx+ax+0x14]                 :c2_decodern,c2_p2
;;	250-->   331 cx=[bp-0x30]                      :c2_decodern,c2_p2
;;	254-->   224 xmm0=xmm0*[cx]                    :c2_decodern,(c2_p2+c2_p0)
;;	255-->   332 cx=[bp-0x60]                      :c2_decodern,c2_p2
;;	258-->   225 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	258-->   226: debug tmp => xmm0                :nothing
;;	259-->   227 xmm1=[cx+ax+0x18]                 :c2_decodern,c2_p2
;;	260-->   333 cx=[bp-0x30]                      :c2_decodern,c2_p2
;;	264-->   228 xmm1=xmm1*[cx+0x4]                :c2_decodern,(c2_p2+c2_p0)
;;	265-->   334 cx=[bp-0x60]                      :c2_decodern,c2_p2
;;	268-->   229 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	268-->   230: debug tmp => xmm1                :nothing
;;	269-->   231 xmm0=[cx+ax+0x1c]                 :c2_decodern,c2_p2
;;	270-->   335 cx=[bp-0x30]                      :c2_decodern,c2_p2
;;	274-->   232 xmm0=xmm0*[cx+0x8]                :c2_decodern,(c2_p2+c2_p0)
;;	275-->   336 cx=[bp-0x60]                      :c2_decodern,c2_p2
;;	278-->   233 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	278-->   234: debug tmp => xmm0                :nothing
;;	279-->   235 xmm1=[cx+ax+0x20]                 :c2_decodern,c2_p2
;;	280-->   337 cx=[bp-0x30]                      :c2_decodern,c2_p2
;;	284-->   236 xmm1=xmm1*[cx+0xc]                :c2_decodern,(c2_p2+c2_p0)
;;	285-->   338 cx=[bp-0x60]                      :c2_decodern,c2_p2
;;	288-->   237 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	288-->   238: debug tmp => xmm1                :nothing
;;	289-->   239 xmm0=[cx+ax+0x24]                 :c2_decodern,c2_p2
;;	290-->   339 cx=[bp-0x30]                      :c2_decodern,c2_p2
;;	294-->   240 xmm0=xmm0*[cx+0x10]               :c2_decodern,(c2_p2+c2_p0)
;;	295-->   340 cx=[bp-0x60]                      :c2_decodern,c2_p2
;;	298-->   241 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	298-->   242: debug tmp => xmm0                :nothing
;;	299-->   243 xmm1=[cx+ax+0x28]                 :c2_decodern,c2_p2
;;	300-->   341 cx=[bp-0x30]                      :c2_decodern,c2_p2
;;	304-->   244 xmm1=xmm1*[cx+0x14]               :c2_decodern,(c2_p2+c2_p0)
;;	305-->   342 cx=[bp-0x60]                      :c2_decodern,c2_p2
;;	308-->   245 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	308-->   247: debug tmp => [[bp-0x60]+ax+0x2c]*:nothing
;;	309-->   248 xmm0=[cx+ax+0x2c]                 :c2_decodern,c2_p2
;;	310-->   343 cx=[bp-0x30]                      :c2_decodern,c2_p2
;;	314-->   249 xmm0=xmm0*[cx+0x18]               :c2_decodern,(c2_p2+c2_p0)
;;	318-->   250 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	321-->   251 [dx+ax+0x20]=xmm0                 :c2_decodern,(c2_p4+c2_p3)
;;	321-->   253: debug j => D#1                   :nothing
;;	321-->   254 {ax=ax+0x4;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	322-->   256 flags=cmp(ax,[bp-0x38])           :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	326-->   257 pc={(flags!=0)?L255:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 326
;;   new head = 53
;;   new tail = 257

;;   ======================================================
;;   -- basic block 7 from 259 to 264 -- after reload
;;   ======================================================

;;	  0-->   259 {[bp-0x4c]=[bp-0x4c]+0x1;clobber f:c2_decoder0,c2_p2,c2_p0|c2_p1|c2_p5,(c2_p4+c2_p3)
;;	  0-->   261: debug i => [bp-0x4c]             :nothing
;;	  1-->   262 {[bp-0x40]=[bp-0x40]+0x8;clobber f:c2_decoder0,c2_p2,c2_p0|c2_p1|c2_p5,(c2_p4+c2_p3)
;;	  4-->   344 ax=[bp-0x4c]                      :c2_decodern,c2_p2
;;	  8-->   263 flags=cmp([bp-0x50],ax)           :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 12-->   264 pc={(flags>=0)?L265:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 12
;;   new head = 259
;;   new tail = 264

;;   ======================================================
;;   -- basic block 8 from 366 to 373 -- after reload
;;   ======================================================

;;	  0-->   366 {sp=sp+0x38;clobber flags;clobber :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   367 bx=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  5-->   368 r12=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  9-->   369 r13=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 13-->   370 r14=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 17-->   371 r15=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 21-->   372 bp=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 22-->   373 return                            :c2_decoder0
;;	Ready list (final):  
;;   total time = 22
;;   new head = 366
;;   new tail = 373





izp_convolve2D

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={11d,66u} r1={2d,10u} r2={18d,25u} r3={3d,9u} r4={2d,8u} r5={2d,8u} r6={3d,46u} r7={15d,25u} r17={12d,4u} r20={1d,1u} r21={76d,99u} r22={73d,96u} r23={2d,1u} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={2d,7u} r38={2d,7u} r39={1d,7u} r40={1d,7u} r41={3d,9u} r42={3d,9u} r43={3d,9u} r44={3d,9u} r1102={1e} 
;;    total ref usage 706{243d,462u,1e} in 278{278 regular + 0 call} insns.
(note 31 0 40 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 2 [cx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 40 31 37 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 37 40 354 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 354 37 355 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg/f:DI 6 bp)) ../src/izp-gaussian.c:187 42 {*pushdi2_rex64}
     (nil))

(insn/f:TI 355 354 356 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) ../src/izp-gaussian.c:187 62 {*movdi_internal_rex64}
     (nil))

(insn/f 356 355 362 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 44 r15)) ../src/izp-gaussian.c:187 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))

(insn 362 356 357 2 (use (reg/f:DI 6 bp)) ../src/izp-gaussian.c:187 -1
     (nil))

(insn/f:TI 357 362 358 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 43 r14)) ../src/izp-gaussian.c:187 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f:TI 358 357 359 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 42 r13)) ../src/izp-gaussian.c:187 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f:TI 359 358 360 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) ../src/izp-gaussian.c:187 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f:TI 360 359 361 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) ../src/izp-gaussian.c:187 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f:TI 361 360 363 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) ../src/izp-gaussian.c:187 911 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 363 361 364 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 364 363 42 2 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) ../src/izp-gaussian.c:187 631 {blockage}
     (nil))

(debug_insn 42 364 44 2 (var_location:SF tmp (const_double:SF 0.0 [0x0.0p+0])) ../src/izp-gaussian.c:189 -1
     (nil))

(debug_insn 44 42 45 2 (var_location:SI i (const_int 8 [0x8])) -1
     (nil))

(insn:TI 45 44 33 2 (parallel [
            (set (reg:SI 2 cx)
                (plus:SI (reg/v:SI 2 cx [orig:1100 rows ] [1100])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:191 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 33 45 46 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [4 %sfp+-32 S8 A64])
        (reg:DI 4 si [ mat ])) ../src/izp-gaussian.c:187 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ mat ])
        (nil)))

(insn:TI 46 33 34 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 2 cx)
            (const_int 7 [0x7]))) ../src/izp-gaussian.c:191 6 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (nil)))

(insn 34 46 327 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [4 %sfp+-44 S4 A32])
        (reg:SI 1 dx [ cols ])) ../src/izp-gaussian.c:187 64 {*movsi_internal}
     (nil))

(insn:TI 327 34 47 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [4 %sfp+-40 S4 A32])
        (reg:SI 2 cx)) ../src/izp-gaussian.c:191 64 {*movsi_internal}
     (nil))

(jump_insn 47 327 48 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 295)
            (pc))) ../src/izp-gaussian.c:191 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 295)
;; End of basic block 2 -> ( 3 8)
;; lr  out 	 1 [dx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 5 [di] 6 [bp] 7 [sp] 20 [frame]


;; Succ edge  3 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  8 [9.0%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 23 [xmm2]
;; live  in  	 1 [dx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 23 [xmm2]
;; live  kill	 17 [flags]

;; Pred edge  2 [91.0%]  (fallthru,can_fallthru)
(note 48 47 287 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 287 48 289 3 NOTE_INSN_DELETED)

(note 289 287 328 3 NOTE_INSN_DELETED)

(insn:TI 328 289 49 3 (set (reg:SI 0 ax)
        (reg:SI 1 dx [ cols ])) ../src/izp-gaussian.c:186 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ cols ])
        (nil)))

(insn 49 328 353 3 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [4 %sfp+-24 S8 A64])
        (reg/v/f:DI 5 di [orig:1097 image ] [1097])) ../src/izp-gaussian.c:191 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:1097 image ] [1097])
        (nil)))

(insn 353 49 288 3 (set (reg:SF 23 xmm2 [1210])
        (const_double:SF 0.0 [0x0.0p+0])) 110 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn:TI 288 353 39 3 (parallel [
            (set (reg:DI 0 ax [1207])
                (zero_extend:DI (plus:SI (reg:SI 0 ax)
                        (const_int -1 [0xffffffffffffffff]))))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:186 254 {*addsi_1_zext}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 39 288 290 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [4 %sfp+-36 S4 A32])
        (const_int 8 [0x8])) ../src/izp-gaussian.c:191 64 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(insn:TI 290 39 329 3 (set (reg:DI 0 ax)
        (plus:DI (mult:DI (reg:DI 0 ax [1207])
                (const_int 4 [0x4]))
            (const_int 4 [0x4]))) ../src/izp-gaussian.c:186 249 {*lea_1}
     (nil))

(insn:TI 329 290 265 3 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [4 %sfp+-16 S8 A64])
        (reg:DI 0 ax)) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 7 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	

;; Pred edge  7 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
(code_label 265 329 266 4 3 "" [1 uses])

(note 266 265 267 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(debug_insn 267 266 376 4 (var_location:SI j (const_int 8 [0x8])) -1
     (nil))

(insn:TI 376 267 377 4 (set (reg:SI 0 ax)
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [4 %sfp+-44 S4 A32])) ../src/izp-gaussian.c:192 64 {*movsi_internal}
     (nil))

(insn:TI 377 376 270 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax)
            (const_int 0 [0]))) ../src/izp-gaussian.c:192 2 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(jump_insn:TI 270 377 271 4 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 268)
            (pc))) ../src/izp-gaussian.c:192 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 268)
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]


;; Succ edge  5 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  7 [9.0%]  (can_fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  4 [91.0%]  (fallthru,can_fallthru)
(note 271 270 346 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 346 271 345 5 (set (reg:DI 0 ax)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [4 %sfp+-32 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 345 346 274 5 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [4 %sfp+-24 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 274 345 276 5 (set (reg/f:DI 43 r14 [orig:1070 pretmp.355 ] [1070])
        (mem/f:DI (reg:DI 0 ax) [2 *mat_22(D)+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 276 274 278 5 (set (reg/f:DI 41 r12 [orig:1072 pretmp.361 ] [1072])
        (mem/f:DI (plus:DI (reg:DI 0 ax)
                (const_int 8 [0x8])) [2 MEM[(float * *)mat_22(D) + 8B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 278 276 280 5 (set (reg/f:DI 40 r11 [orig:1074 pretmp.364 ] [1074])
        (mem/f:DI (plus:DI (reg:DI 0 ax)
                (const_int 16 [0x10])) [2 MEM[(float * *)mat_22(D) + 16B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 280 278 282 5 (set (reg/f:DI 39 r10 [orig:1076 pretmp.367 ] [1076])
        (mem/f:DI (plus:DI (reg:DI 0 ax)
                (const_int 24 [0x18])) [2 MEM[(float * *)mat_22(D) + 24B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 282 280 284 5 (set (reg/f:DI 37 r8 [orig:1078 pretmp.370 ] [1078])
        (mem/f:DI (plus:DI (reg:DI 0 ax)
                (const_int 32 [0x20])) [2 MEM[(float * *)mat_22(D) + 32B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 284 282 348 5 (set (reg/f:DI 4 si [orig:1080 pretmp.373 ] [1080])
        (mem/f:DI (plus:DI (reg:DI 0 ax)
                (const_int 40 [0x28])) [2 MEM[(float * *)mat_22(D) + 40B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:TI 348 284 273 5 (set (reg:DI 0 ax)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [4 %sfp+-32 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 273 348 275 5 (set (reg/f:DI 44 r15 [orig:1069 pretmp.352 ] [1069])
        (mem/f:DI (plus:DI (reg:DI 2 cx)
                (const_int 40 [0x28])) [2 MEM[base: D.7970_92, offset: 40B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 275 273 277 5 (set (reg/f:DI 42 r13 [orig:1071 pretmp.361 ] [1071])
        (mem/f:DI (plus:DI (reg:DI 2 cx)
                (const_int 48 [0x30])) [2 MEM[base: D.7970_92, offset: 48B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 277 275 286 5 (set (reg/f:DI 3 bx [orig:1073 pretmp.364 ] [1073])
        (mem/f:DI (plus:DI (reg:DI 2 cx)
                (const_int 56 [0x38])) [2 MEM[base: D.7970_92, offset: 56B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 286 277 279 5 (set (reg:DI 0 ax)
        (mem/f:DI (plus:DI (reg:DI 0 ax)
                (const_int 48 [0x30])) [2 MEM[(float * *)mat_22(D) + 48B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 279 286 281 5 (set (reg/f:DI 1 dx [orig:1075 pretmp.367 ] [1075])
        (mem/f:DI (plus:DI (reg:DI 2 cx)
                (const_int 64 [0x40])) [2 MEM[base: D.7970_92, offset: 64B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 281 279 283 5 (set (reg/f:DI 38 r9 [orig:1077 pretmp.370 ] [1077])
        (mem/f:DI (plus:DI (reg:DI 2 cx)
                (const_int 72 [0x48])) [2 MEM[base: D.7970_92, offset: 72B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 283 281 285 5 (set (reg/f:DI 5 di [orig:1079 pretmp.373 ] [1079])
        (mem/f:DI (plus:DI (reg:DI 2 cx)
                (const_int 80 [0x50])) [2 MEM[base: D.7970_92, offset: 80B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 285 283 349 5 (set (reg/f:DI 2 cx [orig:1081 pretmp.376 ] [1081])
        (mem/f:DI (plus:DI (reg:DI 2 cx [0])
                (const_int 88 [0x58])) [2 MEM[base: D.7970_92, offset: 88B]+0 S8 A64])) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (nil))

(insn 349 285 375 5 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 %sfp+-8 S8 A64])
        (reg:DI 0 ax)) ../src/izp-gaussian.c:186 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 375 349 325 5 (parallel [
            (set (reg:DI 0 ax [orig:94 ivtmp.387 ] [94])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:186 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 325 375 255 5 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [4 %sfp+-56 S8 A64])
        (reg/f:DI 2 cx [orig:1081 pretmp.376 ] [1081])) 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:1081 pretmp.376 ] [1081])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  6 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 6 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  kill	 17 [flags]

;; Pred edge  6 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  5 [100.0%]  (fallthru,can_fallthru)
(code_label 255 325 52 6 4 "" [1 uses])

(note 52 255 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(debug_insn 53 52 54 6 (var_location:SF tmp (const_double:SF 0.0 [0x0.0p+0])) ../src/izp-gaussian.c:193 -1
     (nil))

(insn:TI 54 53 59 6 (set (reg/v:SF 21 xmm0 [orig:104 tmp ] [104])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 44 r15 [orig:1069 pretmp.352 ] [1069])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 20 [0x14])) [3 MEM[base: pretmp.352_1177, index: ivtmp.387_42, offset: 20B]+0 S4 A32])) ../src/izp-gaussian.c:195 110 {*movsf_internal}
     (nil))

(insn:TI 59 54 55 6 (set (reg/v:SF 22 xmm1 [orig:111 tmp ] [111])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 44 r15 [orig:1069 pretmp.352 ] [1069])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 24 [0x18])) [3 MEM[base: pretmp.352_1177, index: ivtmp.387_42, offset: 24B]+0 S4 A32])) ../src/izp-gaussian.c:196 110 {*movsf_internal}
     (nil))

(insn:TI 55 59 60 6 (set (reg/v:SF 21 xmm0 [orig:104 tmp ] [104])
        (mult:SF (reg/v:SF 21 xmm0 [orig:104 tmp ] [104])
            (mem:SF (reg/f:DI 43 r14 [orig:1070 pretmp.355 ] [1070]) [3 *pretmp.355_1181+0 S4 A32]))) ../src/izp-gaussian.c:195 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 60 55 330 6 (set (reg/v:SF 22 xmm1 [orig:111 tmp ] [111])
        (mult:SF (reg/v:SF 22 xmm1 [orig:111 tmp ] [111])
            (mem:SF (plus:DI (reg/f:DI 43 r14 [orig:1070 pretmp.355 ] [1070])
                    (const_int 4 [0x4])) [3 MEM[(float *)pretmp.355_1181 + 4B]+0 S4 A32]))) ../src/izp-gaussian.c:196 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 330 60 57 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [4 %sfp+-56 S8 A64])) ../src/izp-gaussian.c:249 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 57 330 58 6 (set (reg/v:SF 21 xmm0 [orig:104 tmp ] [104])
        (plus:SF (reg/v:SF 21 xmm0 [orig:104 tmp ] [104])
            (reg:SF 23 xmm2 [1210]))) ../src/izp-gaussian.c:195 729 {*fop_sf_comm_sse}
     (expr_list:REG_EQUAL (plus:SF (reg:SF 1102)
            (const_double:SF 0.0 [0x0.0p+0]))
        (nil)))

(debug_insn 58 57 61 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:104 tmp ] [104])) ../src/izp-gaussian.c:195 -1
     (nil))

(insn:TI 61 58 62 6 (set (reg/v:SF 22 xmm1 [orig:111 tmp ] [111])
        (plus:SF (reg/v:SF 22 xmm1 [orig:111 tmp ] [111])
            (reg/v:SF 21 xmm0 [orig:104 tmp ] [104]))) ../src/izp-gaussian.c:196 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:104 tmp ] [104])
        (nil)))

(debug_insn 62 61 63 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:111 tmp ] [111])) ../src/izp-gaussian.c:196 -1
     (nil))

(insn 63 62 64 6 (set (reg/v:SF 21 xmm0 [orig:121 tmp ] [121])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 44 r15 [orig:1069 pretmp.352 ] [1069])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 28 [0x1c])) [3 MEM[base: pretmp.352_1177, index: ivtmp.387_42, offset: 28B]+0 S4 A32])) ../src/izp-gaussian.c:197 110 {*movsf_internal}
     (nil))

(insn:TI 64 63 65 6 (set (reg/v:SF 21 xmm0 [orig:121 tmp ] [121])
        (mult:SF (reg/v:SF 21 xmm0 [orig:121 tmp ] [121])
            (mem:SF (plus:DI (reg/f:DI 43 r14 [orig:1070 pretmp.355 ] [1070])
                    (const_int 8 [0x8])) [3 MEM[(float *)pretmp.355_1181 + 8B]+0 S4 A32]))) ../src/izp-gaussian.c:197 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 65 64 66 6 (set (reg/v:SF 21 xmm0 [orig:121 tmp ] [121])
        (plus:SF (reg/v:SF 21 xmm0 [orig:121 tmp ] [121])
            (reg/v:SF 22 xmm1 [orig:111 tmp ] [111]))) ../src/izp-gaussian.c:197 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:111 tmp ] [111])
        (nil)))

(debug_insn 66 65 67 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:121 tmp ] [121])) ../src/izp-gaussian.c:197 -1
     (nil))

(insn 67 66 68 6 (set (reg/v:SF 22 xmm1 [orig:132 tmp ] [132])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 44 r15 [orig:1069 pretmp.352 ] [1069])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 32 [0x20])) [3 MEM[base: pretmp.352_1177, index: ivtmp.387_42, offset: 32B]+0 S4 A32])) ../src/izp-gaussian.c:198 110 {*movsf_internal}
     (nil))

(insn:TI 68 67 69 6 (set (reg/v:SF 22 xmm1 [orig:132 tmp ] [132])
        (mult:SF (reg/v:SF 22 xmm1 [orig:132 tmp ] [132])
            (mem:SF (plus:DI (reg/f:DI 43 r14 [orig:1070 pretmp.355 ] [1070])
                    (const_int 12 [0xc])) [3 MEM[(float *)pretmp.355_1181 + 12B]+0 S4 A32]))) ../src/izp-gaussian.c:198 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 69 68 70 6 (set (reg/v:SF 22 xmm1 [orig:132 tmp ] [132])
        (plus:SF (reg/v:SF 22 xmm1 [orig:132 tmp ] [132])
            (reg/v:SF 21 xmm0 [orig:121 tmp ] [121]))) ../src/izp-gaussian.c:198 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:121 tmp ] [121])
        (nil)))

(debug_insn 70 69 71 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:132 tmp ] [132])) ../src/izp-gaussian.c:198 -1
     (nil))

(insn 71 70 72 6 (set (reg/v:SF 21 xmm0 [orig:143 tmp ] [143])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 44 r15 [orig:1069 pretmp.352 ] [1069])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 36 [0x24])) [3 MEM[base: pretmp.352_1177, index: ivtmp.387_42, offset: 36B]+0 S4 A32])) ../src/izp-gaussian.c:199 110 {*movsf_internal}
     (nil))

(insn:TI 72 71 73 6 (set (reg/v:SF 21 xmm0 [orig:143 tmp ] [143])
        (mult:SF (reg/v:SF 21 xmm0 [orig:143 tmp ] [143])
            (mem:SF (plus:DI (reg/f:DI 43 r14 [orig:1070 pretmp.355 ] [1070])
                    (const_int 16 [0x10])) [3 MEM[(float *)pretmp.355_1181 + 16B]+0 S4 A32]))) ../src/izp-gaussian.c:199 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 73 72 74 6 (set (reg/v:SF 21 xmm0 [orig:143 tmp ] [143])
        (plus:SF (reg/v:SF 21 xmm0 [orig:143 tmp ] [143])
            (reg/v:SF 22 xmm1 [orig:132 tmp ] [132]))) ../src/izp-gaussian.c:199 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:132 tmp ] [132])
        (nil)))

(debug_insn 74 73 75 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:143 tmp ] [143])) ../src/izp-gaussian.c:199 -1
     (nil))

(insn 75 74 76 6 (set (reg/v:SF 22 xmm1 [orig:155 tmp ] [155])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 44 r15 [orig:1069 pretmp.352 ] [1069])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 40 [0x28])) [3 MEM[base: pretmp.352_1177, index: ivtmp.387_42, offset: 40B]+0 S4 A32])) ../src/izp-gaussian.c:200 110 {*movsf_internal}
     (nil))

(insn:TI 76 75 77 6 (set (reg/v:SF 22 xmm1 [orig:155 tmp ] [155])
        (mult:SF (reg/v:SF 22 xmm1 [orig:155 tmp ] [155])
            (mem:SF (plus:DI (reg/f:DI 43 r14 [orig:1070 pretmp.355 ] [1070])
                    (const_int 20 [0x14])) [3 MEM[(float *)pretmp.355_1181 + 20B]+0 S4 A32]))) ../src/izp-gaussian.c:200 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 77 76 78 6 (set (reg/v:SF 22 xmm1 [orig:155 tmp ] [155])
        (plus:SF (reg/v:SF 22 xmm1 [orig:155 tmp ] [155])
            (reg/v:SF 21 xmm0 [orig:143 tmp ] [143]))) ../src/izp-gaussian.c:200 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:143 tmp ] [143])
        (nil)))

(debug_insn 78 77 79 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:155 tmp ] [155])) ../src/izp-gaussian.c:200 -1
     (nil))

(insn 79 78 80 6 (set (reg/v:SF 21 xmm0 [orig:166 tmp ] [166])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 44 r15 [orig:1069 pretmp.352 ] [1069])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 44 [0x2c])) [3 MEM[base: pretmp.352_1177, index: ivtmp.387_42, offset: 44B]+0 S4 A32])) ../src/izp-gaussian.c:201 110 {*movsf_internal}
     (nil))

(insn:TI 80 79 81 6 (set (reg/v:SF 21 xmm0 [orig:166 tmp ] [166])
        (mult:SF (reg/v:SF 21 xmm0 [orig:166 tmp ] [166])
            (mem:SF (plus:DI (reg/f:DI 43 r14 [orig:1070 pretmp.355 ] [1070])
                    (const_int 24 [0x18])) [3 MEM[(float *)pretmp.355_1181 + 24B]+0 S4 A32]))) ../src/izp-gaussian.c:201 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 81 80 82 6 (set (reg/v:SF 21 xmm0 [orig:166 tmp ] [166])
        (plus:SF (reg/v:SF 21 xmm0 [orig:166 tmp ] [166])
            (reg/v:SF 22 xmm1 [orig:155 tmp ] [155]))) ../src/izp-gaussian.c:201 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:155 tmp ] [155])
        (nil)))

(debug_insn 82 81 83 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:166 tmp ] [166])) ../src/izp-gaussian.c:201 -1
     (nil))

(insn 83 82 84 6 (set (reg/v:SF 22 xmm1 [orig:174 tmp ] [174])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 42 r13 [orig:1071 pretmp.361 ] [1071])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 20 [0x14])) [3 MEM[base: pretmp.361_1197, index: ivtmp.387_42, offset: 20B]+0 S4 A32])) ../src/izp-gaussian.c:204 110 {*movsf_internal}
     (nil))

(insn:TI 84 83 85 6 (set (reg/v:SF 22 xmm1 [orig:174 tmp ] [174])
        (mult:SF (reg/v:SF 22 xmm1 [orig:174 tmp ] [174])
            (mem:SF (reg/f:DI 41 r12 [orig:1072 pretmp.361 ] [1072]) [3 *pretmp.361_1198+0 S4 A32]))) ../src/izp-gaussian.c:204 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 85 84 86 6 (set (reg/v:SF 22 xmm1 [orig:174 tmp ] [174])
        (plus:SF (reg/v:SF 22 xmm1 [orig:174 tmp ] [174])
            (reg/v:SF 21 xmm0 [orig:166 tmp ] [166]))) ../src/izp-gaussian.c:204 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:166 tmp ] [166])
        (nil)))

(debug_insn 86 85 87 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:174 tmp ] [174])) ../src/izp-gaussian.c:204 -1
     (nil))

(insn 87 86 88 6 (set (reg/v:SF 21 xmm0 [orig:187 tmp ] [187])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 42 r13 [orig:1071 pretmp.361 ] [1071])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 24 [0x18])) [3 MEM[base: pretmp.361_1197, index: ivtmp.387_42, offset: 24B]+0 S4 A32])) ../src/izp-gaussian.c:205 110 {*movsf_internal}
     (nil))

(insn:TI 88 87 89 6 (set (reg/v:SF 21 xmm0 [orig:187 tmp ] [187])
        (mult:SF (reg/v:SF 21 xmm0 [orig:187 tmp ] [187])
            (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:1072 pretmp.361 ] [1072])
                    (const_int 4 [0x4])) [3 MEM[(float *)pretmp.361_1198 + 4B]+0 S4 A32]))) ../src/izp-gaussian.c:205 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 89 88 90 6 (set (reg/v:SF 21 xmm0 [orig:187 tmp ] [187])
        (plus:SF (reg/v:SF 21 xmm0 [orig:187 tmp ] [187])
            (reg/v:SF 22 xmm1 [orig:174 tmp ] [174]))) ../src/izp-gaussian.c:205 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:174 tmp ] [174])
        (nil)))

(debug_insn 90 89 91 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:187 tmp ] [187])) ../src/izp-gaussian.c:205 -1
     (nil))

(insn 91 90 92 6 (set (reg/v:SF 22 xmm1 [orig:200 tmp ] [200])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 42 r13 [orig:1071 pretmp.361 ] [1071])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 28 [0x1c])) [3 MEM[base: pretmp.361_1197, index: ivtmp.387_42, offset: 28B]+0 S4 A32])) ../src/izp-gaussian.c:206 110 {*movsf_internal}
     (nil))

(insn:TI 92 91 93 6 (set (reg/v:SF 22 xmm1 [orig:200 tmp ] [200])
        (mult:SF (reg/v:SF 22 xmm1 [orig:200 tmp ] [200])
            (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:1072 pretmp.361 ] [1072])
                    (const_int 8 [0x8])) [3 MEM[(float *)pretmp.361_1198 + 8B]+0 S4 A32]))) ../src/izp-gaussian.c:206 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 93 92 94 6 (set (reg/v:SF 22 xmm1 [orig:200 tmp ] [200])
        (plus:SF (reg/v:SF 22 xmm1 [orig:200 tmp ] [200])
            (reg/v:SF 21 xmm0 [orig:187 tmp ] [187]))) ../src/izp-gaussian.c:206 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:187 tmp ] [187])
        (nil)))

(debug_insn 94 93 95 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:200 tmp ] [200])) ../src/izp-gaussian.c:206 -1
     (nil))

(insn 95 94 96 6 (set (reg/v:SF 21 xmm0 [orig:212 tmp ] [212])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 42 r13 [orig:1071 pretmp.361 ] [1071])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 32 [0x20])) [3 MEM[base: pretmp.361_1197, index: ivtmp.387_42, offset: 32B]+0 S4 A32])) ../src/izp-gaussian.c:207 110 {*movsf_internal}
     (nil))

(insn:TI 96 95 97 6 (set (reg/v:SF 21 xmm0 [orig:212 tmp ] [212])
        (mult:SF (reg/v:SF 21 xmm0 [orig:212 tmp ] [212])
            (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:1072 pretmp.361 ] [1072])
                    (const_int 12 [0xc])) [3 MEM[(float *)pretmp.361_1198 + 12B]+0 S4 A32]))) ../src/izp-gaussian.c:207 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 97 96 98 6 (set (reg/v:SF 21 xmm0 [orig:212 tmp ] [212])
        (plus:SF (reg/v:SF 21 xmm0 [orig:212 tmp ] [212])
            (reg/v:SF 22 xmm1 [orig:200 tmp ] [200]))) ../src/izp-gaussian.c:207 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:200 tmp ] [200])
        (nil)))

(debug_insn 98 97 99 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:212 tmp ] [212])) ../src/izp-gaussian.c:207 -1
     (nil))

(insn 99 98 100 6 (set (reg/v:SF 22 xmm1 [orig:225 tmp ] [225])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 42 r13 [orig:1071 pretmp.361 ] [1071])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 36 [0x24])) [3 MEM[base: pretmp.361_1197, index: ivtmp.387_42, offset: 36B]+0 S4 A32])) ../src/izp-gaussian.c:208 110 {*movsf_internal}
     (nil))

(insn:TI 100 99 101 6 (set (reg/v:SF 22 xmm1 [orig:225 tmp ] [225])
        (mult:SF (reg/v:SF 22 xmm1 [orig:225 tmp ] [225])
            (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:1072 pretmp.361 ] [1072])
                    (const_int 16 [0x10])) [3 MEM[(float *)pretmp.361_1198 + 16B]+0 S4 A32]))) ../src/izp-gaussian.c:208 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 101 100 102 6 (set (reg/v:SF 22 xmm1 [orig:225 tmp ] [225])
        (plus:SF (reg/v:SF 22 xmm1 [orig:225 tmp ] [225])
            (reg/v:SF 21 xmm0 [orig:212 tmp ] [212]))) ../src/izp-gaussian.c:208 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:212 tmp ] [212])
        (nil)))

(debug_insn 102 101 103 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:225 tmp ] [225])) ../src/izp-gaussian.c:208 -1
     (nil))

(insn 103 102 104 6 (set (reg/v:SF 21 xmm0 [orig:238 tmp ] [238])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 42 r13 [orig:1071 pretmp.361 ] [1071])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 40 [0x28])) [3 MEM[base: pretmp.361_1197, index: ivtmp.387_42, offset: 40B]+0 S4 A32])) ../src/izp-gaussian.c:209 110 {*movsf_internal}
     (nil))

(insn:TI 104 103 105 6 (set (reg/v:SF 21 xmm0 [orig:238 tmp ] [238])
        (mult:SF (reg/v:SF 21 xmm0 [orig:238 tmp ] [238])
            (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:1072 pretmp.361 ] [1072])
                    (const_int 20 [0x14])) [3 MEM[(float *)pretmp.361_1198 + 20B]+0 S4 A32]))) ../src/izp-gaussian.c:209 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 105 104 106 6 (set (reg/v:SF 21 xmm0 [orig:238 tmp ] [238])
        (plus:SF (reg/v:SF 21 xmm0 [orig:238 tmp ] [238])
            (reg/v:SF 22 xmm1 [orig:225 tmp ] [225]))) ../src/izp-gaussian.c:209 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:225 tmp ] [225])
        (nil)))

(debug_insn 106 105 107 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:238 tmp ] [238])) ../src/izp-gaussian.c:209 -1
     (nil))

(insn 107 106 108 6 (set (reg/v:SF 22 xmm1 [orig:251 tmp ] [251])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 42 r13 [orig:1071 pretmp.361 ] [1071])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 44 [0x2c])) [3 MEM[base: pretmp.361_1197, index: ivtmp.387_42, offset: 44B]+0 S4 A32])) ../src/izp-gaussian.c:210 110 {*movsf_internal}
     (nil))

(insn:TI 108 107 109 6 (set (reg/v:SF 22 xmm1 [orig:251 tmp ] [251])
        (mult:SF (reg/v:SF 22 xmm1 [orig:251 tmp ] [251])
            (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:1072 pretmp.361 ] [1072])
                    (const_int 24 [0x18])) [3 MEM[(float *)pretmp.361_1198 + 24B]+0 S4 A32]))) ../src/izp-gaussian.c:210 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 109 108 110 6 (set (reg/v:SF 22 xmm1 [orig:251 tmp ] [251])
        (plus:SF (reg/v:SF 22 xmm1 [orig:251 tmp ] [251])
            (reg/v:SF 21 xmm0 [orig:238 tmp ] [238]))) ../src/izp-gaussian.c:210 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:238 tmp ] [238])
        (nil)))

(debug_insn 110 109 111 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:251 tmp ] [251])) ../src/izp-gaussian.c:210 -1
     (nil))

(insn 111 110 112 6 (set (reg/v:SF 21 xmm0 [orig:259 tmp ] [259])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 3 bx [orig:1073 pretmp.364 ] [1073])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 20 [0x14])) [3 MEM[base: pretmp.364_1203, index: ivtmp.387_42, offset: 20B]+0 S4 A32])) ../src/izp-gaussian.c:213 110 {*movsf_internal}
     (nil))

(insn:TI 112 111 113 6 (set (reg/v:SF 21 xmm0 [orig:259 tmp ] [259])
        (mult:SF (reg/v:SF 21 xmm0 [orig:259 tmp ] [259])
            (mem:SF (reg/f:DI 40 r11 [orig:1074 pretmp.364 ] [1074]) [3 *pretmp.364_1204+0 S4 A32]))) ../src/izp-gaussian.c:213 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 113 112 114 6 (set (reg/v:SF 21 xmm0 [orig:259 tmp ] [259])
        (plus:SF (reg/v:SF 21 xmm0 [orig:259 tmp ] [259])
            (reg/v:SF 22 xmm1 [orig:251 tmp ] [251]))) ../src/izp-gaussian.c:213 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:251 tmp ] [251])
        (nil)))

(debug_insn 114 113 115 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:259 tmp ] [259])) ../src/izp-gaussian.c:213 -1
     (nil))

(insn 115 114 116 6 (set (reg/v:SF 22 xmm1 [orig:272 tmp ] [272])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 3 bx [orig:1073 pretmp.364 ] [1073])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 24 [0x18])) [3 MEM[base: pretmp.364_1203, index: ivtmp.387_42, offset: 24B]+0 S4 A32])) ../src/izp-gaussian.c:214 110 {*movsf_internal}
     (nil))

(insn:TI 116 115 117 6 (set (reg/v:SF 22 xmm1 [orig:272 tmp ] [272])
        (mult:SF (reg/v:SF 22 xmm1 [orig:272 tmp ] [272])
            (mem:SF (plus:DI (reg/f:DI 40 r11 [orig:1074 pretmp.364 ] [1074])
                    (const_int 4 [0x4])) [3 MEM[(float *)pretmp.364_1204 + 4B]+0 S4 A32]))) ../src/izp-gaussian.c:214 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 117 116 118 6 (set (reg/v:SF 22 xmm1 [orig:272 tmp ] [272])
        (plus:SF (reg/v:SF 22 xmm1 [orig:272 tmp ] [272])
            (reg/v:SF 21 xmm0 [orig:259 tmp ] [259]))) ../src/izp-gaussian.c:214 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:259 tmp ] [259])
        (nil)))

(debug_insn 118 117 119 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:272 tmp ] [272])) ../src/izp-gaussian.c:214 -1
     (nil))

(insn 119 118 120 6 (set (reg/v:SF 21 xmm0 [orig:285 tmp ] [285])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 3 bx [orig:1073 pretmp.364 ] [1073])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 28 [0x1c])) [3 MEM[base: pretmp.364_1203, index: ivtmp.387_42, offset: 28B]+0 S4 A32])) ../src/izp-gaussian.c:215 110 {*movsf_internal}
     (nil))

(insn:TI 120 119 121 6 (set (reg/v:SF 21 xmm0 [orig:285 tmp ] [285])
        (mult:SF (reg/v:SF 21 xmm0 [orig:285 tmp ] [285])
            (mem:SF (plus:DI (reg/f:DI 40 r11 [orig:1074 pretmp.364 ] [1074])
                    (const_int 8 [0x8])) [3 MEM[(float *)pretmp.364_1204 + 8B]+0 S4 A32]))) ../src/izp-gaussian.c:215 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 121 120 122 6 (set (reg/v:SF 21 xmm0 [orig:285 tmp ] [285])
        (plus:SF (reg/v:SF 21 xmm0 [orig:285 tmp ] [285])
            (reg/v:SF 22 xmm1 [orig:272 tmp ] [272]))) ../src/izp-gaussian.c:215 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:272 tmp ] [272])
        (nil)))

(debug_insn 122 121 123 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:285 tmp ] [285])) ../src/izp-gaussian.c:215 -1
     (nil))

(insn 123 122 124 6 (set (reg/v:SF 22 xmm1 [orig:297 tmp ] [297])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 3 bx [orig:1073 pretmp.364 ] [1073])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 32 [0x20])) [3 MEM[base: pretmp.364_1203, index: ivtmp.387_42, offset: 32B]+0 S4 A32])) ../src/izp-gaussian.c:216 110 {*movsf_internal}
     (nil))

(insn:TI 124 123 125 6 (set (reg/v:SF 22 xmm1 [orig:297 tmp ] [297])
        (mult:SF (reg/v:SF 22 xmm1 [orig:297 tmp ] [297])
            (mem:SF (plus:DI (reg/f:DI 40 r11 [orig:1074 pretmp.364 ] [1074])
                    (const_int 12 [0xc])) [3 MEM[(float *)pretmp.364_1204 + 12B]+0 S4 A32]))) ../src/izp-gaussian.c:216 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 125 124 126 6 (set (reg/v:SF 22 xmm1 [orig:297 tmp ] [297])
        (plus:SF (reg/v:SF 22 xmm1 [orig:297 tmp ] [297])
            (reg/v:SF 21 xmm0 [orig:285 tmp ] [285]))) ../src/izp-gaussian.c:216 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:285 tmp ] [285])
        (nil)))

(debug_insn 126 125 127 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:297 tmp ] [297])) ../src/izp-gaussian.c:216 -1
     (nil))

(insn 127 126 128 6 (set (reg/v:SF 21 xmm0 [orig:310 tmp ] [310])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 3 bx [orig:1073 pretmp.364 ] [1073])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 36 [0x24])) [3 MEM[base: pretmp.364_1203, index: ivtmp.387_42, offset: 36B]+0 S4 A32])) ../src/izp-gaussian.c:217 110 {*movsf_internal}
     (nil))

(insn:TI 128 127 129 6 (set (reg/v:SF 21 xmm0 [orig:310 tmp ] [310])
        (mult:SF (reg/v:SF 21 xmm0 [orig:310 tmp ] [310])
            (mem:SF (plus:DI (reg/f:DI 40 r11 [orig:1074 pretmp.364 ] [1074])
                    (const_int 16 [0x10])) [3 MEM[(float *)pretmp.364_1204 + 16B]+0 S4 A32]))) ../src/izp-gaussian.c:217 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 129 128 130 6 (set (reg/v:SF 21 xmm0 [orig:310 tmp ] [310])
        (plus:SF (reg/v:SF 21 xmm0 [orig:310 tmp ] [310])
            (reg/v:SF 22 xmm1 [orig:297 tmp ] [297]))) ../src/izp-gaussian.c:217 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:297 tmp ] [297])
        (nil)))

(debug_insn 130 129 131 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:310 tmp ] [310])) ../src/izp-gaussian.c:217 -1
     (nil))

(insn 131 130 132 6 (set (reg/v:SF 22 xmm1 [orig:323 tmp ] [323])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 3 bx [orig:1073 pretmp.364 ] [1073])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 40 [0x28])) [3 MEM[base: pretmp.364_1203, index: ivtmp.387_42, offset: 40B]+0 S4 A32])) ../src/izp-gaussian.c:218 110 {*movsf_internal}
     (nil))

(insn:TI 132 131 133 6 (set (reg/v:SF 22 xmm1 [orig:323 tmp ] [323])
        (mult:SF (reg/v:SF 22 xmm1 [orig:323 tmp ] [323])
            (mem:SF (plus:DI (reg/f:DI 40 r11 [orig:1074 pretmp.364 ] [1074])
                    (const_int 20 [0x14])) [3 MEM[(float *)pretmp.364_1204 + 20B]+0 S4 A32]))) ../src/izp-gaussian.c:218 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 133 132 134 6 (set (reg/v:SF 22 xmm1 [orig:323 tmp ] [323])
        (plus:SF (reg/v:SF 22 xmm1 [orig:323 tmp ] [323])
            (reg/v:SF 21 xmm0 [orig:310 tmp ] [310]))) ../src/izp-gaussian.c:218 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:310 tmp ] [310])
        (nil)))

(debug_insn 134 133 135 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:323 tmp ] [323])) ../src/izp-gaussian.c:218 -1
     (nil))

(insn 135 134 136 6 (set (reg/v:SF 21 xmm0 [orig:336 tmp ] [336])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 3 bx [orig:1073 pretmp.364 ] [1073])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 44 [0x2c])) [3 MEM[base: pretmp.364_1203, index: ivtmp.387_42, offset: 44B]+0 S4 A32])) ../src/izp-gaussian.c:219 110 {*movsf_internal}
     (nil))

(insn:TI 136 135 137 6 (set (reg/v:SF 21 xmm0 [orig:336 tmp ] [336])
        (mult:SF (reg/v:SF 21 xmm0 [orig:336 tmp ] [336])
            (mem:SF (plus:DI (reg/f:DI 40 r11 [orig:1074 pretmp.364 ] [1074])
                    (const_int 24 [0x18])) [3 MEM[(float *)pretmp.364_1204 + 24B]+0 S4 A32]))) ../src/izp-gaussian.c:219 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 137 136 138 6 (set (reg/v:SF 21 xmm0 [orig:336 tmp ] [336])
        (plus:SF (reg/v:SF 21 xmm0 [orig:336 tmp ] [336])
            (reg/v:SF 22 xmm1 [orig:323 tmp ] [323]))) ../src/izp-gaussian.c:219 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:323 tmp ] [323])
        (nil)))

(debug_insn 138 137 139 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:336 tmp ] [336])) ../src/izp-gaussian.c:219 -1
     (nil))

(insn 139 138 140 6 (set (reg/v:SF 22 xmm1 [orig:344 tmp ] [344])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 1 dx [orig:1075 pretmp.367 ] [1075])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 20 [0x14])) [3 MEM[base: pretmp.367_1208, index: ivtmp.387_42, offset: 20B]+0 S4 A32])) ../src/izp-gaussian.c:222 110 {*movsf_internal}
     (nil))

(insn:TI 140 139 141 6 (set (reg/v:SF 22 xmm1 [orig:344 tmp ] [344])
        (mult:SF (reg/v:SF 22 xmm1 [orig:344 tmp ] [344])
            (mem:SF (reg/f:DI 39 r10 [orig:1076 pretmp.367 ] [1076]) [3 *pretmp.367_1209+0 S4 A32]))) ../src/izp-gaussian.c:222 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 141 140 142 6 (set (reg/v:SF 22 xmm1 [orig:344 tmp ] [344])
        (plus:SF (reg/v:SF 22 xmm1 [orig:344 tmp ] [344])
            (reg/v:SF 21 xmm0 [orig:336 tmp ] [336]))) ../src/izp-gaussian.c:222 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:336 tmp ] [336])
        (nil)))

(debug_insn 142 141 143 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:344 tmp ] [344])) ../src/izp-gaussian.c:222 -1
     (nil))

(insn 143 142 144 6 (set (reg/v:SF 21 xmm0 [orig:356 tmp ] [356])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 1 dx [orig:1075 pretmp.367 ] [1075])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 24 [0x18])) [3 MEM[base: pretmp.367_1208, index: ivtmp.387_42, offset: 24B]+0 S4 A32])) ../src/izp-gaussian.c:223 110 {*movsf_internal}
     (nil))

(insn:TI 144 143 145 6 (set (reg/v:SF 21 xmm0 [orig:356 tmp ] [356])
        (mult:SF (reg/v:SF 21 xmm0 [orig:356 tmp ] [356])
            (mem:SF (plus:DI (reg/f:DI 39 r10 [orig:1076 pretmp.367 ] [1076])
                    (const_int 4 [0x4])) [3 MEM[(float *)pretmp.367_1209 + 4B]+0 S4 A32]))) ../src/izp-gaussian.c:223 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 145 144 146 6 (set (reg/v:SF 21 xmm0 [orig:356 tmp ] [356])
        (plus:SF (reg/v:SF 21 xmm0 [orig:356 tmp ] [356])
            (reg/v:SF 22 xmm1 [orig:344 tmp ] [344]))) ../src/izp-gaussian.c:223 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:344 tmp ] [344])
        (nil)))

(debug_insn 146 145 147 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:356 tmp ] [356])) ../src/izp-gaussian.c:223 -1
     (nil))

(insn 147 146 148 6 (set (reg/v:SF 22 xmm1 [orig:368 tmp ] [368])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 1 dx [orig:1075 pretmp.367 ] [1075])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 28 [0x1c])) [3 MEM[base: pretmp.367_1208, index: ivtmp.387_42, offset: 28B]+0 S4 A32])) ../src/izp-gaussian.c:224 110 {*movsf_internal}
     (nil))

(insn:TI 148 147 149 6 (set (reg/v:SF 22 xmm1 [orig:368 tmp ] [368])
        (mult:SF (reg/v:SF 22 xmm1 [orig:368 tmp ] [368])
            (mem:SF (plus:DI (reg/f:DI 39 r10 [orig:1076 pretmp.367 ] [1076])
                    (const_int 8 [0x8])) [3 MEM[(float *)pretmp.367_1209 + 8B]+0 S4 A32]))) ../src/izp-gaussian.c:224 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 149 148 150 6 (set (reg/v:SF 22 xmm1 [orig:368 tmp ] [368])
        (plus:SF (reg/v:SF 22 xmm1 [orig:368 tmp ] [368])
            (reg/v:SF 21 xmm0 [orig:356 tmp ] [356]))) ../src/izp-gaussian.c:224 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:356 tmp ] [356])
        (nil)))

(debug_insn 150 149 151 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:368 tmp ] [368])) ../src/izp-gaussian.c:224 -1
     (nil))

(insn 151 150 152 6 (set (reg/v:SF 21 xmm0 [orig:379 tmp ] [379])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 1 dx [orig:1075 pretmp.367 ] [1075])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 32 [0x20])) [3 MEM[base: pretmp.367_1208, index: ivtmp.387_42, offset: 32B]+0 S4 A32])) ../src/izp-gaussian.c:225 110 {*movsf_internal}
     (nil))

(insn:TI 152 151 153 6 (set (reg/v:SF 21 xmm0 [orig:379 tmp ] [379])
        (mult:SF (reg/v:SF 21 xmm0 [orig:379 tmp ] [379])
            (mem:SF (plus:DI (reg/f:DI 39 r10 [orig:1076 pretmp.367 ] [1076])
                    (const_int 12 [0xc])) [3 MEM[(float *)pretmp.367_1209 + 12B]+0 S4 A32]))) ../src/izp-gaussian.c:225 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 153 152 154 6 (set (reg/v:SF 21 xmm0 [orig:379 tmp ] [379])
        (plus:SF (reg/v:SF 21 xmm0 [orig:379 tmp ] [379])
            (reg/v:SF 22 xmm1 [orig:368 tmp ] [368]))) ../src/izp-gaussian.c:225 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:368 tmp ] [368])
        (nil)))

(debug_insn 154 153 155 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:379 tmp ] [379])) ../src/izp-gaussian.c:225 -1
     (nil))

(insn 155 154 156 6 (set (reg/v:SF 22 xmm1 [orig:391 tmp ] [391])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 1 dx [orig:1075 pretmp.367 ] [1075])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 36 [0x24])) [3 MEM[base: pretmp.367_1208, index: ivtmp.387_42, offset: 36B]+0 S4 A32])) ../src/izp-gaussian.c:226 110 {*movsf_internal}
     (nil))

(insn:TI 156 155 157 6 (set (reg/v:SF 22 xmm1 [orig:391 tmp ] [391])
        (mult:SF (reg/v:SF 22 xmm1 [orig:391 tmp ] [391])
            (mem:SF (plus:DI (reg/f:DI 39 r10 [orig:1076 pretmp.367 ] [1076])
                    (const_int 16 [0x10])) [3 MEM[(float *)pretmp.367_1209 + 16B]+0 S4 A32]))) ../src/izp-gaussian.c:226 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 157 156 158 6 (set (reg/v:SF 22 xmm1 [orig:391 tmp ] [391])
        (plus:SF (reg/v:SF 22 xmm1 [orig:391 tmp ] [391])
            (reg/v:SF 21 xmm0 [orig:379 tmp ] [379]))) ../src/izp-gaussian.c:226 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:379 tmp ] [379])
        (nil)))

(debug_insn 158 157 159 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:391 tmp ] [391])) ../src/izp-gaussian.c:226 -1
     (nil))

(insn 159 158 160 6 (set (reg/v:SF 21 xmm0 [orig:403 tmp ] [403])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 1 dx [orig:1075 pretmp.367 ] [1075])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 40 [0x28])) [3 MEM[base: pretmp.367_1208, index: ivtmp.387_42, offset: 40B]+0 S4 A32])) ../src/izp-gaussian.c:227 110 {*movsf_internal}
     (nil))

(insn:TI 160 159 161 6 (set (reg/v:SF 21 xmm0 [orig:403 tmp ] [403])
        (mult:SF (reg/v:SF 21 xmm0 [orig:403 tmp ] [403])
            (mem:SF (plus:DI (reg/f:DI 39 r10 [orig:1076 pretmp.367 ] [1076])
                    (const_int 20 [0x14])) [3 MEM[(float *)pretmp.367_1209 + 20B]+0 S4 A32]))) ../src/izp-gaussian.c:227 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 161 160 162 6 (set (reg/v:SF 21 xmm0 [orig:403 tmp ] [403])
        (plus:SF (reg/v:SF 21 xmm0 [orig:403 tmp ] [403])
            (reg/v:SF 22 xmm1 [orig:391 tmp ] [391]))) ../src/izp-gaussian.c:227 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:391 tmp ] [391])
        (nil)))

(debug_insn 162 161 163 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:403 tmp ] [403])) ../src/izp-gaussian.c:227 -1
     (nil))

(insn 163 162 164 6 (set (reg/v:SF 22 xmm1 [orig:415 tmp ] [415])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 1 dx [orig:1075 pretmp.367 ] [1075])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 44 [0x2c])) [3 MEM[base: pretmp.367_1208, index: ivtmp.387_42, offset: 44B]+0 S4 A32])) ../src/izp-gaussian.c:228 110 {*movsf_internal}
     (nil))

(insn:TI 164 163 165 6 (set (reg/v:SF 22 xmm1 [orig:415 tmp ] [415])
        (mult:SF (reg/v:SF 22 xmm1 [orig:415 tmp ] [415])
            (mem:SF (plus:DI (reg/f:DI 39 r10 [orig:1076 pretmp.367 ] [1076])
                    (const_int 24 [0x18])) [3 MEM[(float *)pretmp.367_1209 + 24B]+0 S4 A32]))) ../src/izp-gaussian.c:228 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 165 164 166 6 (set (reg/v:SF 22 xmm1 [orig:415 tmp ] [415])
        (plus:SF (reg/v:SF 22 xmm1 [orig:415 tmp ] [415])
            (reg/v:SF 21 xmm0 [orig:403 tmp ] [403]))) ../src/izp-gaussian.c:228 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:403 tmp ] [403])
        (nil)))

(debug_insn 166 165 167 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:415 tmp ] [415])) ../src/izp-gaussian.c:228 -1
     (nil))

(insn 167 166 168 6 (set (reg/v:SF 21 xmm0 [orig:423 tmp ] [423])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 38 r9 [orig:1077 pretmp.370 ] [1077])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 20 [0x14])) [3 MEM[base: pretmp.370_1214, index: ivtmp.387_42, offset: 20B]+0 S4 A32])) ../src/izp-gaussian.c:231 110 {*movsf_internal}
     (nil))

(insn:TI 168 167 169 6 (set (reg/v:SF 21 xmm0 [orig:423 tmp ] [423])
        (mult:SF (reg/v:SF 21 xmm0 [orig:423 tmp ] [423])
            (mem:SF (reg/f:DI 37 r8 [orig:1078 pretmp.370 ] [1078]) [3 *pretmp.370_1215+0 S4 A32]))) ../src/izp-gaussian.c:231 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 169 168 170 6 (set (reg/v:SF 21 xmm0 [orig:423 tmp ] [423])
        (plus:SF (reg/v:SF 21 xmm0 [orig:423 tmp ] [423])
            (reg/v:SF 22 xmm1 [orig:415 tmp ] [415]))) ../src/izp-gaussian.c:231 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:415 tmp ] [415])
        (nil)))

(debug_insn 170 169 171 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:423 tmp ] [423])) ../src/izp-gaussian.c:231 -1
     (nil))

(insn 171 170 172 6 (set (reg/v:SF 22 xmm1 [orig:436 tmp ] [436])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 38 r9 [orig:1077 pretmp.370 ] [1077])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 24 [0x18])) [3 MEM[base: pretmp.370_1214, index: ivtmp.387_42, offset: 24B]+0 S4 A32])) ../src/izp-gaussian.c:232 110 {*movsf_internal}
     (nil))

(insn:TI 172 171 173 6 (set (reg/v:SF 22 xmm1 [orig:436 tmp ] [436])
        (mult:SF (reg/v:SF 22 xmm1 [orig:436 tmp ] [436])
            (mem:SF (plus:DI (reg/f:DI 37 r8 [orig:1078 pretmp.370 ] [1078])
                    (const_int 4 [0x4])) [3 MEM[(float *)pretmp.370_1215 + 4B]+0 S4 A32]))) ../src/izp-gaussian.c:232 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 173 172 174 6 (set (reg/v:SF 22 xmm1 [orig:436 tmp ] [436])
        (plus:SF (reg/v:SF 22 xmm1 [orig:436 tmp ] [436])
            (reg/v:SF 21 xmm0 [orig:423 tmp ] [423]))) ../src/izp-gaussian.c:232 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:423 tmp ] [423])
        (nil)))

(debug_insn 174 173 175 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:436 tmp ] [436])) ../src/izp-gaussian.c:232 -1
     (nil))

(insn 175 174 176 6 (set (reg/v:SF 21 xmm0 [orig:449 tmp ] [449])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 38 r9 [orig:1077 pretmp.370 ] [1077])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 28 [0x1c])) [3 MEM[base: pretmp.370_1214, index: ivtmp.387_42, offset: 28B]+0 S4 A32])) ../src/izp-gaussian.c:233 110 {*movsf_internal}
     (nil))

(insn:TI 176 175 177 6 (set (reg/v:SF 21 xmm0 [orig:449 tmp ] [449])
        (mult:SF (reg/v:SF 21 xmm0 [orig:449 tmp ] [449])
            (mem:SF (plus:DI (reg/f:DI 37 r8 [orig:1078 pretmp.370 ] [1078])
                    (const_int 8 [0x8])) [3 MEM[(float *)pretmp.370_1215 + 8B]+0 S4 A32]))) ../src/izp-gaussian.c:233 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 177 176 178 6 (set (reg/v:SF 21 xmm0 [orig:449 tmp ] [449])
        (plus:SF (reg/v:SF 21 xmm0 [orig:449 tmp ] [449])
            (reg/v:SF 22 xmm1 [orig:436 tmp ] [436]))) ../src/izp-gaussian.c:233 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:436 tmp ] [436])
        (nil)))

(debug_insn 178 177 179 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:449 tmp ] [449])) ../src/izp-gaussian.c:233 -1
     (nil))

(insn 179 178 180 6 (set (reg/v:SF 22 xmm1 [orig:461 tmp ] [461])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 38 r9 [orig:1077 pretmp.370 ] [1077])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 32 [0x20])) [3 MEM[base: pretmp.370_1214, index: ivtmp.387_42, offset: 32B]+0 S4 A32])) ../src/izp-gaussian.c:234 110 {*movsf_internal}
     (nil))

(insn:TI 180 179 181 6 (set (reg/v:SF 22 xmm1 [orig:461 tmp ] [461])
        (mult:SF (reg/v:SF 22 xmm1 [orig:461 tmp ] [461])
            (mem:SF (plus:DI (reg/f:DI 37 r8 [orig:1078 pretmp.370 ] [1078])
                    (const_int 12 [0xc])) [3 MEM[(float *)pretmp.370_1215 + 12B]+0 S4 A32]))) ../src/izp-gaussian.c:234 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 181 180 182 6 (set (reg/v:SF 22 xmm1 [orig:461 tmp ] [461])
        (plus:SF (reg/v:SF 22 xmm1 [orig:461 tmp ] [461])
            (reg/v:SF 21 xmm0 [orig:449 tmp ] [449]))) ../src/izp-gaussian.c:234 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:449 tmp ] [449])
        (nil)))

(debug_insn 182 181 183 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:461 tmp ] [461])) ../src/izp-gaussian.c:234 -1
     (nil))

(insn 183 182 184 6 (set (reg/v:SF 21 xmm0 [orig:474 tmp ] [474])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 38 r9 [orig:1077 pretmp.370 ] [1077])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 36 [0x24])) [3 MEM[base: pretmp.370_1214, index: ivtmp.387_42, offset: 36B]+0 S4 A32])) ../src/izp-gaussian.c:235 110 {*movsf_internal}
     (nil))

(insn:TI 184 183 185 6 (set (reg/v:SF 21 xmm0 [orig:474 tmp ] [474])
        (mult:SF (reg/v:SF 21 xmm0 [orig:474 tmp ] [474])
            (mem:SF (plus:DI (reg/f:DI 37 r8 [orig:1078 pretmp.370 ] [1078])
                    (const_int 16 [0x10])) [3 MEM[(float *)pretmp.370_1215 + 16B]+0 S4 A32]))) ../src/izp-gaussian.c:235 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 185 184 186 6 (set (reg/v:SF 21 xmm0 [orig:474 tmp ] [474])
        (plus:SF (reg/v:SF 21 xmm0 [orig:474 tmp ] [474])
            (reg/v:SF 22 xmm1 [orig:461 tmp ] [461]))) ../src/izp-gaussian.c:235 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:461 tmp ] [461])
        (nil)))

(debug_insn 186 185 187 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:474 tmp ] [474])) ../src/izp-gaussian.c:235 -1
     (nil))

(insn 187 186 188 6 (set (reg/v:SF 22 xmm1 [orig:487 tmp ] [487])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 38 r9 [orig:1077 pretmp.370 ] [1077])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 40 [0x28])) [3 MEM[base: pretmp.370_1214, index: ivtmp.387_42, offset: 40B]+0 S4 A32])) ../src/izp-gaussian.c:236 110 {*movsf_internal}
     (nil))

(insn:TI 188 187 189 6 (set (reg/v:SF 22 xmm1 [orig:487 tmp ] [487])
        (mult:SF (reg/v:SF 22 xmm1 [orig:487 tmp ] [487])
            (mem:SF (plus:DI (reg/f:DI 37 r8 [orig:1078 pretmp.370 ] [1078])
                    (const_int 20 [0x14])) [3 MEM[(float *)pretmp.370_1215 + 20B]+0 S4 A32]))) ../src/izp-gaussian.c:236 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 189 188 190 6 (set (reg/v:SF 22 xmm1 [orig:487 tmp ] [487])
        (plus:SF (reg/v:SF 22 xmm1 [orig:487 tmp ] [487])
            (reg/v:SF 21 xmm0 [orig:474 tmp ] [474]))) ../src/izp-gaussian.c:236 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:474 tmp ] [474])
        (nil)))

(debug_insn 190 189 191 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:487 tmp ] [487])) ../src/izp-gaussian.c:236 -1
     (nil))

(insn 191 190 192 6 (set (reg/v:SF 21 xmm0 [orig:500 tmp ] [500])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 38 r9 [orig:1077 pretmp.370 ] [1077])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 44 [0x2c])) [3 MEM[base: pretmp.370_1214, index: ivtmp.387_42, offset: 44B]+0 S4 A32])) ../src/izp-gaussian.c:237 110 {*movsf_internal}
     (nil))

(insn:TI 192 191 193 6 (set (reg/v:SF 21 xmm0 [orig:500 tmp ] [500])
        (mult:SF (reg/v:SF 21 xmm0 [orig:500 tmp ] [500])
            (mem:SF (plus:DI (reg/f:DI 37 r8 [orig:1078 pretmp.370 ] [1078])
                    (const_int 24 [0x18])) [3 MEM[(float *)pretmp.370_1215 + 24B]+0 S4 A32]))) ../src/izp-gaussian.c:237 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 193 192 194 6 (set (reg/v:SF 21 xmm0 [orig:500 tmp ] [500])
        (plus:SF (reg/v:SF 21 xmm0 [orig:500 tmp ] [500])
            (reg/v:SF 22 xmm1 [orig:487 tmp ] [487]))) ../src/izp-gaussian.c:237 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:487 tmp ] [487])
        (nil)))

(debug_insn 194 193 195 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:500 tmp ] [500])) ../src/izp-gaussian.c:237 -1
     (nil))

(insn 195 194 196 6 (set (reg/v:SF 22 xmm1 [orig:508 tmp ] [508])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 5 di [orig:1079 pretmp.373 ] [1079])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 20 [0x14])) [3 MEM[base: pretmp.373_1220, index: ivtmp.387_42, offset: 20B]+0 S4 A32])) ../src/izp-gaussian.c:240 110 {*movsf_internal}
     (nil))

(insn:TI 196 195 197 6 (set (reg/v:SF 22 xmm1 [orig:508 tmp ] [508])
        (mult:SF (reg/v:SF 22 xmm1 [orig:508 tmp ] [508])
            (mem:SF (reg/f:DI 4 si [orig:1080 pretmp.373 ] [1080]) [3 *pretmp.373_1221+0 S4 A32]))) ../src/izp-gaussian.c:240 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 197 196 198 6 (set (reg/v:SF 22 xmm1 [orig:508 tmp ] [508])
        (plus:SF (reg/v:SF 22 xmm1 [orig:508 tmp ] [508])
            (reg/v:SF 21 xmm0 [orig:500 tmp ] [500]))) ../src/izp-gaussian.c:240 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:500 tmp ] [500])
        (nil)))

(debug_insn 198 197 199 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:508 tmp ] [508])) ../src/izp-gaussian.c:240 -1
     (nil))

(insn 199 198 200 6 (set (reg/v:SF 21 xmm0 [orig:521 tmp ] [521])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 5 di [orig:1079 pretmp.373 ] [1079])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 24 [0x18])) [3 MEM[base: pretmp.373_1220, index: ivtmp.387_42, offset: 24B]+0 S4 A32])) ../src/izp-gaussian.c:241 110 {*movsf_internal}
     (nil))

(insn:TI 200 199 201 6 (set (reg/v:SF 21 xmm0 [orig:521 tmp ] [521])
        (mult:SF (reg/v:SF 21 xmm0 [orig:521 tmp ] [521])
            (mem:SF (plus:DI (reg/f:DI 4 si [orig:1080 pretmp.373 ] [1080])
                    (const_int 4 [0x4])) [3 MEM[(float *)pretmp.373_1221 + 4B]+0 S4 A32]))) ../src/izp-gaussian.c:241 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 201 200 202 6 (set (reg/v:SF 21 xmm0 [orig:521 tmp ] [521])
        (plus:SF (reg/v:SF 21 xmm0 [orig:521 tmp ] [521])
            (reg/v:SF 22 xmm1 [orig:508 tmp ] [508]))) ../src/izp-gaussian.c:241 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:508 tmp ] [508])
        (nil)))

(debug_insn 202 201 203 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:521 tmp ] [521])) ../src/izp-gaussian.c:241 -1
     (nil))

(insn 203 202 204 6 (set (reg/v:SF 22 xmm1 [orig:534 tmp ] [534])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 5 di [orig:1079 pretmp.373 ] [1079])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 28 [0x1c])) [3 MEM[base: pretmp.373_1220, index: ivtmp.387_42, offset: 28B]+0 S4 A32])) ../src/izp-gaussian.c:242 110 {*movsf_internal}
     (nil))

(insn:TI 204 203 205 6 (set (reg/v:SF 22 xmm1 [orig:534 tmp ] [534])
        (mult:SF (reg/v:SF 22 xmm1 [orig:534 tmp ] [534])
            (mem:SF (plus:DI (reg/f:DI 4 si [orig:1080 pretmp.373 ] [1080])
                    (const_int 8 [0x8])) [3 MEM[(float *)pretmp.373_1221 + 8B]+0 S4 A32]))) ../src/izp-gaussian.c:242 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 205 204 206 6 (set (reg/v:SF 22 xmm1 [orig:534 tmp ] [534])
        (plus:SF (reg/v:SF 22 xmm1 [orig:534 tmp ] [534])
            (reg/v:SF 21 xmm0 [orig:521 tmp ] [521]))) ../src/izp-gaussian.c:242 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:521 tmp ] [521])
        (nil)))

(debug_insn 206 205 207 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:534 tmp ] [534])) ../src/izp-gaussian.c:242 -1
     (nil))

(insn 207 206 208 6 (set (reg/v:SF 21 xmm0 [orig:546 tmp ] [546])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 5 di [orig:1079 pretmp.373 ] [1079])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 32 [0x20])) [3 MEM[base: pretmp.373_1220, index: ivtmp.387_42, offset: 32B]+0 S4 A32])) ../src/izp-gaussian.c:243 110 {*movsf_internal}
     (nil))

(insn:TI 208 207 209 6 (set (reg/v:SF 21 xmm0 [orig:546 tmp ] [546])
        (mult:SF (reg/v:SF 21 xmm0 [orig:546 tmp ] [546])
            (mem:SF (plus:DI (reg/f:DI 4 si [orig:1080 pretmp.373 ] [1080])
                    (const_int 12 [0xc])) [3 MEM[(float *)pretmp.373_1221 + 12B]+0 S4 A32]))) ../src/izp-gaussian.c:243 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 209 208 210 6 (set (reg/v:SF 21 xmm0 [orig:546 tmp ] [546])
        (plus:SF (reg/v:SF 21 xmm0 [orig:546 tmp ] [546])
            (reg/v:SF 22 xmm1 [orig:534 tmp ] [534]))) ../src/izp-gaussian.c:243 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:534 tmp ] [534])
        (nil)))

(debug_insn 210 209 211 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:546 tmp ] [546])) ../src/izp-gaussian.c:243 -1
     (nil))

(insn 211 210 212 6 (set (reg/v:SF 22 xmm1 [orig:559 tmp ] [559])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 5 di [orig:1079 pretmp.373 ] [1079])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 36 [0x24])) [3 MEM[base: pretmp.373_1220, index: ivtmp.387_42, offset: 36B]+0 S4 A32])) ../src/izp-gaussian.c:244 110 {*movsf_internal}
     (nil))

(insn:TI 212 211 213 6 (set (reg/v:SF 22 xmm1 [orig:559 tmp ] [559])
        (mult:SF (reg/v:SF 22 xmm1 [orig:559 tmp ] [559])
            (mem:SF (plus:DI (reg/f:DI 4 si [orig:1080 pretmp.373 ] [1080])
                    (const_int 16 [0x10])) [3 MEM[(float *)pretmp.373_1221 + 16B]+0 S4 A32]))) ../src/izp-gaussian.c:244 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 213 212 214 6 (set (reg/v:SF 22 xmm1 [orig:559 tmp ] [559])
        (plus:SF (reg/v:SF 22 xmm1 [orig:559 tmp ] [559])
            (reg/v:SF 21 xmm0 [orig:546 tmp ] [546]))) ../src/izp-gaussian.c:244 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:546 tmp ] [546])
        (nil)))

(debug_insn 214 213 215 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:559 tmp ] [559])) ../src/izp-gaussian.c:244 -1
     (nil))

(insn 215 214 216 6 (set (reg/v:SF 21 xmm0 [orig:572 tmp ] [572])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 5 di [orig:1079 pretmp.373 ] [1079])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 40 [0x28])) [3 MEM[base: pretmp.373_1220, index: ivtmp.387_42, offset: 40B]+0 S4 A32])) ../src/izp-gaussian.c:245 110 {*movsf_internal}
     (nil))

(insn:TI 216 215 217 6 (set (reg/v:SF 21 xmm0 [orig:572 tmp ] [572])
        (mult:SF (reg/v:SF 21 xmm0 [orig:572 tmp ] [572])
            (mem:SF (plus:DI (reg/f:DI 4 si [orig:1080 pretmp.373 ] [1080])
                    (const_int 20 [0x14])) [3 MEM[(float *)pretmp.373_1221 + 20B]+0 S4 A32]))) ../src/izp-gaussian.c:245 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 217 216 218 6 (set (reg/v:SF 21 xmm0 [orig:572 tmp ] [572])
        (plus:SF (reg/v:SF 21 xmm0 [orig:572 tmp ] [572])
            (reg/v:SF 22 xmm1 [orig:559 tmp ] [559]))) ../src/izp-gaussian.c:245 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:559 tmp ] [559])
        (nil)))

(debug_insn 218 217 219 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:572 tmp ] [572])) ../src/izp-gaussian.c:245 -1
     (nil))

(insn 219 218 220 6 (set (reg/v:SF 22 xmm1 [orig:585 tmp ] [585])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 5 di [orig:1079 pretmp.373 ] [1079])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 44 [0x2c])) [3 MEM[base: pretmp.373_1220, index: ivtmp.387_42, offset: 44B]+0 S4 A32])) ../src/izp-gaussian.c:246 110 {*movsf_internal}
     (nil))

(insn:TI 220 219 221 6 (set (reg/v:SF 22 xmm1 [orig:585 tmp ] [585])
        (mult:SF (reg/v:SF 22 xmm1 [orig:585 tmp ] [585])
            (mem:SF (plus:DI (reg/f:DI 4 si [orig:1080 pretmp.373 ] [1080])
                    (const_int 24 [0x18])) [3 MEM[(float *)pretmp.373_1221 + 24B]+0 S4 A32]))) ../src/izp-gaussian.c:246 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 221 220 222 6 (set (reg/v:SF 22 xmm1 [orig:585 tmp ] [585])
        (plus:SF (reg/v:SF 22 xmm1 [orig:585 tmp ] [585])
            (reg/v:SF 21 xmm0 [orig:572 tmp ] [572]))) ../src/izp-gaussian.c:246 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:572 tmp ] [572])
        (nil)))

(debug_insn 222 221 223 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:585 tmp ] [585])) ../src/izp-gaussian.c:246 -1
     (nil))

(insn 223 222 331 6 (set (reg/v:SF 21 xmm0 [orig:593 tmp ] [593])
        (mem:SF (plus:DI (plus:DI (reg:DI 2 cx)
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 20 [0x14])) [3 MEM[base: pretmp.376_1226, index: ivtmp.387_42, offset: 20B]+0 S4 A32])) ../src/izp-gaussian.c:249 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 331 223 224 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 %sfp+-8 S8 A64])) ../src/izp-gaussian.c:249 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 224 331 332 6 (set (reg/v:SF 21 xmm0 [orig:593 tmp ] [593])
        (mult:SF (reg/v:SF 21 xmm0 [orig:593 tmp ] [593])
            (mem:SF (reg:DI 2 cx) [3 *pretmp.376_1227+0 S4 A32]))) ../src/izp-gaussian.c:249 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 332 224 225 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [4 %sfp+-56 S8 A64])) ../src/izp-gaussian.c:250 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 225 332 226 6 (set (reg/v:SF 21 xmm0 [orig:593 tmp ] [593])
        (plus:SF (reg/v:SF 21 xmm0 [orig:593 tmp ] [593])
            (reg/v:SF 22 xmm1 [orig:585 tmp ] [585]))) ../src/izp-gaussian.c:249 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:585 tmp ] [585])
        (nil)))

(debug_insn 226 225 227 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:593 tmp ] [593])) ../src/izp-gaussian.c:249 -1
     (nil))

(insn:TI 227 226 333 6 (set (reg/v:SF 22 xmm1 [orig:606 tmp ] [606])
        (mem:SF (plus:DI (plus:DI (reg:DI 2 cx)
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 24 [0x18])) [3 MEM[base: pretmp.376_1226, index: ivtmp.387_42, offset: 24B]+0 S4 A32])) ../src/izp-gaussian.c:250 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 333 227 228 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 %sfp+-8 S8 A64])) ../src/izp-gaussian.c:250 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 228 333 334 6 (set (reg/v:SF 22 xmm1 [orig:606 tmp ] [606])
        (mult:SF (reg/v:SF 22 xmm1 [orig:606 tmp ] [606])
            (mem:SF (plus:DI (reg:DI 2 cx)
                    (const_int 4 [0x4])) [3 MEM[(float *)pretmp.376_1227 + 4B]+0 S4 A32]))) ../src/izp-gaussian.c:250 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 334 228 229 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [4 %sfp+-56 S8 A64])) ../src/izp-gaussian.c:251 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 229 334 230 6 (set (reg/v:SF 22 xmm1 [orig:606 tmp ] [606])
        (plus:SF (reg/v:SF 22 xmm1 [orig:606 tmp ] [606])
            (reg/v:SF 21 xmm0 [orig:593 tmp ] [593]))) ../src/izp-gaussian.c:250 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:593 tmp ] [593])
        (nil)))

(debug_insn 230 229 231 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:606 tmp ] [606])) ../src/izp-gaussian.c:250 -1
     (nil))

(insn:TI 231 230 335 6 (set (reg/v:SF 21 xmm0 [orig:619 tmp ] [619])
        (mem:SF (plus:DI (plus:DI (reg:DI 2 cx)
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 28 [0x1c])) [3 MEM[base: pretmp.376_1226, index: ivtmp.387_42, offset: 28B]+0 S4 A32])) ../src/izp-gaussian.c:251 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 335 231 232 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 %sfp+-8 S8 A64])) ../src/izp-gaussian.c:251 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 232 335 336 6 (set (reg/v:SF 21 xmm0 [orig:619 tmp ] [619])
        (mult:SF (reg/v:SF 21 xmm0 [orig:619 tmp ] [619])
            (mem:SF (plus:DI (reg:DI 2 cx)
                    (const_int 8 [0x8])) [3 MEM[(float *)pretmp.376_1227 + 8B]+0 S4 A32]))) ../src/izp-gaussian.c:251 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 336 232 233 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [4 %sfp+-56 S8 A64])) ../src/izp-gaussian.c:252 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 233 336 234 6 (set (reg/v:SF 21 xmm0 [orig:619 tmp ] [619])
        (plus:SF (reg/v:SF 21 xmm0 [orig:619 tmp ] [619])
            (reg/v:SF 22 xmm1 [orig:606 tmp ] [606]))) ../src/izp-gaussian.c:251 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:606 tmp ] [606])
        (nil)))

(debug_insn 234 233 235 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:619 tmp ] [619])) ../src/izp-gaussian.c:251 -1
     (nil))

(insn:TI 235 234 337 6 (set (reg/v:SF 22 xmm1 [orig:631 tmp ] [631])
        (mem:SF (plus:DI (plus:DI (reg:DI 2 cx)
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 32 [0x20])) [3 MEM[base: pretmp.376_1226, index: ivtmp.387_42, offset: 32B]+0 S4 A32])) ../src/izp-gaussian.c:252 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 337 235 236 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 %sfp+-8 S8 A64])) ../src/izp-gaussian.c:252 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 236 337 338 6 (set (reg/v:SF 22 xmm1 [orig:631 tmp ] [631])
        (mult:SF (reg/v:SF 22 xmm1 [orig:631 tmp ] [631])
            (mem:SF (plus:DI (reg:DI 2 cx)
                    (const_int 12 [0xc])) [3 MEM[(float *)pretmp.376_1227 + 12B]+0 S4 A32]))) ../src/izp-gaussian.c:252 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 338 236 237 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [4 %sfp+-56 S8 A64])) ../src/izp-gaussian.c:253 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 237 338 238 6 (set (reg/v:SF 22 xmm1 [orig:631 tmp ] [631])
        (plus:SF (reg/v:SF 22 xmm1 [orig:631 tmp ] [631])
            (reg/v:SF 21 xmm0 [orig:619 tmp ] [619]))) ../src/izp-gaussian.c:252 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:619 tmp ] [619])
        (nil)))

(debug_insn 238 237 239 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:631 tmp ] [631])) ../src/izp-gaussian.c:252 -1
     (nil))

(insn:TI 239 238 339 6 (set (reg/v:SF 21 xmm0 [orig:644 tmp ] [644])
        (mem:SF (plus:DI (plus:DI (reg:DI 2 cx)
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 36 [0x24])) [3 MEM[base: pretmp.376_1226, index: ivtmp.387_42, offset: 36B]+0 S4 A32])) ../src/izp-gaussian.c:253 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 339 239 240 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 %sfp+-8 S8 A64])) ../src/izp-gaussian.c:253 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 240 339 340 6 (set (reg/v:SF 21 xmm0 [orig:644 tmp ] [644])
        (mult:SF (reg/v:SF 21 xmm0 [orig:644 tmp ] [644])
            (mem:SF (plus:DI (reg:DI 2 cx)
                    (const_int 16 [0x10])) [3 MEM[(float *)pretmp.376_1227 + 16B]+0 S4 A32]))) ../src/izp-gaussian.c:253 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 340 240 241 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [4 %sfp+-56 S8 A64])) ../src/izp-gaussian.c:254 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 241 340 242 6 (set (reg/v:SF 21 xmm0 [orig:644 tmp ] [644])
        (plus:SF (reg/v:SF 21 xmm0 [orig:644 tmp ] [644])
            (reg/v:SF 22 xmm1 [orig:631 tmp ] [631]))) ../src/izp-gaussian.c:253 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:631 tmp ] [631])
        (nil)))

(debug_insn 242 241 243 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:644 tmp ] [644])) ../src/izp-gaussian.c:253 -1
     (nil))

(insn:TI 243 242 341 6 (set (reg/v:SF 22 xmm1 [orig:657 tmp ] [657])
        (mem:SF (plus:DI (plus:DI (reg:DI 2 cx)
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 40 [0x28])) [3 MEM[base: pretmp.376_1226, index: ivtmp.387_42, offset: 40B]+0 S4 A32])) ../src/izp-gaussian.c:254 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 341 243 244 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 %sfp+-8 S8 A64])) ../src/izp-gaussian.c:254 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 244 341 342 6 (set (reg/v:SF 22 xmm1 [orig:657 tmp ] [657])
        (mult:SF (reg/v:SF 22 xmm1 [orig:657 tmp ] [657])
            (mem:SF (plus:DI (reg:DI 2 cx)
                    (const_int 20 [0x14])) [3 MEM[(float *)pretmp.376_1227 + 20B]+0 S4 A32]))) ../src/izp-gaussian.c:254 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 342 244 245 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [4 %sfp+-56 S8 A64])) ../src/izp-gaussian.c:255 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 245 342 247 6 (set (reg/v:SF 22 xmm1 [orig:657 tmp ] [657])
        (plus:SF (reg/v:SF 22 xmm1 [orig:657 tmp ] [657])
            (reg/v:SF 21 xmm0 [orig:644 tmp ] [644]))) ../src/izp-gaussian.c:254 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:644 tmp ] [644])
        (nil)))

(debug_insn 247 245 248 6 (var_location:SF tmp (plus:SF (mult:SF (mem:SF (plus:DI (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -96 [0xffffffffffffffa0])) [4 %sfp+-56 S8 A64])
                    (plus:DI (reg:DI 0 ax [orig:94 ivtmp.387 ] [94])
                        (const_int 44 [0x2c]))) [0 MEM[base: pretmp.376_1226, index: ivtmp.387_42, offset: 44B]+0 S4 A32])
            (mem:SF (plus:DI (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -48 [0xffffffffffffffd0])) [4 %sfp+-8 S8 A64])
                    (const_int 24 [0x18])) [0 MEM[(float *)pretmp.376_1227 + 24B]+0 S4 A32]))
        (reg/v:SF 22 xmm1 [orig:657 tmp ] [657]))) ../src/izp-gaussian.c:255 -1
     (nil))

(insn:TI 248 247 343 6 (set (reg:SF 21 xmm0 [1201])
        (mem:SF (plus:DI (plus:DI (reg:DI 2 cx)
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 44 [0x2c])) [3 MEM[base: pretmp.376_1226, index: ivtmp.387_42, offset: 44B]+0 S4 A32])) ../src/izp-gaussian.c:255 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 343 248 249 6 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 %sfp+-8 S8 A64])) ../src/izp-gaussian.c:255 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 249 343 250 6 (set (reg:SF 21 xmm0 [1201])
        (mult:SF (reg:SF 21 xmm0 [1201])
            (mem:SF (plus:DI (reg:DI 2 cx)
                    (const_int 24 [0x18])) [3 MEM[(float *)pretmp.376_1227 + 24B]+0 S4 A32]))) ../src/izp-gaussian.c:255 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 250 249 251 6 (set (reg:SF 21 xmm0 [1201])
        (plus:SF (reg:SF 21 xmm0 [1201])
            (reg/v:SF 22 xmm1 [orig:657 tmp ] [657]))) ../src/izp-gaussian.c:255 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:657 tmp ] [657])
        (nil)))

(insn:TI 251 250 253 6 (set (mem:SF (plus:DI (plus:DI (reg/f:DI 1 dx [orig:1075 pretmp.367 ] [1075])
                    (reg:DI 0 ax [orig:94 ivtmp.387 ] [94]))
                (const_int 32 [0x20])) [3 MEM[base: pretmp.367_1208, index: ivtmp.387_42, offset: 32B]+0 S4 A32])
        (reg:SF 21 xmm0 [1201])) ../src/izp-gaussian.c:257 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [1201])
        (nil)))

(debug_insn 253 251 254 6 (var_location:SI j (debug_expr:SI D#1)) -1
     (nil))

(insn 254 253 256 6 (parallel [
            (set (reg:DI 0 ax [orig:94 ivtmp.387 ] [94])
                (plus:DI (reg:DI 0 ax [orig:94 ivtmp.387 ] [94])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:257 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 256 254 257 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:94 ivtmp.387 ] [94])
            (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [4 %sfp+-16 S8 A64]))) ../src/izp-gaussian.c:192 7 {*cmpdi_1}
     (nil))

(jump_insn:TI 257 256 268 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 255)
            (pc))) ../src/izp-gaussian.c:192 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 255)
;; End of basic block 6 -> ( 6 7)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  6 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  7 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 6 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  6 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  4 [9.0%]  (can_fallthru)
(code_label 268 257 258 7 5 "" [1 uses])

(note 258 268 259 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 259 258 261 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -76 [0xffffffffffffffb4])) [4 %sfp+-36 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -76 [0xffffffffffffffb4])) [4 %sfp+-36 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:191 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(debug_insn 261 259 262 7 (var_location:SI i (mem/c:SI (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4])) [4 %sfp+-36 S4 A32])) -1
     (nil))

(insn:TI 262 261 344 7 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -64 [0xffffffffffffffc0])) [4 %sfp+-24 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -64 [0xffffffffffffffc0])) [4 %sfp+-24 S8 A64])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:191 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 344 262 263 7 (set (reg:SI 0 ax)
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [4 %sfp+-36 S4 A32])) ../src/izp-gaussian.c:191 64 {*movsi_internal}
     (nil))

(insn:TI 263 344 264 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [4 %sfp+-40 S4 A32])
            (reg:SI 0 ax))) ../src/izp-gaussian.c:191 6 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(jump_insn:TI 264 263 295 7 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 265)
            (pc))) ../src/izp-gaussian.c:191 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 265)
;; End of basic block 7 -> ( 4 8)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 23 [xmm2]


;; Succ edge  4 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  8 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 7 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp] 20 [frame]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  7 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  2 [9.0%]  (can_fallthru)
(code_label 295 264 296 8 1 "" [1 uses])

(note 296 295 365 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 365 296 366 8 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 366 365 367 8 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) ../src/izp-gaussian.c:260 911 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 367 366 368 8 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:260 52 {*popdi1}
     (nil))

(insn:TI 368 367 369 8 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:260 52 {*popdi1}
     (nil))

(insn:TI 369 368 370 8 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:260 52 {*popdi1}
     (nil))

(insn:TI 370 369 371 8 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:260 52 {*popdi1}
     (nil))

(insn:TI 371 370 372 8 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:260 52 {*popdi1}
     (nil))

(insn/f:TI 372 371 373 8 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:260 52 {*popdi1}
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))

(jump_insn:TI 373 372 374 8 (return) ../src/izp-gaussian.c:260 634 {return_internal}
     (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  EXIT [100.0%] 

(barrier 374 373 326)

(note 326 374 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function izp_convolve1D (izp_convolve1D)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 14 (  1.6)


izp_convolve1D

Dataflow summary:
def_info->table_size = 56, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 37[r8] 38[r9] 39[r10]
;;  ref usage 	r0={4d,12u} r1={1d,2u} r2={3d,12u} r4={1d,8u} r5={1d,1u} r6={3d,10u} r7={3d,11u} r17={9d,4u} r20={1d,1u} r21={13d,15u} r22={10d,12u} r23={2d,1u} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={2d,1u} r38={3d,3u} r39={1d,1u} r245={1e} 
;;    total ref usage 157{62d,94u,1e} in 58{58 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d4(1){ }d7(2){ }d8(4){ }d9(5){ }d10(6){ }d11(7){ }d19(20){ }d32(21){ }d42(22){ }d44(23){ }d45(24){ }d46(25){ }d47(26){ }d48(27){ }d49(28){ }d51(37){ }d54(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 0 )->[2]->( 3 8 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]

( 7 3 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 38 [r9]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 0 [ax] 2 [cx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]

( 6 5 )->[6]->( 6 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 23 [xmm2] 37 [r8]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 0 [ax] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]

( 6 4 )->[7]->( 4 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 6 [bp] 7 [sp] 38 [r9] 39 [r10]
;; lr  def 	 17 [flags] 38 [r9]
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 17 [flags] 38 [r9]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]

( 7 2 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame]
;; lr  use 	 7 [sp]
;; lr  def 	 6 [bp] 7 [sp]
;; live  in  	 7 [sp] 20 [frame]
;; live  gen 	 6 [bp] 7 [sp]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(6){ }u-1(7){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 109 to worklist
  Adding insn 107 to worklist
  Adding insn 105 to worklist
  Adding insn 75 to worklist
  Adding insn 72 to worklist
  Adding insn 63 to worklist
  Adding insn 59 to worklist
  Adding insn 57 to worklist
  Adding insn 53 to worklist
  Adding insn 48 to worklist
  Adding insn 44 to worklist
  Adding insn 40 to worklist
  Adding insn 36 to worklist
  Adding insn 32 to worklist
  Adding insn 27 to worklist
  Adding insn 69 to worklist
  Adding insn 66 to worklist
  Adding insn 112 to worklist
Finished finding needed instructions:
processing block 8 lr out =  6 [bp] 7 [sp] 20 [frame]
  Adding insn 111 to worklist
processing block 7 lr out =  1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
  Adding insn 68 to worklist
  Adding insn 67 to worklist
processing block 6 lr out =  0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
  Adding insn 62 to worklist
  Adding insn 60 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
  Adding insn 114 to worklist
  Adding insn 77 to worklist
processing block 4 lr out =  1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
  Adding insn 74 to worklist
processing block 3 lr out =  1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
  Adding insn 104 to worklist
  Adding insn 81 to worklist
  Adding insn 103 to worklist
  Adding insn 115 to worklist
  Adding insn 23 to worklist
  Adding insn 21 to worklist
processing block 2 lr out =  1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 17 to worklist
  Adding insn 106 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 11 (  1.2)
deleting insn with uid = 108.
deleting insn with uid = 9.
;;   ======================================================
;;   -- basic block 2 from 105 to 18 -- after reload
;;   ======================================================

;;	  0-->   105 [--sp]=bp                         :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   106 bp=sp                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   107 use bp                            :nothing
;;	  2-->   109 unspec/v{0;}                      :c2_decoder0
;;	  2-->    14: debug tmp => 0.0                 :nothing
;;	  2-->    16: debug i => 0x8                   :nothing
;;	  8-->    17 flags=cmp(cx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  9-->    18 pc={(flags<=0)?L86:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 9
;;   new head = 105
;;   new tail = 18

deleting insn with uid = 22.
deleting insn with uid = 78.
deleting insn with uid = 80.
;;   ======================================================
;;   -- basic block 3 from 21 to 104 -- after reload
;;   ======================================================

;;	  0-->   103 ax=zxn(dx-0x1#0)                  :c2_decodern,c2_p0
;;	  0-->    21 {cx=zxn(cx-0x1);clobber flags;}   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   115 {r9=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    23 r10=cx*0x8+0x8                    :c2_decodern,c2_p0
;;	  1-->   104 xmm2=0.0                          :nothing
;;	  2-->    81 r8=ax*0x4+0x4                     :c2_decodern,c2_p0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 21
;;   new tail = 104

;;   ======================================================
;;   -- basic block 4 from 72 to 75 -- after reload
;;   ======================================================

;;	  0-->    72: debug j => 0x8                   :nothing
;;	  0-->    74 flags=cmp(dx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    75 pc={(flags<=0)?L73:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 72
;;   new tail = 75

;;   ======================================================
;;   -- basic block 5 from 77 to 114 -- after reload
;;   ======================================================

;;	  0-->    77 cx=[di+r9+0x40]                   :c2_decodern,c2_p2
;;	  0-->   114 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 77
;;   new tail = 114

;;   ======================================================
;;   -- basic block 6 from 27 to 63 -- after reload
;;   ======================================================

;;	  0-->    27: debug tmp => 0.0                 :nothing
;;	  0-->    28 xmm0=[cx+ax+0x14]                 :c2_decodern,c2_p2
;;	  1-->    33 xmm1=[cx+ax+0x18]                 :c2_decodern,c2_p2
;;	  2-->    29 xmm0=xmm0*[si]                    :c2_decodern,(c2_p2+c2_p0)
;;	  3-->    34 xmm1=xmm1*[si+0x4]                :c2_decodern,(c2_p2+c2_p0)
;;	  6-->    31 xmm0=xmm0+xmm2                    :c2_decodern,c2_p1
;;	  6-->    32: debug tmp => xmm0                :nothing
;;	  9-->    35 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	  9-->    36: debug tmp => xmm1                :nothing
;;	  9-->    37 xmm0=[cx+ax+0x1c]                 :c2_decodern,c2_p2
;;	 11-->    38 xmm0=xmm0*[si+0x8]                :c2_decodern,(c2_p2+c2_p0)
;;	 15-->    39 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	 15-->    40: debug tmp => xmm0                :nothing
;;	 15-->    41 xmm1=[cx+ax+0x20]                 :c2_decodern,c2_p2
;;	 17-->    42 xmm1=xmm1*[si+0xc]                :c2_decodern,(c2_p2+c2_p0)
;;	 21-->    43 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	 21-->    44: debug tmp => xmm1                :nothing
;;	 21-->    45 xmm0=[cx+ax+0x24]                 :c2_decodern,c2_p2
;;	 23-->    46 xmm0=xmm0*[si+0x10]               :c2_decodern,(c2_p2+c2_p0)
;;	 27-->    47 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	 27-->    48: debug tmp => xmm0                :nothing
;;	 27-->    49 xmm1=[cx+ax+0x28]                 :c2_decodern,c2_p2
;;	 29-->    50 xmm1=xmm1*[si+0x14]               :c2_decodern,(c2_p2+c2_p0)
;;	 33-->    51 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	 33-->    53: debug tmp => [cx+ax+0x2c]*[si+0x1:nothing
;;	 33-->    54 xmm0=[cx+ax+0x2c]                 :c2_decodern,c2_p2
;;	 35-->    55 xmm0=xmm0*[si+0x18]               :c2_decodern,(c2_p2+c2_p0)
;;	 39-->    56 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	 42-->    57 [cx+ax+0x20]=xmm0                 :c2_decodern,(c2_p4+c2_p3)
;;	 42-->    59: debug j => D#2                   :nothing
;;	 42-->    60 {ax=ax+0x4;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 43-->    62 flags=cmp(ax,r8)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 44-->    63 pc={(flags!=0)?L61:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 44
;;   new head = 27
;;   new tail = 63

;;   ======================================================
;;   -- basic block 7 from 66 to 69 -- after reload
;;   ======================================================

;;	  0-->    66: debug i => D#3                   :nothing
;;	  0-->    67 {r9=r9+0x8;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    68 flags=cmp(r9,r10)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->    69 pc={(flags!=0)?L70:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 66
;;   new tail = 69

;;   ======================================================
;;   -- basic block 8 from 111 to 112 -- after reload
;;   ======================================================

;;	  0-->   111 bp=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  1-->   112 return                            :c2_decoder0
;;	Ready list (final):  
;;   total time = 1
;;   new head = 111
;;   new tail = 112





izp_convolve1D

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 37[r8] 38[r9] 39[r10]
;;  ref usage 	r0={4d,12u} r1={1d,2u} r2={3d,12u} r4={1d,8u} r5={1d,1u} r6={3d,10u} r7={3d,11u} r17={9d,4u} r20={1d,1u} r21={13d,15u} r22={10d,12u} r23={2d,1u} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={2d,1u} r38={3d,3u} r39={1d,1u} r245={1e} 
;;    total ref usage 157{62d,94u,1e} in 58{58 regular + 0 call} insns.
(note 3 0 12 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 12 3 9 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 9 12 105 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 105 9 106 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg/f:DI 6 bp)) ../src/izp-gaussian.c:263 42 {*pushdi2_rex64}
     (nil))

(insn/f:TI 106 105 107 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) ../src/izp-gaussian.c:263 62 {*movdi_internal_rex64}
     (nil))

(insn 107 106 108 2 (use (reg/f:DI 6 bp)) ../src/izp-gaussian.c:263 -1
     (nil))

(note 108 107 109 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 109 108 14 2 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) ../src/izp-gaussian.c:263 631 {blockage}
     (nil))

(debug_insn 14 109 16 2 (var_location:SF tmp (const_double:SF 0.0 [0x0.0p+0])) ../src/izp-gaussian.c:265 -1
     (nil))

(debug_insn 16 14 17 2 (var_location:SI i (const_int 8 [0x8])) -1
     (nil))

(insn:TI 17 16 18 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 2 cx [orig:240 rows ] [240])
            (const_int 0 [0]))) ../src/izp-gaussian.c:267 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 18 17 19 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) ../src/izp-gaussian.c:267 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 86)
;; End of basic block 2 -> ( 3 8)
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]


;; Succ edge  3 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  8 [9.0%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  kill	 17 [flags]

;; Pred edge  2 [91.0%]  (fallthru,can_fallthru)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 20 19 22 3 NOTE_INSN_DELETED)

(note 22 20 78 3 NOTE_INSN_DELETED)

(note 78 22 80 3 NOTE_INSN_DELETED)

(note 80 78 103 3 NOTE_INSN_DELETED)

(insn:TI 103 80 21 3 (set (reg:DI 0 ax [266])
        (zero_extend:DI (subreg:SI (plus:DI (reg:DI 1 dx [orig:239 cols ] [239])
                    (const_int -1 [0xffffffffffffffff])) 0))) ../src/izp-gaussian.c:262 251 {*lea_2_zext}
     (nil))

(insn 21 103 115 3 (parallel [
            (set (reg:DI 2 cx [243])
                (zero_extend:DI (plus:SI (reg/v:SI 2 cx [orig:240 rows ] [240])
                        (const_int -1 [0xffffffffffffffff]))))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:262 254 {*addsi_1_zext}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 115 21 23 3 (parallel [
            (set (reg:DI 38 r9 [orig:70 ivtmp.544 ] [70])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:262 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 23 115 104 3 (set (reg:DI 39 r10 [orig:77 D.8076 ] [77])
        (plus:DI (mult:DI (reg:DI 2 cx [243])
                (const_int 8 [0x8]))
            (const_int 8 [0x8]))) ../src/izp-gaussian.c:262 249 {*lea_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [243])
        (nil)))

(insn 104 23 81 3 (set (reg:SF 23 xmm2 [269])
        (const_double:SF 0.0 [0x0.0p+0])) 110 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn:TI 81 104 70 3 (set (reg:DI 37 r8 [orig:268 D.8064 ] [268])
        (plus:DI (mult:DI (reg:DI 0 ax [266])
                (const_int 4 [0x4]))
            (const_int 4 [0x4]))) ../src/izp-gaussian.c:262 249 {*lea_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [266])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 7 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  7 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
(code_label 70 81 71 4 10 "" [1 uses])

(note 71 70 72 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(debug_insn 72 71 74 4 (var_location:SI j (const_int 8 [0x8])) -1
     (nil))

(insn:TI 74 72 75 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 1 dx [orig:239 cols ] [239])
            (const_int 0 [0]))) ../src/izp-gaussian.c:268 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 75 74 76 4 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) ../src/izp-gaussian.c:268 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 73)
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]


;; Succ edge  5 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  7 [9.0%]  (can_fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 38 [r9]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 0 [ax] 2 [cx]
;; live  kill	 17 [flags]

;; Pred edge  4 [91.0%]  (fallthru,can_fallthru)
(note 76 75 77 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 77 76 114 5 (set (reg/f:DI 2 cx [orig:220 pretmp.516 ] [220])
        (mem/f:DI (plus:DI (plus:DI (reg/v/f:DI 5 di [orig:237 image ] [237])
                    (reg:DI 38 r9 [orig:70 ivtmp.544 ] [70]))
                (const_int 64 [0x40])) [2 MEM[base: image_13(D), index: ivtmp.544_42, offset: 64B]+0 S8 A64])) ../src/izp-gaussian.c:268 62 {*movdi_internal_rex64}
     (nil))

(insn 114 77 61 5 (parallel [
            (set (reg:DI 0 ax [orig:66 ivtmp.531 ] [66])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:262 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]


;; Succ edge  6 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 6 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 23 [xmm2] 37 [r8]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 0 [ax] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  kill	 17 [flags]

;; Pred edge  6 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  5 [100.0%]  (fallthru,can_fallthru)
(code_label 61 114 26 6 11 "" [1 uses])

(note 26 61 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(debug_insn 27 26 28 6 (var_location:SF tmp (const_double:SF 0.0 [0x0.0p+0])) ../src/izp-gaussian.c:269 -1
     (nil))

(insn:TI 28 27 33 6 (set (reg/v:SF 21 xmm0 [orig:74 tmp ] [74])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 2 cx [orig:220 pretmp.516 ] [220])
                    (reg:DI 0 ax [orig:66 ivtmp.531 ] [66]))
                (const_int 20 [0x14])) [3 MEM[base: pretmp.516_204, index: ivtmp.531_41, offset: 20B]+0 S4 A32])) ../src/izp-gaussian.c:271 110 {*movsf_internal}
     (nil))

(insn:TI 33 28 29 6 (set (reg/v:SF 22 xmm1 [orig:81 tmp ] [81])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 2 cx [orig:220 pretmp.516 ] [220])
                    (reg:DI 0 ax [orig:66 ivtmp.531 ] [66]))
                (const_int 24 [0x18])) [3 MEM[base: pretmp.516_204, index: ivtmp.531_41, offset: 24B]+0 S4 A32])) ../src/izp-gaussian.c:272 110 {*movsf_internal}
     (nil))

(insn:TI 29 33 34 6 (set (reg/v:SF 21 xmm0 [orig:74 tmp ] [74])
        (mult:SF (reg/v:SF 21 xmm0 [orig:74 tmp ] [74])
            (mem:SF (reg/v/f:DI 4 si [orig:238 vec ] [238]) [3 *vec_21(D)+0 S4 A32]))) ../src/izp-gaussian.c:271 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 34 29 31 6 (set (reg/v:SF 22 xmm1 [orig:81 tmp ] [81])
        (mult:SF (reg/v:SF 22 xmm1 [orig:81 tmp ] [81])
            (mem:SF (plus:DI (reg/v/f:DI 4 si [orig:238 vec ] [238])
                    (const_int 4 [0x4])) [3 MEM[(float *)vec_21(D) + 4B]+0 S4 A32]))) ../src/izp-gaussian.c:272 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 31 34 32 6 (set (reg/v:SF 21 xmm0 [orig:74 tmp ] [74])
        (plus:SF (reg/v:SF 21 xmm0 [orig:74 tmp ] [74])
            (reg:SF 23 xmm2 [269]))) ../src/izp-gaussian.c:271 729 {*fop_sf_comm_sse}
     (expr_list:REG_EQUAL (plus:SF (reg:SF 245)
            (const_double:SF 0.0 [0x0.0p+0]))
        (nil)))

(debug_insn 32 31 35 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:74 tmp ] [74])) ../src/izp-gaussian.c:271 -1
     (nil))

(insn:TI 35 32 36 6 (set (reg/v:SF 22 xmm1 [orig:81 tmp ] [81])
        (plus:SF (reg/v:SF 22 xmm1 [orig:81 tmp ] [81])
            (reg/v:SF 21 xmm0 [orig:74 tmp ] [74]))) ../src/izp-gaussian.c:272 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:74 tmp ] [74])
        (nil)))

(debug_insn 36 35 37 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:81 tmp ] [81])) ../src/izp-gaussian.c:272 -1
     (nil))

(insn 37 36 38 6 (set (reg/v:SF 21 xmm0 [orig:89 tmp ] [89])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 2 cx [orig:220 pretmp.516 ] [220])
                    (reg:DI 0 ax [orig:66 ivtmp.531 ] [66]))
                (const_int 28 [0x1c])) [3 MEM[base: pretmp.516_204, index: ivtmp.531_41, offset: 28B]+0 S4 A32])) ../src/izp-gaussian.c:273 110 {*movsf_internal}
     (nil))

(insn:TI 38 37 39 6 (set (reg/v:SF 21 xmm0 [orig:89 tmp ] [89])
        (mult:SF (reg/v:SF 21 xmm0 [orig:89 tmp ] [89])
            (mem:SF (plus:DI (reg/v/f:DI 4 si [orig:238 vec ] [238])
                    (const_int 8 [0x8])) [3 MEM[(float *)vec_21(D) + 8B]+0 S4 A32]))) ../src/izp-gaussian.c:273 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 39 38 40 6 (set (reg/v:SF 21 xmm0 [orig:89 tmp ] [89])
        (plus:SF (reg/v:SF 21 xmm0 [orig:89 tmp ] [89])
            (reg/v:SF 22 xmm1 [orig:81 tmp ] [81]))) ../src/izp-gaussian.c:273 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:81 tmp ] [81])
        (nil)))

(debug_insn 40 39 41 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:89 tmp ] [89])) ../src/izp-gaussian.c:273 -1
     (nil))

(insn 41 40 42 6 (set (reg/v:SF 22 xmm1 [orig:96 tmp ] [96])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 2 cx [orig:220 pretmp.516 ] [220])
                    (reg:DI 0 ax [orig:66 ivtmp.531 ] [66]))
                (const_int 32 [0x20])) [3 MEM[base: pretmp.516_204, index: ivtmp.531_41, offset: 32B]+0 S4 A32])) ../src/izp-gaussian.c:274 110 {*movsf_internal}
     (nil))

(insn:TI 42 41 43 6 (set (reg/v:SF 22 xmm1 [orig:96 tmp ] [96])
        (mult:SF (reg/v:SF 22 xmm1 [orig:96 tmp ] [96])
            (mem:SF (plus:DI (reg/v/f:DI 4 si [orig:238 vec ] [238])
                    (const_int 12 [0xc])) [3 MEM[(float *)vec_21(D) + 12B]+0 S4 A32]))) ../src/izp-gaussian.c:274 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 43 42 44 6 (set (reg/v:SF 22 xmm1 [orig:96 tmp ] [96])
        (plus:SF (reg/v:SF 22 xmm1 [orig:96 tmp ] [96])
            (reg/v:SF 21 xmm0 [orig:89 tmp ] [89]))) ../src/izp-gaussian.c:274 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:89 tmp ] [89])
        (nil)))

(debug_insn 44 43 45 6 (var_location:SF tmp (reg/v:SF 22 xmm1 [orig:96 tmp ] [96])) ../src/izp-gaussian.c:274 -1
     (nil))

(insn 45 44 46 6 (set (reg/v:SF 21 xmm0 [orig:106 tmp ] [106])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 2 cx [orig:220 pretmp.516 ] [220])
                    (reg:DI 0 ax [orig:66 ivtmp.531 ] [66]))
                (const_int 36 [0x24])) [3 MEM[base: pretmp.516_204, index: ivtmp.531_41, offset: 36B]+0 S4 A32])) ../src/izp-gaussian.c:275 110 {*movsf_internal}
     (nil))

(insn:TI 46 45 47 6 (set (reg/v:SF 21 xmm0 [orig:106 tmp ] [106])
        (mult:SF (reg/v:SF 21 xmm0 [orig:106 tmp ] [106])
            (mem:SF (plus:DI (reg/v/f:DI 4 si [orig:238 vec ] [238])
                    (const_int 16 [0x10])) [3 MEM[(float *)vec_21(D) + 16B]+0 S4 A32]))) ../src/izp-gaussian.c:275 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 47 46 48 6 (set (reg/v:SF 21 xmm0 [orig:106 tmp ] [106])
        (plus:SF (reg/v:SF 21 xmm0 [orig:106 tmp ] [106])
            (reg/v:SF 22 xmm1 [orig:96 tmp ] [96]))) ../src/izp-gaussian.c:275 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:96 tmp ] [96])
        (nil)))

(debug_insn 48 47 49 6 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:106 tmp ] [106])) ../src/izp-gaussian.c:275 -1
     (nil))

(insn 49 48 50 6 (set (reg/v:SF 22 xmm1 [orig:116 tmp ] [116])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 2 cx [orig:220 pretmp.516 ] [220])
                    (reg:DI 0 ax [orig:66 ivtmp.531 ] [66]))
                (const_int 40 [0x28])) [3 MEM[base: pretmp.516_204, index: ivtmp.531_41, offset: 40B]+0 S4 A32])) ../src/izp-gaussian.c:276 110 {*movsf_internal}
     (nil))

(insn:TI 50 49 51 6 (set (reg/v:SF 22 xmm1 [orig:116 tmp ] [116])
        (mult:SF (reg/v:SF 22 xmm1 [orig:116 tmp ] [116])
            (mem:SF (plus:DI (reg/v/f:DI 4 si [orig:238 vec ] [238])
                    (const_int 20 [0x14])) [3 MEM[(float *)vec_21(D) + 20B]+0 S4 A32]))) ../src/izp-gaussian.c:276 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 51 50 53 6 (set (reg/v:SF 22 xmm1 [orig:116 tmp ] [116])
        (plus:SF (reg/v:SF 22 xmm1 [orig:116 tmp ] [116])
            (reg/v:SF 21 xmm0 [orig:106 tmp ] [106]))) ../src/izp-gaussian.c:276 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:106 tmp ] [106])
        (nil)))

(debug_insn 53 51 54 6 (var_location:SF tmp (plus:SF (mult:SF (mem:SF (plus:DI (reg/f:DI 2 cx [orig:220 pretmp.516 ] [220])
                    (plus:DI (reg:DI 0 ax [orig:66 ivtmp.531 ] [66])
                        (const_int 44 [0x2c]))) [0 MEM[base: pretmp.516_204, index: ivtmp.531_41, offset: 44B]+0 S4 A32])
            (mem:SF (plus:DI (reg/v/f:DI 4 si [orig:238 vec ] [238])
                    (const_int 24 [0x18])) [0 MEM[(float *)vec_21(D) + 24B]+0 S4 A32]))
        (reg/v:SF 22 xmm1 [orig:116 tmp ] [116]))) ../src/izp-gaussian.c:277 -1
     (nil))

(insn 54 53 55 6 (set (reg:SF 21 xmm0 [260])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 2 cx [orig:220 pretmp.516 ] [220])
                    (reg:DI 0 ax [orig:66 ivtmp.531 ] [66]))
                (const_int 44 [0x2c])) [3 MEM[base: pretmp.516_204, index: ivtmp.531_41, offset: 44B]+0 S4 A32])) ../src/izp-gaussian.c:277 110 {*movsf_internal}
     (nil))

(insn:TI 55 54 56 6 (set (reg:SF 21 xmm0 [260])
        (mult:SF (reg:SF 21 xmm0 [260])
            (mem:SF (plus:DI (reg/v/f:DI 4 si [orig:238 vec ] [238])
                    (const_int 24 [0x18])) [3 MEM[(float *)vec_21(D) + 24B]+0 S4 A32]))) ../src/izp-gaussian.c:277 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 56 55 57 6 (set (reg:SF 21 xmm0 [260])
        (plus:SF (reg:SF 21 xmm0 [260])
            (reg/v:SF 22 xmm1 [orig:116 tmp ] [116]))) ../src/izp-gaussian.c:277 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 22 xmm1 [orig:116 tmp ] [116])
        (nil)))

(insn:TI 57 56 59 6 (set (mem:SF (plus:DI (plus:DI (reg/f:DI 2 cx [orig:220 pretmp.516 ] [220])
                    (reg:DI 0 ax [orig:66 ivtmp.531 ] [66]))
                (const_int 32 [0x20])) [3 MEM[base: pretmp.516_204, index: ivtmp.531_41, offset: 32B]+0 S4 A32])
        (reg:SF 21 xmm0 [260])) ../src/izp-gaussian.c:279 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [260])
        (nil)))

(debug_insn 59 57 60 6 (var_location:SI j (debug_expr:SI D#2)) -1
     (nil))

(insn 60 59 62 6 (parallel [
            (set (reg:DI 0 ax [orig:66 ivtmp.531 ] [66])
                (plus:DI (reg:DI 0 ax [orig:66 ivtmp.531 ] [66])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:279 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 62 60 63 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:66 ivtmp.531 ] [66])
            (reg:DI 37 r8 [orig:268 D.8064 ] [268]))) ../src/izp-gaussian.c:268 7 {*cmpdi_1}
     (nil))

(jump_insn:TI 63 62 73 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 61)
            (pc))) ../src/izp-gaussian.c:268 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 61)
;; End of basic block 6 -> ( 6 7)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]


;; Succ edge  6 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  7 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 6 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 6 [bp] 7 [sp] 38 [r9] 39 [r10]
;; lr  def 	 17 [flags] 38 [r9]
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 17 [flags] 38 [r9]
;; live  kill	 17 [flags]

;; Pred edge  6 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  4 [9.0%]  (can_fallthru)
(code_label 73 63 64 7 12 "" [1 uses])

(note 64 73 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(debug_insn 66 64 67 7 (var_location:SI i (debug_expr:SI D#3)) -1
     (nil))

(insn:TI 67 66 68 7 (parallel [
            (set (reg:DI 38 r9 [orig:70 ivtmp.544 ] [70])
                (plus:DI (reg:DI 38 r9 [orig:70 ivtmp.544 ] [70])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:268 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 68 67 69 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 38 r9 [orig:70 ivtmp.544 ] [70])
            (reg:DI 39 r10 [orig:77 D.8076 ] [77]))) ../src/izp-gaussian.c:267 7 {*cmpdi_1}
     (nil))

(jump_insn:TI 69 68 86 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 70)
            (pc))) ../src/izp-gaussian.c:267 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 70)
;; End of basic block 7 -> ( 4 8)
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10]


;; Succ edge  4 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  8 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 7 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame]
;; lr  use 	 7 [sp]
;; lr  def 	 6 [bp] 7 [sp]
;; live  in  	 7 [sp] 20 [frame]
;; live  gen 	 6 [bp] 7 [sp]
;; live  kill	

;; Pred edge  7 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  2 [9.0%]  (can_fallthru)
(code_label 86 69 87 8 8 "" [1 uses])

(note 87 86 110 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 110 87 111 8 NOTE_INSN_EPILOGUE_BEG)

(insn/f:TI 111 110 112 8 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:283 52 {*popdi1}
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))

(jump_insn:TI 112 111 113 8 (return) ../src/izp-gaussian.c:283 634 {return_internal}
     (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]


;; Succ edge  EXIT [100.0%] 

(barrier 113 112 102)

(note 102 113 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function izp_extendImage (izp_extendImage)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 54 count 51 (  1.5)


izp_extendImage

Dataflow summary:
def_info->table_size = 442, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15] 45[xmm8]
;;  ref usage 	r0={18d,24u,1e} r1={25d,24u} r2={12d,19u,1e} r3={3d,8u,1e} r4={28d,31u} r5={16d,14u} r6={3d,45u} r7={15d,56u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={70d,24u} r18={5d} r19={5d} r20={1d,1u} r21={25d,23u,2e} r22={22d,19u,1e} r23={9d,5u} r24={8d,3u} r25={7d,2u} r26={13d,7u} r27={8d,2u} r28={7d,1u} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={12d,13u,2e} r38={10d,7u,2e} r39={13d,8u} r40={7d,2u} r41={3d,5u} r42={3d,3u} r43={8d,19u} r44={5d,14u,2e} r45={6d,1u} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r337={1e} 
;;    total ref usage 875{482d,380u,13e} in 261{256 regular + 5 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 0 )->[2]->( 30 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 2 )->[3]->( 31 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 3 30 31 )->[4]->( 32 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 4 )->[5]->( 6 32 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 5 )->[6]->( 7 17 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 6 )->[7]->( 8 33 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 4 [si] 17 [flags] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 17 [flags] 38 [r9]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 7 )->[8]->( 9 17 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 9 33 )->[10]->( 11 15 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 10 )->[11]->( 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 38 [r9] 44 [r15]
;; lr  def 	 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]

( 13 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; lr  use 	 6 [bp] 7 [sp] 27 [xmm6]
;; lr  def 	 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; live  gen 	 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]

( 12 11 )->[13]->( 12 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 38 [r9] 39 [r10] 45 [xmm8]
;; lr  def 	 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6] 38 [r9] 39 [r10]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; live  gen 	 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6] 38 [r9] 39 [r10]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]

( 13 )->[14]->( 15 17 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 5 [di] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 14 10 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 16 15 )->[16]->( 16 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 16 6 8 14 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 43 [r14]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 17 32 )->[18]->( 19 29 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags] 37 [r8]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

( 18 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags] 23 [xmm2] 24 [xmm3] 38 [r9]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 5 [di] 23 [xmm2] 24 [xmm3] 38 [r9]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]

( 19 28 )->[20]->( 21 28 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]

( 20 )->[21]->( 34 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13] 44 [r15]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]

( 21 )->[22]->( 23 34 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 39 [r10]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 39 [r10]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]

( 22 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]

( 24 23 )->[24]->( 24 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 23 [xmm2] 24 [xmm3]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]

( 24 )->[25]->( 26 28 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 38 [r9]
;; lr  def 	 17 [flags] 39 [r10]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags] 39 [r10]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]

( 25 34 )->[26]->( 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 39 [r10]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]

( 27 26 )->[27]->( 27 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]

( 27 20 25 )->[28]->( 20 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  def 	 17 [flags] 37 [r8]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]

( 18 28 )->[29]->( 1 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 2 )->[30]->( 31 4 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 37 [r8] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 37 [r8] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 3 30 )->[31]->( 4 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 37 [r8] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 37 [r8] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 5 4 )->[32]->( 18 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 7 )->[33]->( 10 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 22 21 )->[34]->( 26 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 39 [r10]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 39 [r10]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]

( 29 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(20){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 80 to worklist
  Adding insn 76 to worklist
  Adding insn 74 to worklist
  Adding insn 509 to worklist
  Adding insn 507 to worklist
  Adding insn 505 to worklist
  Adding insn 504 to worklist
  Adding insn 503 to worklist
  Adding insn 502 to worklist
  Adding insn 501 to worklist
  Adding insn 499 to worklist
  Adding insn 96 to worklist
  Adding insn 134 to worklist
  Adding insn 130 to worklist
  Adding insn 127 to worklist
  Adding insn 121 to worklist
  Adding insn 118 to worklist
  Adding insn 452 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
  Adding insn 110 to worklist
  Adding insn 138 to worklist
  Adding insn 142 to worklist
  Adding insn 140 to worklist
  Adding insn 154 to worklist
  Adding insn 160 to worklist
  Adding insn 158 to worklist
  Adding insn 156 to worklist
  Adding insn 167 to worklist
  Adding insn 537 to worklist
  Adding insn 460 to worklist
  Adding insn 205 to worklist
  Adding insn 200 to worklist
  Adding insn 198 to worklist
  Adding insn 193 to worklist
  Adding insn 209 to worklist
  Adding insn 230 to worklist
  Adding insn 225 to worklist
  Adding insn 222 to worklist
  Adding insn 238 to worklist
  Adding insn 256 to worklist
  Adding insn 254 to worklist
  Adding insn 252 to worklist
  Adding insn 323 to worklist
  Adding insn 320 to worklist
  Adding insn 334 to worklist
  Adding insn 348 to worklist
  Adding insn 278 to worklist
  Adding insn 273 to worklist
  Adding insn 271 to worklist
  Adding insn 270 to worklist
  Adding insn 282 to worklist
  Adding insn 309 to worklist
  Adding insn 304 to worklist
  Adding insn 302 to worklist
  Adding insn 317 to worklist
  Adding insn 314 to worklist
  Adding insn 518 to worklist
  Adding insn 361 to worklist
  Adding insn 533 to worklist
  Adding insn 90 to worklist
  Adding insn 86 to worklist
  Adding insn 448 to worklist
  Adding insn 82 to worklist
  Adding insn 539 to worklist
  Adding insn 106 to worklist
  Adding insn 102 to worklist
  Adding insn 450 to worklist
  Adding insn 98 to worklist
  Adding insn 541 to worklist
  Adding insn 249 to worklist
  Adding insn 244 to worklist
  Adding insn 243 to worklist
  Adding insn 543 to worklist
  Adding insn 545 to worklist
Finished finding needed instructions:
processing block 29 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 517 to worklist
  Adding insn 516 to worklist
  Adding insn 515 to worklist
  Adding insn 514 to worklist
  Adding insn 513 to worklist
  Adding insn 512 to worklist
  Adding insn 511 to worklist
  Adding insn 358 to worklist
processing block 28 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 316 to worklist
  Adding insn 315 to worklist
processing block 27 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 308 to worklist
  Adding insn 487 to worklist
  Adding insn 305 to worklist
  Adding insn 292 to worklist
  Adding insn 289 to worklist
processing block 26 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 288 to worklist
  Adding insn 287 to worklist
  Adding insn 286 to worklist
  Adding insn 391 to worklist
  Adding insn 522 to worklist
processing block 34 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 523 to worklist
processing block 25 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 281 to worklist
  Adding insn 411 to worklist
processing block 24 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 277 to worklist
  Adding insn 275 to worklist
  Adding insn 274 to worklist
  Adding insn 268 to worklist
  Adding insn 267 to worklist
  Adding insn 266 to worklist
  Adding insn 480 to worklist
  Adding insn 265 to worklist
  Adding insn 261 to worklist
processing block 23 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 521 to worklist
  Adding insn 520 to worklist
processing block 22 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 347 to worklist
  Adding insn 485 to worklist
  Adding insn 343 to worklist
  Adding insn 342 to worklist
  Adding insn 484 to worklist
  Adding insn 340 to worklist
  Adding insn 339 to worklist
  Adding insn 483 to worklist
  Adding insn 482 to worklist
  Adding insn 336 to worklist
  Adding insn 335 to worklist
processing block 21 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 333 to worklist
  Adding insn 326 to worklist
  Adding insn 325 to worklist
processing block 20 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 322 to worklist
processing block 19 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 263 to worklist
  Adding insn 392 to worklist
  Adding insn 486 to worklist
  Adding insn 328 to worklist
  Adding insn 481 to worklist
processing block 18 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 255 to worklist
  Adding insn 524 to worklist
processing block 32 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 526 to worklist
  Adding insn 525 to worklist
  Adding insn 247 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
processing block 12 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
  Adding insn 63 to worklist
processing block 17 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 237 to worklist
processing block 16 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 229 to worklist
  Adding insn 227 to worklist
  Adding insn 226 to worklist
  Adding insn 223 to worklist
processing block 15 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 220 to worklist
  Adding insn 218 to worklist
  Adding insn 217 to worklist
  Adding insn 216 to worklist
  Adding insn 489 to worklist
  Adding insn 214 to worklist
  Adding insn 213 to worklist
  Adding insn 488 to worklist
processing block 14 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 208 to worklist
  Adding insn 207 to worklist
processing block 13 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
  Adding insn 204 to worklist
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 197 to worklist
  Adding insn 196 to worklist
  Adding insn 192 to worklist
  Adding insn 191 to worklist
  Adding insn 478 to worklist
  Adding insn 190 to worklist
  Adding insn 477 to worklist
  Adding insn 444 to worklist
  Adding insn 443 to worklist
  Adding insn 442 to worklist
  Adding insn 441 to worklist
  Adding insn 440 to worklist
  Adding insn 475 to worklist
  Adding insn 439 to worklist
  Adding insn 438 to worklist
  Adding insn 473 to worklist
  Adding insn 437 to worklist
  Adding insn 436 to worklist
  Adding insn 435 to worklist
  Adding insn 434 to worklist
  Adding insn 433 to worklist
  Adding insn 471 to worklist
  Adding insn 432 to worklist
  Adding insn 431 to worklist
  Adding insn 469 to worklist
  Adding insn 184 to worklist
  Adding insn 468 to worklist
processing block 11 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
  Adding insn 189 to worklist
  Adding insn 527 to worklist
  Adding insn 182 to worklist
  Adding insn 467 to worklist
  Adding insn 179 to worklist
  Adding insn 466 to worklist
  Adding insn 177 to worklist
  Adding insn 465 to worklist
  Adding insn 393 to worklist
  Adding insn 176 to worklist
  Adding insn 174 to worklist
  Adding insn 173 to worklist
  Adding insn 464 to worklist
  Adding insn 463 to worklist
  Adding insn 172 to worklist
  Adding insn 462 to worklist
  Adding insn 461 to worklist
  Adding insn 492 to worklist
  Adding insn 491 to worklist
  Adding insn 490 to worklist
processing block 10 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 166 to worklist
  Adding insn 493 to worklist
  Adding insn 164 to worklist
  Adding insn 459 to worklist
  Adding insn 163 to worklist
  Adding insn 458 to worklist
processing block 9 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 61 to worklist
processing block 8 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 159 to worklist
processing block 33 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 528 to worklist
processing block 7 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 153 to worklist
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 149 to worklist
  Adding insn 147 to worklist
  Adding insn 457 to worklist
processing block 6 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 141 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 137 to worklist
processing block 4 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 455 to worklist
  Adding insn 133 to worklist
  Adding insn 126 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 456 to worklist
  Adding insn 453 to worklist
  Adding insn 119 to worklist
  Adding insn 117 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 494 to worklist
processing block 31 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 107 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 451 to worklist
  Adding insn 529 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
processing block 30 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 532 to worklist
  Adding insn 91 to worklist
  Adding insn 449 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 530 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
processing block 3 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 495 to worklist
processing block 2 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 498 to worklist
  Adding insn 77 to worklist
  Adding insn 497 to worklist
  Adding insn 496 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 506 to worklist
  Adding insn 500 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 54 count 41 (  1.2)
deleting insn with uid = 508.
deleting insn with uid = 60.
deleting insn with uid = 78.
;;   ======================================================
;;   -- basic block 2 from 499 to 80 -- after reload
;;   ======================================================

;;	  0-->   499 [--sp]=bp                         :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   500 bp=sp                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   501 [--sp]=r15                        :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   507 use bp                            :nothing
;;	  2-->   502 [--sp]=r14                        :c2_decodern,(c2_p4+c2_p3)
;;	  3-->   503 [--sp]=r13                        :c2_decodern,(c2_p4+c2_p3)
;;	  4-->   504 [--sp]=r12                        :c2_decodern,(c2_p4+c2_p3)
;;	  5-->   505 [--sp]=bx                         :c2_decodern,(c2_p4+c2_p3)
;;	  6-->   506 {sp=sp-0x18;clobber flags;clobber :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   509 unspec/v{0;}                      :c2_decoder0
;;	 13-->    57 r12=dx                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->    56 bx=si                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->    55 r13=di                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->   496 ax=bx+0x10#0                      :c2_decodern,c2_p0
;;	 14-->    58 r15=cx                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 15-->   497 r14=r12+0x10#0                    :c2_decodern,c2_p0
;;	 15-->    74 [cx]=ax                           :c2_decodern,(c2_p4+c2_p3)
;;	 16-->    76 [r8]=r14                          :c2_decodern,(c2_p4+c2_p3)
;;	 17-->    77 dx=[cx]                           :c2_decodern,c2_p2
;;	 21-->   498 flags=cmp(dx&0x3,0)               :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 22-->    80 pc={(flags!=0)?L535:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 22
;;   new head = 499
;;   new tail = 80

;;   ======================================================
;;   -- basic block 3 from 495 to 96 -- after reload
;;   ======================================================

;;	  0-->   495 flags=cmp(r14&0x3,0)              :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    96 pc={(flags!=0)?L536:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 495
;;   new tail = 96

deleting insn with uid = 131.
deleting insn with uid = 132.
;;   ======================================================
;;   -- basic block 4 from 110 to 134 -- after reload
;;   ======================================================

;;	  0-->   110: debug width => dx                :nothing
;;	  0-->   111: debug height => r14              :nothing
;;	  0-->   112: debug size => 0x4                :nothing
;;	  0-->   494 si=r14+0x1#0                      :c2_decodern,c2_p0
;;	  0-->   117 di=0x20                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   452 [bp-0x40]=dx                      :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   114 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   115 {si=si<<0x3;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	  3-->   118 call <...>                        :c2_decoder0
;;	  3-->   453 dx=[bp-0x40]                      :c2_decodern,c2_p2
;;	  3-->   456 si=r14                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   126 di=0x20                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   119 r15=ax                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   121: debug idx => r15                 :nothing
;;	  7-->   122 {si=si*dx;clobber flags;}         :c2_decodern,c2_p1
;;	 10-->   123 {si=si<<0x2;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	 11-->   124 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 12-->   127 call <...>                        :c2_decoder0
;;	 12-->   130: debug heap => ax                 :nothing
;;	 12-->   455 dx=[bp-0x40]                      :c2_decodern,c2_p2
;;	 13-->   133 flags=cmp(ax,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->   134 pc={(flags==0)?L241:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 14
;;   new head = 110
;;   new tail = 134

;;   ======================================================
;;   -- basic block 5 from 137 to 138 -- after reload
;;   ======================================================

;;	  0-->   137 flags=cmp(r15,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   138 pc={(flags==0)?L241:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 137
;;   new tail = 138

;;   ======================================================
;;   -- basic block 6 from 140 to 142 -- after reload
;;   ======================================================

;;	  0-->   140: debug i => 0                     :nothing
;;	  0-->   141 flags=cmp(r14,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   142 pc={(flags<=0)?L235:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 140
;;   new tail = 142

deleting insn with uid = 148.
;;   ======================================================
;;   -- basic block 7 from 457 to 154 -- after reload
;;   ======================================================

;;	  0-->   457 si=r15                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   147 {si=si<<0x3c;clobber flags;}      :c2_decodern,c2_p0|c2_p5
;;	  2-->   149 {si=si 0>>0x3f;clobber flags;}    :c2_decodern,c2_p0|c2_p5
;;	  3-->   150 flags=cmp(si,r14)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   151 si={(leu(flags,0))?si:r14}        :c2_decoder0,(c2_p0|c2_p1|c2_p5)*2
;;	  6-->   153 flags=cmp(si,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   152 r9=zxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   154 pc={(flags==0)?L367:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 7
;;   new head = 457
;;   new tail = 154

;;   ======================================================
;;   -- basic block 8 from 156 to 160 -- after reload
;;   ======================================================

;;	  0-->   159 flags=cmp(r14,si)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   156 [r15]=ax                          :c2_decodern,(c2_p4+c2_p3)
;;	  0-->   158: debug i => 0x1                   :nothing
;;	  1-->   160 pc={(flags==0)?L235:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 156
;;   new tail = 160

;;   ======================================================
;;   -- basic block 9 from 61 to 61 -- after reload
;;   ======================================================

;;	  0-->    61 cx=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 61
;;   new tail = 61

;;   ======================================================
;;   -- basic block 10 from 458 to 167 -- after reload
;;   ======================================================

;;	  0-->   458 r8=r14                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   163 {r8=r8-si;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   459 si=r8                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   164 {si=si 0>>0x2;clobber flags;}     :c2_decodern,c2_p0|c2_p5
;;	  4-->   493 di=si*0x4#0                       :c2_decodern,c2_p0
;;	  5-->   166 flags=cmp(di,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   167 pc={(flags==0)?L210:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 6
;;   new head = 458
;;   new tail = 167

deleting insn with uid = 181.
;;   ======================================================
;;   -- basic block 11 from 490 to 537 -- after reload
;;   ======================================================

;;	  0-->   491 r11=cx+0x2#0                      :c2_decodern,c2_p0
;;	  0-->   189 xmm7=const_vector                 :nothing
;;	  1-->   460 [bp-0x34]=r11                     :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   492 r11=cx+0x3#0                      :c2_decodern,c2_p0
;;	  2-->   461 xmm1=[bp-0x34]                    :c2_decodern,c2_p2
;;	  2-->   490 r10=cx+0x1#0                      :c2_decodern,c2_p0
;;	  2-->   462 xmm0=r11                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   182 r9=r9*0x8+r15                     :c2_decodern,c2_p0
;;	  3-->   464 xmm2=r10                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   527 {r10=0;clobber flags;}            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   172 xmm1=vec_concat                   :nothing
;;	  4-->   463 xmm0=cx                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   173 xmm0=vec_concat                   :nothing
;;	  5-->   176 xmm2=[`*.LC3']                    :c2_decodern,c2_p2
;;	  5-->   174 xmm0=vec_concat                   :nothing
;;	  6-->   465 xmm1=dx                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   177 xmm4=vec_duplicate                :nothing
;;	  7-->   466 xmm1=ax                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   393 xmm8=xmm2                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->   179 xmm1=vec_duplicate                :nothing
;;	  8-->   467 xmm3=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->   537 pc=L203                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 8
;;   new head = 490
;;   new tail = 537

;;   ======================================================
;;   -- basic block 12 from 63 to 63 -- after reload
;;   ======================================================

;;	  0-->    63 xmm0=xmm6                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 63
;;   new tail = 63

;;   ======================================================
;;   -- basic block 13 from 468 to 205 -- after reload
;;   ======================================================

;;	  0-->   471 xmm5=xmm4                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   468 xmm6=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   469 xmm1=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   433 xmm5=xmm5 0>>0x20                 :c2_decodern,c2_p1
;;	  1-->   201 {r10=r10+0x1;clobber flags;}      :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   184 xmm6=xmm6+xmm8                    :c2_decodern,c2_p0|c2_p5
;;	  2-->   432 xmm0=xmm0 0>>0x20                 :c2_decodern,c2_p1
;;	  3-->   434 xmm0=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	  3-->   475 xmm5=xmm2                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   431 xmm1=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	  5-->   440 xmm5=xmm5 0>>0x20                 :c2_decodern,c2_p1
;;	  6-->   436 xmm0=vec_select                   :nothing
;;	  7-->   435 xmm1=vec_select                   :nothing
;;	  7-->   437 xmm1=vec_select                   :nothing
;;	  7-->   473 xmm0=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->   439 xmm1=xmm1 0>>0x20                 :c2_decodern,c2_p1
;;	  9-->   441 xmm1=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	 10-->   438 xmm0=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	 12-->   443 xmm1=vec_select                   :nothing
;;	 13-->   442 xmm0=vec_select                   :nothing
;;	 13-->   444 xmm0=vec_select                   :nothing
;;	 13-->   477 xmm1=xmm7                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->   190 xmm1=xmm1>xmm0                    :c2_decodern,c2_p1
;;	 14-->   478 xmm5=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 17-->   191 xmm5=vec_select                   :nothing
;;	 17-->   196 xmm0=vec_select                   :nothing
;;	 17-->   192 xmm5=xmm5+xmm3                    :c2_decodern,c2_p0|c2_p5
;;	 18-->   197 xmm0=xmm0+xmm3                    :c2_decodern,c2_p0|c2_p5
;;	 18-->   193 [r9]=xmm5                         :c2_decodern,(c2_p4+c2_p3)
;;	 19-->   198 [r9+0x10]=xmm0                    :c2_decodern,(c2_p4+c2_p3)
;;	 19-->   200: debug i => D#4                   :nothing
;;	 19-->   202 {r9=r9+0x20;clobber flags;}       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 19-->   204 flags=cmp(r10,si)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 20-->   205 pc={(ltu(flags,0))?L371:pc}       :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 20
;;   new head = 468
;;   new tail = 205

;;   ======================================================
;;   -- basic block 14 from 207 to 209 -- after reload
;;   ======================================================

;;	  0-->   207 {cx=cx+di;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   208 flags=cmp(r8,di)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   209 pc={(flags==0)?L235:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 207
;;   new tail = 209

deleting insn with uid = 219.
;;   ======================================================
;;   -- basic block 15 from 488 to 220 -- after reload
;;   ======================================================

;;	  0-->   488 di=dx*0x4#0                       :c2_decodern,c2_p0
;;	  0-->   214 {dx=dx*cx;clobber flags;}         :c2_decodern,c2_p1
;;	  1-->   213 di=sxn(di)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   489 si=dx*0x4#0                       :c2_decodern,c2_p0
;;	  3-->   218 dx=sxn(cx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   220 dx=dx*0x8+r15                     :c2_decodern,c2_p0
;;	  4-->   216 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   217 {si=ax+si;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 5
;;   new head = 488
;;   new tail = 220

;;   ======================================================
;;   -- basic block 16 from 222 to 230 -- after reload
;;   ======================================================

;;	  0-->   223 {cx=cx+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   225: debug i => cx                    :nothing
;;	  0-->   222 [dx]=si                           :c2_decodern,(c2_p4+c2_p3)
;;	  0-->   226 {si=si+di;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   227 {dx=dx+0x8;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   229 flags=cmp(r14,cx)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   230 pc={(flags>0)?L228:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 222
;;   new tail = 230

;;   ======================================================
;;   -- basic block 17 from 237 to 238 -- after reload
;;   ======================================================

;;	  0-->   237 r14=sxn(r14)                      :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   238 [r14*0x8+r15]=ax                  :c2_decodern,(c2_p4+c2_p3)
;;	Ready list (final):  
;;   total time = 1
;;   new head = 237
;;   new tail = 238

;;   ======================================================
;;   -- basic block 18 from 252 to 256 -- after reload
;;   ======================================================

;;	  0-->   252: debug extImage optimized away    :nothing
;;	  0-->   254: debug i => 0                     :nothing
;;	  0-->   524 {r8=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   255 flags=cmp(r12,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   256 pc={(flags<=0)?L352:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 252
;;   new tail = 256

;;   ======================================================
;;   -- basic block 19 from 481 to 263 -- after reload
;;   ======================================================

;;	  0-->   481 di=bx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   392 xmm3=[`*.LC5']                    :c2_decodern,c2_p2
;;	  0-->   263 xmm2=const_vector                 :nothing
;;	  1-->   328 {di=di 0>>0x2;clobber flags;}     :c2_decodern,c2_p0|c2_p5
;;	  2-->   486 r9=di*0x4#0                       :c2_decodern,c2_p0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 481
;;   new tail = 263

;;   ======================================================
;;   -- basic block 20 from 320 to 323 -- after reload
;;   ======================================================

;;	  0-->   320: debug j => 0                     :nothing
;;	  0-->   322 flags=cmp(bx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   323 pc={(flags<=0)?L321:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 320
;;   new tail = 323

deleting insn with uid = 331.
deleting insn with uid = 332.
;;   ======================================================
;;   -- basic block 21 from 325 to 334 -- after reload
;;   ======================================================

;;	  0-->   333 flags=cmp(r9,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   325 cx=[r8*0x8+r15+0x40]              :c2_decodern,c2_p2
;;	  1-->   326 si=[r8*0x8+r13]                   :c2_decodern,c2_p2
;;	  1-->   334 pc={(flags==0)?L381:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 325
;;   new tail = 334

deleting insn with uid = 345.
deleting insn with uid = 346.
;;   ======================================================
;;   -- basic block 22 from 335 to 348 -- after reload
;;   ======================================================

;;	  0-->   482 r10=si+0x10                       :c2_decodern,c2_p0
;;	  0-->   335 flags=cmp(bx,0x6)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   483 ax=cx+0x20                        :c2_decodern,c2_p0
;;	  1-->   336 dx=gtu(flags,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   339 flags=cmp(r10,ax)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   484 r10=cx+0x30                       :c2_decodern,c2_p0
;;	  3-->   340 ax=ltu(flags,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   342 flags=cmp(si,r10)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   343 r10=gtu(flags,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   485 {ax=ax|r10;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   347 flags=cmp(dx&ax,0)                :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->   348 pc={(flags==0)?L381:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 8
;;   new head = 335
;;   new tail = 348

;;   ======================================================
;;   -- basic block 23 from 520 to 521 -- after reload
;;   ======================================================

;;	  0-->   520 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   521 {dx=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 520
;;   new tail = 521

;;   ======================================================
;;   -- basic block 24 from 261 to 278 -- after reload
;;   ======================================================

;;	  0-->   261 xmm1=unspec[[si+ax]] 41           :c2_decodern,c2_p2
;;	  0-->   274 {dx=dx+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   265 xmm1=flt(xmm1)                    :nothing
;;	  2-->   480 xmm0=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   266 xmm0=xmm0<xmm2                    :c2_decodern,c2_p1
;;	  6-->   267 xmm0=xmm0&xmm3                    :nothing
;;	  6-->   268 xmm0=xmm0+xmm1                    :c2_decodern,c2_p1
;;	  9-->   270 [cx+ax+0x20]=vec_select           :c2_decodern,(c2_p4+c2_p3)
;;	 10-->   271 [cx+ax+0x28]=vec_select           :c2_decodern,(c2_p4+c2_p3)
;;	 10-->   273: debug j => D#5                   :nothing
;;	 10-->   275 {ax=ax+0x10;clobber flags;}       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 10-->   277 flags=cmp(di,dx)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 11-->   278 pc={(gtu(flags,0))?L276:pc}       :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 11
;;   new head = 261
;;   new tail = 278

;;   ======================================================
;;   -- basic block 25 from 411 to 282 -- after reload
;;   ======================================================

;;	  0-->   281 flags=cmp(bx,r9)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   411 r10=r9                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   282 pc={(flags==0)?L321:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 411
;;   new tail = 282

;;   ======================================================
;;   -- basic block 26 from 522 to 288 -- after reload
;;   ======================================================

;;	  0-->   391 dx=sxn(r10)                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   522 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   286 {dx=dx<<0x2;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	  2-->   287 {cx=cx+dx;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   288 {si=si+dx;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 522
;;   new tail = 288

;;   ======================================================
;;   -- basic block 27 from 289 to 309 -- after reload
;;   ======================================================

;;	  0-->   289 dx=zxn([ax*0x4+si])               :c2_decodern,c2_p2
;;	  4-->   292 xmm0=flt(dx)                      :c2_decodern,c2_p1
;;	  8-->   302 [ax*0x4+cx+0x20]=xmm0             :c2_decodern,(c2_p4+c2_p3)
;;	  8-->   304: debug j => D#6                   :nothing
;;	  8-->   305 {ax=ax+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  9-->   487 dx=r10+ax#0                       :c2_decodern,c2_p0
;;	 10-->   308 flags=cmp(bx,dx)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 11-->   309 pc={(flags>0)?L307:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 11
;;   new head = 289
;;   new tail = 309

;;   ======================================================
;;   -- basic block 28 from 314 to 317 -- after reload
;;   ======================================================

;;	  0-->   314: debug i => D#7                   :nothing
;;	  0-->   315 {r8=r8+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   316 flags=cmp(r12,r8)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   317 pc={(flags>0)?L425:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 314
;;   new tail = 317

deleting insn with uid = 510.
;;   ======================================================
;;   -- basic block 29 from 358 to 518 -- after reload
;;   ======================================================

;;	  0-->   511 {sp=sp+0x18;clobber flags;clobber :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   358 ax=r15                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   361 use ax                            :nothing
;;	  1-->   512 bx=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  5-->   513 r12=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  9-->   514 r13=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 13-->   515 r14=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 17-->   516 r15=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 21-->   517 bp=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 22-->   518 return                            :c2_decoder0
;;	Ready list (final):  
;;   total time = 22
;;   new head = 358
;;   new tail = 518

;;   ======================================================
;;   -- basic block 30 from 82 to 533 -- after reload
;;   ======================================================

;;	  0-->    82: debug __fmt => `*.LC1'           :nothing
;;	  0-->   530 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    83 si=`*.LC1'                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    84 di=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   448 [bp-0x40]=r8                      :c2_decodern,(c2_p4+c2_p3)
;;	  2-->    86 call <...>                        :c2_decoder0
;;	  2-->    87 dx=[r15]                          :c2_decodern,c2_p2
;;	  3-->   449 r8=[bp-0x40]                      :c2_decodern,c2_p2
;;	  6-->    88 {dx=dx+0x4;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->    89 {dx=dx&0xfffffffffffffffc;clobber :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->    90 [r15]=dx                          :c2_decodern,(c2_p4+c2_p3)
;;	  9-->    91 r14=[r8]                          :c2_decodern,c2_p2
;;	 13-->   532 flags=cmp(r14&0x3,0)              :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->   533 pc={(flags==0)?L108:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 14
;;   new head = 82
;;   new tail = 533

;;   ======================================================
;;   -- basic block 31 from 98 to 539 -- after reload
;;   ======================================================

;;	  0-->    98: debug __fmt => `*.LC2'           :nothing
;;	  0-->    99 si=`*.LC2'                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   100 di=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   529 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   450 [bp-0x40]=r8                      :c2_decodern,(c2_p4+c2_p3)
;;	  2-->   102 call <...>                        :c2_decoder0
;;	  2-->   451 r8=[bp-0x40]                      :c2_decodern,c2_p2
;;	  6-->   103 r14=[r8]                          :c2_decodern,c2_p2
;;	 10-->   104 {r14=r14+0x4;clobber flags;}      :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 11-->   105 {r14=r14&0xfffffffffffffffc;clobbe:c2_decodern,c2_p0|c2_p1|c2_p5
;;	 12-->   106 [r8]=r14                          :c2_decodern,(c2_p4+c2_p3)
;;	 13-->   107 dx=[r15]                          :c2_decodern,c2_p2
;;	 13-->   539 pc=L108                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 13
;;   new head = 98
;;   new tail = 539

;;   ======================================================
;;   -- basic block 32 from 243 to 541 -- after reload
;;   ======================================================

;;	  0-->   243: debug __stream => [`stderr']     :nothing
;;	  0-->   244: debug __fmt => `*.LC4'           :nothing
;;	  0-->   247 di=[`stderr']                     :c2_decodern,c2_p2
;;	  0-->   245 dx=`*.LC4'                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   525 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   246 si=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   526 {r15=0;clobber flags;}            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   249 call <...>                        :c2_decoder0
;;	  4-->   541 pc=L250                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 4
;;   new head = 243
;;   new tail = 541

;;   ======================================================
;;   -- basic block 33 from 528 to 543 -- after reload
;;   ======================================================

;;	  0-->   528 {cx=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   543 pc=L161                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 528
;;   new tail = 543

;;   ======================================================
;;   -- basic block 34 from 523 to 545 -- after reload
;;   ======================================================

;;	  0-->   523 {r10=0;clobber flags;}            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   545 pc=L330                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 523
;;   new tail = 545





izp_extendImage

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15] 45[xmm8]
;;  ref usage 	r0={18d,24u,1e} r1={25d,24u} r2={12d,19u,1e} r3={3d,8u,1e} r4={28d,31u} r5={16d,14u} r6={3d,45u} r7={15d,56u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={70d,24u} r18={5d} r19={5d} r20={1d,1u} r21={25d,23u,2e} r22={22d,19u,1e} r23={9d,5u} r24={8d,3u} r25={7d,2u} r26={13d,7u} r27={8d,2u} r28={7d,1u} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={12d,13u,2e} r38={10d,7u,2e} r39={13d,8u} r40={7d,2u} r41={3d,5u} r42={3d,3u} r43={8d,19u} r44={5d,14u,2e} r45={6d,1u} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r337={1e} 
;;    total ref usage 875{482d,380u,13e} in 261{256 regular + 5 call} insns.
(note 54 0 71 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 71 54 60 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 60 71 78 2 NOTE_INSN_FUNCTION_BEG)

(note 78 60 499 2 NOTE_INSN_DELETED)

(insn/f:TI 499 78 500 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg/f:DI 6 bp)) ../src/izp-gaussian.c:519 42 {*pushdi2_rex64}
     (nil))

(insn/f:TI 500 499 501 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) ../src/izp-gaussian.c:519 62 {*movdi_internal_rex64}
     (nil))

(insn/f 501 500 507 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 44 r15)) ../src/izp-gaussian.c:519 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))

(insn 507 501 502 2 (use (reg/f:DI 6 bp)) ../src/izp-gaussian.c:519 -1
     (nil))

(insn/f:TI 502 507 503 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 43 r14)) ../src/izp-gaussian.c:519 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f:TI 503 502 504 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 42 r13)) ../src/izp-gaussian.c:519 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f:TI 504 503 505 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) ../src/izp-gaussian.c:519 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f:TI 505 504 506 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) ../src/izp-gaussian.c:519 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f:TI 506 505 508 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) ../src/izp-gaussian.c:519 911 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 508 506 509 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 509 508 57 2 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) ../src/izp-gaussian.c:519 631 {blockage}
     (nil))

(insn:TI 57 509 56 2 (set (reg/v:SI 41 r12 [orig:277 rows ] [277])
        (reg:SI 1 dx [ rows ])) ../src/izp-gaussian.c:519 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ rows ])
        (nil)))

(insn 56 57 55 2 (set (reg/v:SI 3 bx [orig:276 cols ] [276])
        (reg:SI 4 si [ cols ])) ../src/izp-gaussian.c:519 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ cols ])
        (nil)))

(insn 55 56 496 2 (set (reg/v/f:DI 42 r13 [orig:275 image ] [275])
        (reg:DI 5 di [ image ])) ../src/izp-gaussian.c:519 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ image ])
        (nil)))

(insn:TI 496 55 58 2 (set (reg:SI 0 ax [280])
        (subreg:SI (plus:DI (reg:DI 3 bx [orig:276 cols ] [276])
                (const_int 16 [0x10])) 0)) ../src/izp-gaussian.c:521 250 {*lea_2}
     (nil))

(insn 58 496 497 2 (set (reg/v/f:DI 44 r15 [orig:278 newCols ] [278])
        (reg:DI 2 cx [ newCols ])) ../src/izp-gaussian.c:519 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 497 58 74 2 (set (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])
        (subreg:SI (plus:DI (reg:DI 41 r12 [orig:277 rows ] [277])
                (const_int 16 [0x10])) 0)) ../src/izp-gaussian.c:522 250 {*lea_2}
     (nil))

(insn 74 497 76 2 (set (mem:SI (reg/f:DI 2 cx [orig:278 newCols ] [278]) [5 *newCols_5(D)+0 S4 A32])
        (reg:SI 0 ax [280])) ../src/izp-gaussian.c:521 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [280])
        (expr_list:REG_EQUAL (plus:SI (reg/v:SI 3 bx [orig:276 cols ] [276])
                (const_int 16 [0x10]))
            (nil))))

(insn:TI 76 74 77 2 (set (mem:SI (reg/v/f:DI 37 r8 [orig:279 newRows ] [279]) [5 *newRows_8(D)+0 S4 A32])
        (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])) ../src/izp-gaussian.c:522 64 {*movsi_internal}
     (nil))

(insn:TI 77 76 498 2 (set (reg:SI 1 dx [orig:116 prephitmp.568 ] [116])
        (mem:SI (reg/f:DI 2 cx [orig:278 newCols ] [278]) [5 *newCols_5(D)+0 S4 A32])) ../src/izp-gaussian.c:524 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:278 newCols ] [278])
        (nil)))

(insn:TI 498 77 80 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 1 dx [orig:116 prephitmp.568 ] [116])
                (const_int 3 [0x3]))
            (const_int 0 [0]))) ../src/izp-gaussian.c:524 369 {*testqi_1_maybe_si}
     (nil))

(jump_insn:TI 80 498 92 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 535)
            (pc))) ../src/izp-gaussian.c:524 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil)))
 -> 535)
;; End of basic block 2 -> ( 30 3)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  30 [29.0%]  (can_fallthru)
;; Succ edge  3 [71.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  2 [71.0%]  (fallthru,can_fallthru)
(code_label 92 80 93 3 15 "" [0 uses])

(note 93 92 94 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 94 93 495 3 NOTE_INSN_DELETED)

(insn:TI 495 94 96 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 43 r14 [orig:115 prephitmp.568 ] [115])
                (const_int 3 [0x3]))
            (const_int 0 [0]))) ../src/izp-gaussian.c:529 369 {*testqi_1_maybe_si}
     (nil))

(jump_insn:TI 96 495 108 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 536)
            (pc))) ../src/izp-gaussian.c:529 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil)))
 -> 536)
;; End of basic block 3 -> ( 31 4)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  31 [29.0%]  (can_fallthru)
;; Succ edge  4 [71.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 3 30 31) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  3 [71.0%]  (fallthru,can_fallthru)
;; Pred edge  30 [71.0%]  (can_fallthru)
;; Pred edge  31 [100.0%]  (can_fallthru)
(code_label 108 96 109 4 16 "" [2 uses])

(note 109 108 131 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 131 109 132 4 NOTE_INSN_DELETED)

(note 132 131 110 4 NOTE_INSN_DELETED)

(debug_insn 110 132 111 4 (var_location:SI width (reg:SI 1 dx [orig:116 prephitmp.568 ] [116])) ../src/izp-gaussian.c:535 -1
     (nil))

(debug_insn 111 110 112 4 (var_location:SI height (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])) ../src/izp-gaussian.c:535 -1
     (nil))

(debug_insn 112 111 494 4 (var_location:SI size (const_int 4 [0x4])) -1
     (nil))

(insn:TI 494 112 117 4 (set (reg:SI 4 si [287])
        (subreg:SI (plus:DI (reg:DI 43 r14 [orig:115 prephitmp.568 ] [115])
                (const_int 1 [0x1])) 0)) ../src/izp-gaussian.c:583 250 {*lea_2}
     (nil))

(insn 117 494 452 4 (set (reg:DI 5 di)
        (const_int 32 [0x20])) ../src/izp-gaussian.c:583 62 {*movdi_internal_rex64}
     (nil))

(insn 452 117 114 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [6 S4 A64])
        (reg:SI 1 dx)) ../src/izp-gaussian.c:583 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx)
        (nil)))

(insn:TI 114 452 115 4 (set (reg:DI 4 si [288])
        (sign_extend:DI (reg:SI 4 si [287]))) ../src/izp-gaussian.c:583 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 115 114 118 4 (parallel [
            (set (reg:DI 4 si [289])
                (ashift:DI (reg:DI 4 si [288])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:583 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 118 115 453 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memalign") [flags 0x41]  <function_decl 0x2ae3457b0b00 memalign>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:583 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 453 118 456 4 (set (reg:SI 1 dx)
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [6 S4 A64])) ../src/izp-gaussian.c:584 64 {*movsi_internal}
     (nil))

(insn 456 453 126 4 (set (reg:SI 4 si [291])
        (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])) ../src/izp-gaussian.c:584 64 {*movsi_internal}
     (nil))

(insn:TI 126 456 119 4 (set (reg:DI 5 di)
        (const_int 32 [0x20])) ../src/izp-gaussian.c:584 62 {*movdi_internal_rex64}
     (nil))

(insn 119 126 121 4 (set (reg/v/f:DI 44 r15 [orig:148 extImage ] [148])
        (reg:DI 0 ax)) ../src/izp-gaussian.c:583 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 290)
            (nil))))

(debug_insn 121 119 122 4 (var_location:DI idx (reg/v/f:DI 44 r15 [orig:148 extImage ] [148])) ../src/izp-gaussian.c:583 -1
     (nil))

(insn:TI 122 121 123 4 (parallel [
            (set (reg:SI 4 si [291])
                (mult:SI (reg:SI 4 si [291])
                    (reg:SI 1 dx [orig:116 prephitmp.568 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:584 333 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:116 prephitmp.568 ] [116])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 123 122 124 4 (parallel [
            (set (reg:SI 4 si [292])
                (ashift:SI (reg:SI 4 si [291])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:584 497 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 124 123 127 4 (set (reg:DI 4 si [293])
        (sign_extend:DI (reg:SI 4 si [292]))) ../src/izp-gaussian.c:584 126 {*extendsidi2_rex64}
     (nil))

(call_insn:TI 127 124 130 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memalign") [flags 0x41]  <function_decl 0x2ae3457b0b00 memalign>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:584 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(debug_insn 130 127 455 4 (var_location:DI heap (reg/v/f:DI 0 ax [orig:152 heap ] [152])) ../src/izp-gaussian.c:584 -1
     (nil))

(insn 455 130 133 4 (set (reg:SI 1 dx)
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [6 S4 A64])) ../src/izp-gaussian.c:586 64 {*movsi_internal}
     (nil))

(insn:TI 133 455 134 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:152 heap ] [152])
            (const_int 0 [0]))) ../src/izp-gaussian.c:586 3 {*cmpdi_ccno_1}
     (nil))

(jump_insn:TI 134 133 382 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) ../src/izp-gaussian.c:586 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 434 [0x1b2])
            (nil)))
 -> 241)
;; End of basic block 4 -> ( 32 5)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  32 [4.3%]  (can_fallthru)
;; Succ edge  5 [95.7%]  (fallthru,can_fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  4 [95.7%]  (fallthru,can_fallthru)
(note 382 134 135 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 135 382 136 5 NOTE_INSN_DELETED)

(note 136 135 137 5 NOTE_INSN_DELETED)

(insn:TI 137 136 138 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 44 r15 [orig:148 extImage ] [148])
            (const_int 0 [0]))) ../src/izp-gaussian.c:586 3 {*cmpdi_ccno_1}
     (nil))

(jump_insn:TI 138 137 139 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) ../src/izp-gaussian.c:586 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 434 [0x1b2])
            (nil)))
 -> 241)
;; End of basic block 5 -> ( 6 32)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  6 [95.7%]  (fallthru,can_fallthru)
;; Succ edge  32 [4.3%]  (can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  5 [95.7%]  (fallthru,can_fallthru)
(note 139 138 140 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(debug_insn 140 139 141 6 (var_location:SI i (const_int 0 [0])) -1
     (nil))

(insn:TI 141 140 142 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])
            (const_int 0 [0]))) ../src/izp-gaussian.c:587 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 142 141 143 6 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) ../src/izp-gaussian.c:587 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 235)
;; End of basic block 6 -> ( 7 17)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  7 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  17 [9.0%]  (can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 4 [si] 17 [flags] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 17 [flags] 38 [r9]
;; live  kill	 17 [flags]

;; Pred edge  6 [91.0%]  (fallthru,can_fallthru)
(note 143 142 146 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 146 143 148 7 NOTE_INSN_DELETED)

(note 148 146 457 7 NOTE_INSN_DELETED)

(insn:TI 457 148 147 7 (set (reg:DI 4 si [300])
        (reg/v/f:DI 44 r15 [orig:148 extImage ] [148])) ../src/izp-gaussian.c:518 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 147 457 149 7 (parallel [
            (set (reg:DI 4 si [300])
                (ashift:DI (reg:DI 4 si [300])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 149 147 150 7 (parallel [
            (set (reg:DI 4 si [302])
                (lshiftrt:DI (reg:DI 4 si [300])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 533 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 150 149 151 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 4 si [302])
            (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115]))) ../src/izp-gaussian.c:518 6 {*cmpsi_1}
     (nil))

(insn:TI 151 150 153 7 (set (reg:SI 4 si [orig:238 prolog_loop_niters.630 ] [238])
        (if_then_else:SI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:SI 4 si [302])
            (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115]))) ../src/izp-gaussian.c:518 885 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn:TI 153 151 152 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:238 prolog_loop_niters.630 ] [238])
            (const_int 0 [0]))) ../src/izp-gaussian.c:518 2 {*cmpsi_ccno_1}
     (nil))

(insn 152 153 154 7 (set (reg:DI 38 r9 [orig:239 prolog_loop_niters.631 ] [239])
        (zero_extend:DI (reg:SI 4 si [orig:238 prolog_loop_niters.630 ] [238]))) ../src/izp-gaussian.c:518 114 {*zero_extendsidi2_rex64}
     (nil))

(jump_insn:TI 154 152 155 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 367)
            (pc))) ../src/izp-gaussian.c:518 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 367)
;; End of basic block 7 -> ( 8 33)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  8 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  33 (can_fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru,can_fallthru)
(note 155 154 159 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 159 155 156 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])
            (reg:SI 4 si [orig:238 prolog_loop_niters.630 ] [238]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (nil))

(insn 156 159 158 8 (set (mem/f:DI (reg/v/f:DI 44 r15 [orig:148 extImage ] [148]) [2 MEM[base: D.8297_44, offset: 0B]+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:152 heap ] [152])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(debug_insn 158 156 160 8 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))

(jump_insn:TI 160 158 363 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 235)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 235)
;; End of basic block 8 -> ( 9 17)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  9 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  17 (can_fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru,can_fallthru)
(note 363 160 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 61 363 161 9 (set (reg/v:SI 2 cx [orig:250 i ] [250])
        (const_int 1 [0x1])) ../src/izp-gaussian.c:587 64 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  10 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 9 33) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  9 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  33 [100.0%]  (can_fallthru)
(code_label 161 61 162 10 19 "" [1 uses])

(note 162 161 458 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 458 162 163 10 (set (reg:SI 37 r8 [orig:247 niters.634 ] [247])
        (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 163 458 459 10 (parallel [
            (set (reg:SI 37 r8 [orig:247 niters.634 ] [247])
                (minus:SI (reg:SI 37 r8 [orig:247 niters.634 ] [247])
                    (reg:SI 4 si [orig:238 prolog_loop_niters.630 ] [238])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 291 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:238 prolog_loop_niters.630 ] [238])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 459 163 164 10 (set (reg:SI 4 si [orig:248 bnd.635 ] [248])
        (reg:SI 37 r8 [orig:247 niters.634 ] [247])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 164 459 493 10 (parallel [
            (set (reg:SI 4 si [orig:248 bnd.635 ] [248])
                (lshiftrt:SI (reg:SI 4 si [orig:248 bnd.635 ] [248])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 531 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 493 164 166 10 (set (reg:SI 5 di [orig:249 ratio_mult_vf.636 ] [249])
        (subreg:SI (mult:DI (reg:DI 4 si [orig:248 bnd.635 ] [248])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn:TI 166 493 167 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 5 di [orig:249 ratio_mult_vf.636 ] [249])
            (const_int 0 [0]))) ../src/izp-gaussian.c:588 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 167 166 168 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 210)
;; End of basic block 10 -> ( 11 15)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  11 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  15 (can_fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 38 [r9] 44 [r15]
;; lr  def 	 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8]
;; live  kill	 17 [flags]

;; Pred edge  10 [100.0%]  (fallthru,can_fallthru)
(note 168 167 181 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 181 168 491 11 NOTE_INSN_DELETED)

(insn:TI 491 181 189 11 (set (reg:SI 40 r11)
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:250 i ] [250])
                (const_int 2 [0x2])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 189 491 460 11 (set (reg:V4SI 28 xmm7 [375])
        (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])
        (nil)))

(insn:TI 460 189 492 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [4 %sfp+-4 S4 A32])
        (reg:SI 40 r11)) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 40 r11)
        (nil)))

(insn 492 460 461 11 (set (reg:SI 40 r11 [306])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:250 i ] [250])
                (const_int 3 [0x3])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn:TI 461 492 490 11 (set (reg:SI 22 xmm1)
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [4 %sfp+-4 S4 A32])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn 490 461 462 11 (set (reg:SI 39 r10 [304])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:250 i ] [250])
                (const_int 1 [0x1])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 462 490 182 11 (set (reg:SI 21 xmm0)
        (reg:SI 40 r11 [306])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 40 r11 [306])
        (nil)))

(insn:TI 182 462 464 11 (set (reg:DI 38 r9 [orig:199 ivtmp.697 ] [199])
        (plus:DI (mult:DI (reg:DI 38 r9 [orig:239 prolog_loop_niters.631 ] [239])
                (const_int 8 [0x8]))
            (reg/v/f:DI 44 r15 [orig:148 extImage ] [148]))) ../src/izp-gaussian.c:588 249 {*lea_1}
     (nil))

(insn 464 182 527 11 (set (reg:SI 23 xmm2)
        (reg:SI 39 r10 [304])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 39 r10 [304])
        (nil)))

(insn 527 464 172 11 (parallel [
            (set (reg:DI 39 r10 [orig:142 ivtmp.695 ] [142])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 172 527 463 11 (set (reg:V2SI 22 xmm1 [307])
        (vec_concat:V2SI (reg:SI 22 xmm1)
            (reg:SI 21 xmm0))) ../src/izp-gaussian.c:588 1791 {*vec_concatv2si_sse2}
     (expr_list:REG_DEAD (reg:SI 21 xmm0)
        (nil)))

(insn 463 172 173 11 (set (reg:SI 21 xmm0)
        (reg/v:SI 2 cx [orig:250 i ] [250])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 173 463 176 11 (set (reg:V2SI 21 xmm0 [308])
        (vec_concat:V2SI (reg:SI 21 xmm0)
            (reg:SI 23 xmm2))) ../src/izp-gaussian.c:588 1791 {*vec_concatv2si_sse2}
     (expr_list:REG_DEAD (reg:SI 23 xmm2)
        (nil)))

(insn 176 173 174 11 (set (reg:V4SI 23 xmm2 [362])
        (mem/u/c/i:V4SI (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5 S16 A128])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
            ])
        (nil)))

(insn 174 176 465 11 (set (reg:V4SI 21 xmm0 [orig:260 vect_vec_iv_.641 ] [260])
        (vec_concat:V4SI (reg:V2SI 21 xmm0 [308])
            (reg:V2SI 22 xmm1 [307]))) ../src/izp-gaussian.c:588 1794 {*vec_concatv4si_1}
     (expr_list:REG_DEAD (reg:V2SI 22 xmm1 [307])
        (nil)))

(insn:TI 465 174 177 11 (set (reg:SI 22 xmm1)
        (reg:SI 1 dx [orig:116 prephitmp.568 ] [116])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 177 465 466 11 (set (reg:V4SI 25 xmm4 [orig:263 vect_cst_.643 ] [263])
        (vec_duplicate:V4SI (reg:SI 22 xmm1))) ../src/izp-gaussian.c:588 1785 {*vec_dupv4si}
     (expr_list:REG_DEAD (reg:SI 22 xmm1)
        (nil)))

(insn 466 177 393 11 (set (reg:DI 22 xmm1)
        (reg/v/f:DI 0 ax [orig:152 heap ] [152])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(insn 393 466 179 11 (set (reg:V4SI 45 xmm8 [orig:261 vect_cst_.640 ] [261])
        (reg:V4SI 23 xmm2 [362])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
            ])
        (nil)))

(insn:TI 179 393 467 11 (set (reg:V2DI 22 xmm1)
        (vec_duplicate:V2DI (reg:DI 22 xmm1))) ../src/izp-gaussian.c:588 1787 {*vec_dupv2di_sse3}
     (nil))

(insn 467 179 537 11 (set (reg:V2DI 24 xmm3 [orig:268 vect_cst_.648 ] [268])
        (reg:V2DI 22 xmm1)) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1)
        (nil)))

(jump_insn 537 467 538 11 (set (pc)
        (label_ref 203)) 606 {jump}
     (nil)
 -> 203)
;; End of basic block 11 -> ( 13)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]


;; Succ edge  13 [100.0%]  (can_fallthru)

(barrier 538 537 371)

;; Start of basic block ( 13) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; lr  use 	 6 [bp] 7 [sp] 27 [xmm6]
;; lr  def 	 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; live  gen 	 21 [xmm0]
;; live  kill	

;; Pred edge  13 [91.0%]  (can_fallthru)
(code_label 371 538 370 12 36 "" [1 uses])

(note 370 371 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 63 370 203 12 (set (reg:V4SI 21 xmm0 [orig:260 vect_vec_iv_.641 ] [260])
        (reg:V4SI 27 xmm6 [orig:262 vect_vec_iv_.641 ] [262])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 27 xmm6 [orig:262 vect_vec_iv_.641 ] [262])
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]


;; Succ edge  13 [100.0%]  (fallthru,dfs_back,can_fallthru)

;; Start of basic block ( 12 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 38 [r9] 39 [r10] 45 [xmm8]
;; lr  def 	 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6] 38 [r9] 39 [r10]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; live  gen 	 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6] 38 [r9] 39 [r10]
;; live  kill	 17 [flags]

;; Pred edge  12 [100.0%]  (fallthru,dfs_back,can_fallthru)
;; Pred edge  11 [100.0%]  (can_fallthru)
(code_label 203 63 183 13 22 "" [1 uses])

(note 183 203 471 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:TI 471 183 468 13 (set (reg:V1TI 26 xmm5)
        (reg:V1TI 25 xmm4)) ../src/izp-gaussian.c:588 1125 {*movv1ti_internal}
     (nil))

(insn 468 471 469 13 (set (reg:V4SI 27 xmm6 [orig:262 vect_vec_iv_.641 ] [262])
        (reg:V4SI 21 xmm0 [orig:260 vect_vec_iv_.641 ] [260])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn 469 468 433 13 (set (reg:V4SI 22 xmm1)
        (reg:V4SI 21 xmm0 [orig:260 vect_vec_iv_.641 ] [260])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 433 469 201 13 (set (reg:V1TI 26 xmm5)
        (lshiftrt:V1TI (reg:V1TI 26 xmm5)
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn 201 433 184 13 (parallel [
            (set (reg:SI 39 r10 [orig:142 ivtmp.695 ] [142])
                (plus:SI (reg:SI 39 r10 [orig:142 ivtmp.695 ] [142])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 184 201 432 13 (set (reg:V4SI 27 xmm6 [orig:262 vect_vec_iv_.641 ] [262])
        (plus:V4SI (reg:V4SI 27 xmm6 [orig:262 vect_vec_iv_.641 ] [262])
            (reg:V4SI 45 xmm8 [orig:261 vect_cst_.640 ] [261]))) ../src/izp-gaussian.c:588 1570 {*addv4si3}
     (expr_list:REG_EQUAL (plus:V4SI (reg:V4SI 21 xmm0 [orig:260 vect_vec_iv_.641 ] [260])
            (const_vector:V4SI [
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                ]))
        (nil)))

(insn:TI 432 184 434 13 (set (reg:V1TI 21 xmm0 [377])
        (lshiftrt:V1TI (reg:V1TI 21 xmm0 [orig:260 vect_vec_iv_.641 ] [260])
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 434 432 475 13 (set (reg:V2DI 21 xmm0 [379])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [377])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 26 xmm5 [378])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (expr_list:REG_DEAD (reg:V4SI 26 xmm5 [378])
        (nil)))

(insn 475 434 431 13 (set (reg:V1TI 26 xmm5)
        (reg:V1TI 23 xmm2)) ../src/izp-gaussian.c:588 1125 {*movv1ti_internal}
     (nil))

(insn:TI 431 475 440 13 (set (reg:V2DI 22 xmm1)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 25 xmm4 [orig:263 vect_cst_.643 ] [263])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (nil))

(insn:TI 440 431 436 13 (set (reg:V1TI 26 xmm5)
        (lshiftrt:V1TI (reg:V1TI 26 xmm5)
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 436 440 435 13 (set (reg:V4SI 21 xmm0 [381])
        (vec_select:V4SI (reg:V4SI 21 xmm0 [379])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn:TI 435 436 437 13 (set (reg:V4SI 22 xmm1 [380])
        (vec_select:V4SI (reg:V4SI 22 xmm1 [376])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn 437 435 473 13 (set (reg:V4SI 22 xmm1 [312])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 22 xmm1 [380])
                (reg:V4SI 21 xmm0 [381]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 21 xmm0 [381])
        (nil)))

(insn 473 437 439 13 (set (reg:V4SI 21 xmm0)
        (reg:V4SI 22 xmm1 [312])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 439 473 441 13 (set (reg:V1TI 22 xmm1 [383])
        (lshiftrt:V1TI (reg:V1TI 22 xmm1 [312])
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 441 439 438 13 (set (reg:V2DI 22 xmm1 [385])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [383])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 26 xmm5 [384])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (expr_list:REG_DEAD (reg:V4SI 26 xmm5 [384])
        (nil)))

(insn:TI 438 441 443 13 (set (reg:V2DI 21 xmm0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 23 xmm2 [362])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (nil))

(insn:TI 443 438 442 13 (set (reg:V4SI 22 xmm1 [387])
        (vec_select:V4SI (reg:V4SI 22 xmm1 [385])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn:TI 442 443 444 13 (set (reg:V4SI 21 xmm0 [386])
        (vec_select:V4SI (reg:V4SI 21 xmm0 [382])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn 444 442 477 13 (set (reg:V4SI 21 xmm0 [orig:265 vect_var_.644 ] [265])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 21 xmm0 [386])
                (reg:V4SI 22 xmm1 [387]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [387])
        (nil)))

(insn 477 444 190 13 (set (reg:V4SI 22 xmm1 [317])
        (reg:V4SI 28 xmm7 [375])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 190 477 478 13 (set (reg:V4SI 22 xmm1 [317])
        (gt:V4SI (reg:V4SI 22 xmm1 [317])
            (reg:V4SI 21 xmm0 [orig:265 vect_var_.644 ] [265]))) ../src/izp-gaussian.c:588 1665 {sse2_gtv4si3}
     (expr_list:REG_EQUAL (gt:V4SI (const_vector:V4SI [
                    (const_int 0 [0])
                    (const_int 0 [0])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ])
            (reg:V4SI 21 xmm0 [orig:265 vect_var_.644 ] [265]))
        (nil)))

(insn 478 190 191 13 (set (reg:V4SI 26 xmm5)
        (reg:V4SI 21 xmm0 [orig:265 vect_var_.644 ] [265])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 191 478 196 13 (set (reg:V4SI 26 xmm5)
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 26 xmm5)
                (reg:V4SI 22 xmm1 [317]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (nil))

(insn 196 191 192 13 (set (reg:V4SI 21 xmm0 [319])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 21 xmm0 [orig:265 vect_var_.644 ] [265])
                (reg:V4SI 22 xmm1 [317]))
            (parallel [
                    (const_int 2 [0x2])
                    (const_int 6 [0x6])
                    (const_int 3 [0x3])
                    (const_int 7 [0x7])
                ]))) ../src/izp-gaussian.c:588 1750 {vec_interleave_highv4si}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [317])
        (nil)))

(insn 192 196 197 13 (set (reg:V2DI 26 xmm5 [318])
        (plus:V2DI (reg:V2DI 26 xmm5 [314])
            (reg:V2DI 24 xmm3 [orig:268 vect_cst_.648 ] [268]))) ../src/izp-gaussian.c:588 1572 {*addv2di3}
     (expr_list:REG_EQUIV (mem:V2DI (reg:DI 38 r9 [orig:199 ivtmp.697 ] [199]) [2 MEM[base: D.8338_155, offset: 0B]+0 S16 A128])
        (nil)))

(insn:TI 197 192 193 13 (set (reg:V2DI 21 xmm0 [323])
        (plus:V2DI (reg:V2DI 21 xmm0 [319])
            (reg:V2DI 24 xmm3 [orig:268 vect_cst_.648 ] [268]))) ../src/izp-gaussian.c:588 1572 {*addv2di3}
     (expr_list:REG_EQUIV (mem:V2DI (plus:DI (reg:DI 38 r9 [orig:199 ivtmp.697 ] [199])
                (const_int 16 [0x10])) [2 MEM[base: D.8338_155, offset: 16B]+0 S16 A128])
        (nil)))

(insn 193 197 198 13 (set (mem:V2DI (reg:DI 38 r9 [orig:199 ivtmp.697 ] [199]) [2 MEM[base: D.8338_155, offset: 0B]+0 S16 A128])
        (reg:V2DI 26 xmm5 [318])) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 26 xmm5 [318])
        (nil)))

(insn:TI 198 193 200 13 (set (mem:V2DI (plus:DI (reg:DI 38 r9 [orig:199 ivtmp.697 ] [199])
                (const_int 16 [0x10])) [2 MEM[base: D.8338_155, offset: 16B]+0 S16 A128])
        (reg:V2DI 21 xmm0 [323])) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 21 xmm0 [323])
        (nil)))

(debug_insn 200 198 202 13 (var_location:SI i (debug_expr:SI D#4)) -1
     (nil))

(insn 202 200 204 13 (parallel [
            (set (reg:DI 38 r9 [orig:199 ivtmp.697 ] [199])
                (plus:DI (reg:DI 38 r9 [orig:199 ivtmp.697 ] [199])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 204 202 205 13 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 39 r10 [orig:142 ivtmp.695 ] [142])
            (reg:SI 4 si [orig:248 bnd.635 ] [248]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 205 204 206 13 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 371)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 371)
;; End of basic block 13 -> ( 12 14)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]


;; Succ edge  12 [91.0%]  (can_fallthru)
;; Succ edge  14 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 5 [di] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  13 [9.0%]  (fallthru,can_fallthru,loop_exit)
(note 206 205 207 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 207 206 208 14 (parallel [
            (set (reg/v:SI 2 cx [orig:250 i ] [250])
                (plus:SI (reg/v:SI 2 cx [orig:250 i ] [250])
                    (reg:SI 5 di [orig:249 ratio_mult_vf.636 ] [249])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 208 207 209 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 37 r8 [orig:247 niters.634 ] [247])
            (reg:SI 5 di [orig:249 ratio_mult_vf.636 ] [249]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:247 niters.634 ] [247])
        (expr_list:REG_DEAD (reg:SI 5 di [orig:249 ratio_mult_vf.636 ] [249])
            (nil))))

(jump_insn:TI 209 208 210 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 235)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 235)
;; End of basic block 14 -> ( 15 17)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  15 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  17 (can_fallthru)

;; Start of basic block ( 14 10) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  14 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  10 (can_fallthru)
(code_label 210 209 211 15 21 "" [1 uses])

(note 211 210 219 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 219 211 488 15 NOTE_INSN_DELETED)

(insn:TI 488 219 214 15 (set (reg:SI 5 di [324])
        (subreg:SI (mult:DI (reg:DI 1 dx [orig:116 prephitmp.568 ] [116])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:518 250 {*lea_2}
     (nil))

(insn 214 488 213 15 (parallel [
            (set (reg:SI 1 dx [325])
                (mult:SI (reg:SI 1 dx [orig:116 prephitmp.568 ] [116])
                    (reg/v:SI 2 cx [orig:250 i ] [250])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 333 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 213 214 489 15 (set (reg:DI 5 di [orig:171 D.8279 ] [171])
        (sign_extend:DI (reg:SI 5 di [324]))) ../src/izp-gaussian.c:518 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 489 213 218 15 (set (reg:SI 4 si [326])
        (subreg:SI (mult:DI (reg:DI 1 dx [325])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:518 250 {*lea_2}
     (expr_list:REG_DEAD (reg:DI 1 dx [325])
        (nil)))

(insn 218 489 220 15 (set (reg:DI 1 dx [orig:328 i ] [328])
        (sign_extend:DI (reg/v:SI 2 cx [orig:250 i ] [250]))) ../src/izp-gaussian.c:518 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 220 218 216 15 (set (reg:DI 1 dx [orig:125 ivtmp.662 ] [125])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:328 i ] [328])
                (const_int 8 [0x8]))
            (reg/v/f:DI 44 r15 [orig:148 extImage ] [148]))) ../src/izp-gaussian.c:518 249 {*lea_1}
     (nil))

(insn 216 220 217 15 (set (reg:DI 4 si [327])
        (sign_extend:DI (reg:SI 4 si [326]))) ../src/izp-gaussian.c:518 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 217 216 228 15 (parallel [
            (set (reg:DI 4 si [orig:226 ivtmp.660 ] [226])
                (plus:DI (reg/v/f:DI 0 ax [orig:152 heap ] [152])
                    (reg:DI 4 si [327])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 15 -> ( 16)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  16 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 16 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  16 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  15 [100.0%]  (fallthru,can_fallthru)
(code_label 228 217 221 16 24 "" [1 uses])

(note 221 228 223 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:TI 223 221 225 16 (parallel [
            (set (reg/v:SI 2 cx [orig:250 i ] [250])
                (plus:SI (reg/v:SI 2 cx [orig:250 i ] [250])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(debug_insn 225 223 222 16 (var_location:SI i (reg/v:SI 2 cx [orig:250 i ] [250])) -1
     (nil))

(insn 222 225 226 16 (set (mem/f:DI (reg:DI 1 dx [orig:125 ivtmp.662 ] [125]) [2 MEM[base: D.8287_35, offset: 0B]+0 S8 A64])
        (reg:DI 4 si [orig:226 ivtmp.660 ] [226])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(insn 226 222 227 16 (parallel [
            (set (reg:DI 4 si [orig:226 ivtmp.660 ] [226])
                (plus:DI (reg:DI 4 si [orig:226 ivtmp.660 ] [226])
                    (reg:DI 5 di [orig:171 D.8279 ] [171])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 227 226 229 16 (parallel [
            (set (reg:DI 1 dx [orig:125 ivtmp.662 ] [125])
                (plus:DI (reg:DI 1 dx [orig:125 ivtmp.662 ] [125])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 229 227 230 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])
            (reg/v:SI 2 cx [orig:250 i ] [250]))) ../src/izp-gaussian.c:587 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 230 229 235 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 228)
            (pc))) ../src/izp-gaussian.c:587 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 228)
;; End of basic block 16 -> ( 16 17)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  16 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  17 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 16 6 8 14) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 43 [r14]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 43 [r14]
;; live  kill	

;; Pred edge  16 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  6 [9.0%]  (can_fallthru)
;; Pred edge  8 (can_fallthru)
;; Pred edge  14 (can_fallthru)
(code_label 235 230 236 17 18 "" [3 uses])

(note 236 235 237 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:TI 237 236 238 17 (set (reg:DI 43 r14 [orig:330 prephitmp.568 ] [330])
        (sign_extend:DI (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115]))) ../src/izp-gaussian.c:590 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 238 237 250 17 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:330 prephitmp.568 ] [330])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 44 r15 [orig:148 extImage ] [148])) [2 *D.8102_91+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:152 heap ] [152])) ../src/izp-gaussian.c:590 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:330 prephitmp.568 ] [330])
        (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:152 heap ] [152])
            (nil))))
;; End of basic block 17 -> ( 18)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  18 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 17 32) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags] 37 [r8]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  17 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  32 [100.0%]  (can_fallthru)
(code_label 250 238 251 18 25 "" [1 uses])

(note 251 250 252 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(debug_insn 252 251 254 18 (var_location:DI extImage (clobber (const_int 0 [0]))) ../src/izp-gaussian.c:535 -1
     (nil))

(debug_insn 254 252 524 18 (var_location:SI i (const_int 0 [0])) -1
     (nil))

(insn:TI 524 254 255 18 (parallel [
            (set (reg:DI 37 r8 [orig:230 ivtmp.689 ] [230])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:539 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 255 524 256 18 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 41 r12 [orig:277 rows ] [277])
            (const_int 0 [0]))) ../src/izp-gaussian.c:539 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 256 255 318 18 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 352)
            (pc))) ../src/izp-gaussian.c:539 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 352)
;; End of basic block 18 -> ( 19 29)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  19 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  29 [9.0%]  (can_fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags] 23 [xmm2] 24 [xmm3] 38 [r9]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 5 [di] 23 [xmm2] 24 [xmm3] 38 [r9]
;; live  kill	 17 [flags]

;; Pred edge  18 [91.0%]  (fallthru,can_fallthru)
(code_label 318 256 319 19 26 "" [0 uses])

(note 319 318 481 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:TI 481 319 392 19 (set (reg:SI 5 di [orig:369 bnd.612 ] [369])
        (reg/v:SI 3 bx [orig:276 cols ] [276])) ../src/izp-gaussian.c:518 64 {*movsi_internal}
     (nil))

(insn 392 481 263 19 (set (reg:V4SF 24 xmm3 [371])
        (mem/u/c/i:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [3 S16 A128])) 1126 {*movv4sf_internal}
     (expr_list:REG_EQUIV (const_vector:V4SF [
                (const_double:SF 4.294967296e+9 [0x0.8p+33])
                (const_double:SF 4.294967296e+9 [0x0.8p+33])
                (const_double:SF 4.294967296e+9 [0x0.8p+33])
                (const_double:SF 4.294967296e+9 [0x0.8p+33])
            ])
        (nil)))

(insn 263 392 328 19 (set (reg:V4SF 23 xmm2 [372])
        (const_vector:V4SF [
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])) ../src/izp-gaussian.c:542 1126 {*movv4sf_internal}
     (expr_list:REG_EQUIV (const_vector:V4SF [
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn:TI 328 263 486 19 (parallel [
            (set (reg:SI 5 di [orig:369 bnd.612 ] [369])
                (lshiftrt:SI (reg:SI 5 di [orig:369 bnd.612 ] [369])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 531 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 486 328 425 19 (set (reg:SI 38 r9 [orig:370 ratio_mult_vf.613 ] [370])
        (subreg:SI (mult:DI (reg:DI 5 di [orig:369 bnd.612 ] [369])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:518 250 {*lea_2}
     (nil))
;; End of basic block 19 -> ( 20)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  20 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 19 28) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  28 [91.0%]  (dfs_back,can_fallthru)
(code_label 425 486 394 20 42 "" [1 uses])

(note 394 425 320 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(debug_insn 320 394 322 20 (var_location:SI j (const_int 0 [0])) -1
     (nil))

(insn:TI 322 320 323 20 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 3 bx [orig:276 cols ] [276])
            (const_int 0 [0]))) ../src/izp-gaussian.c:540 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 323 322 324 20 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 321)
            (pc))) ../src/izp-gaussian.c:540 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 321)
;; End of basic block 20 -> ( 21 28)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  21 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  28 [9.0%]  (can_fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13] 44 [r15]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	

;; Pred edge  20 [91.0%]  (fallthru,can_fallthru)
(note 324 323 331 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 331 324 332 21 NOTE_INSN_DELETED)

(note 332 331 333 21 NOTE_INSN_DELETED)

(insn:TI 333 332 325 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 38 r9 [orig:370 ratio_mult_vf.613 ] [370])
            (const_int 0 [0]))) ../src/izp-gaussian.c:518 2 {*cmpsi_ccno_1}
     (nil))

(insn 325 333 326 21 (set (reg/f:DI 2 cx [orig:200 pretmp.584 ] [200])
        (mem/f:DI (plus:DI (plus:DI (mult:DI (reg:DI 37 r8 [orig:230 ivtmp.689 ] [230])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 44 r15 [orig:148 extImage ] [148]))
                (const_int 64 [0x40])) [2 MEM[base: extImage_93, index: ivtmp.689_201, step: 8, offset: 64B]+0 S8 A64])) ../src/izp-gaussian.c:540 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 326 325 334 21 (set (reg/f:DI 4 si [orig:202 pretmp.589 ] [202])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 37 r8 [orig:230 ivtmp.689 ] [230])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 42 r13 [orig:275 image ] [275])) [2 MEM[base: image_39(D), index: ivtmp.689_201, step: 8, offset: 0B]+0 S8 A64])) ../src/izp-gaussian.c:540 62 {*movdi_internal_rex64}
     (nil))

(jump_insn 334 326 386 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 381)
            (pc))) ../src/izp-gaussian.c:518 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 381)
;; End of basic block 21 -> ( 34 22)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  34 (can_fallthru)
;; Succ edge  22 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 39 [r10]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 39 [r10]
;; live  kill	 17 [flags]

;; Pred edge  21 [100.0%]  (fallthru,can_fallthru)
(note 386 334 345 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 345 386 346 22 NOTE_INSN_DELETED)

(note 346 345 482 22 NOTE_INSN_DELETED)

(insn:TI 482 346 335 22 (set (reg/f:DI 39 r10 [351])
        (plus:DI (reg/f:DI 4 si [orig:202 pretmp.589 ] [202])
            (const_int 16 [0x10]))) ../src/izp-gaussian.c:518 249 {*lea_1}
     (nil))

(insn 335 482 483 22 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 3 bx [orig:276 cols ] [276])
            (const_int 6 [0x6]))) ../src/izp-gaussian.c:518 6 {*cmpsi_1}
     (nil))

(insn:TI 483 335 336 22 (set (reg/f:DI 0 ax [352])
        (plus:DI (reg/f:DI 2 cx [orig:200 pretmp.584 ] [200])
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:518 249 {*lea_1}
     (nil))

(insn 336 483 339 22 (set (reg:QI 1 dx [350])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ../src/izp-gaussian.c:518 585 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn:TI 339 336 484 22 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 39 r10 [351])
            (reg/f:DI 0 ax [352]))) ../src/izp-gaussian.c:518 7 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [351])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [352])
            (nil))))

(insn:TI 484 339 340 22 (set (reg/f:DI 39 r10 [355])
        (plus:DI (reg/f:DI 2 cx [orig:200 pretmp.584 ] [200])
            (const_int 48 [0x30]))) ../src/izp-gaussian.c:518 249 {*lea_1}
     (nil))

(insn 340 484 342 22 (set (reg:QI 0 ax [358])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ../src/izp-gaussian.c:518 585 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn:TI 342 340 343 22 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 4 si [orig:202 pretmp.589 ] [202])
            (reg/f:DI 39 r10 [355]))) ../src/izp-gaussian.c:518 7 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [355])
        (nil)))

(insn:TI 343 342 485 22 (set (reg:QI 39 r10 [357])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ../src/izp-gaussian.c:518 585 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn:TI 485 343 347 22 (parallel [
            (set (reg:SI 0 ax [358])
                (ior:SI (reg:SI 0 ax [358])
                    (reg:SI 39 r10 [357])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 399 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 39 r10 [357])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 347 485 348 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 1 dx [350])
                (reg:QI 0 ax [358]))
            (const_int 0 [0]))) ../src/izp-gaussian.c:518 369 {*testqi_1_maybe_si}
     (expr_list:REG_DEAD (reg:QI 1 dx [350])
        (expr_list:REG_DEAD (reg:QI 0 ax [358])
            (nil))))

(jump_insn:TI 348 347 351 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 381)
            (pc))) ../src/izp-gaussian.c:518 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 381)
;; End of basic block 22 -> ( 23 34)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  23 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  34 (can_fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]

;; Pred edge  22 [100.0%]  (fallthru,can_fallthru)
(note 351 348 520 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:TI 520 351 521 23 (parallel [
            (set (reg:DI 0 ax [orig:203 ivtmp.682 ] [203])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 521 520 276 23 (parallel [
            (set (reg:DI 1 dx [orig:210 ivtmp.679 ] [210])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 23 -> ( 24)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  24 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 24 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 23 [xmm2] 24 [xmm3]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  kill	 17 [flags]

;; Pred edge  24 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  23 [100.0%]  (fallthru,can_fallthru)
(code_label 276 521 260 24 28 "" [1 uses])

(note 260 276 261 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:TI 261 260 274 24 (set (reg:V16QI 22 xmm1 [332])
        (unspec:V16QI [
                (mem:V16QI (plus:DI (reg/f:DI 4 si [orig:202 pretmp.589 ] [202])
                        (reg:DI 0 ax [orig:203 ivtmp.682 ] [203])) [5 MEM[base: pretmp.589_156, index: ivtmp.682_158, offset: 0B]+0 S16 A32])
            ] UNSPEC_MOVU)) ../src/izp-gaussian.c:542 1138 {*sse2_movdqu}
     (nil))

(insn 274 261 265 24 (parallel [
            (set (reg:SI 1 dx [orig:210 ivtmp.679 ] [210])
                (plus:SI (reg:SI 1 dx [orig:210 ivtmp.679 ] [210])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:541 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 265 274 480 24 (set (reg:V4SF 22 xmm1 [336])
        (float:V4SF (reg:V4SI 22 xmm1 [332]))) ../src/izp-gaussian.c:542 1427 {sse2_cvtdq2ps}
     (nil))

(insn 480 265 266 24 (set (reg:V4SF 21 xmm0 [331])
        (reg:V4SF 22 xmm1 [336])) ../src/izp-gaussian.c:542 1126 {*movv4sf_internal}
     (nil))

(insn:TI 266 480 267 24 (set (reg:V4SF 21 xmm0 [331])
        (lt:V4SF (reg:V4SF 21 xmm0 [331])
            (reg:V4SF 23 xmm2 [372]))) ../src/izp-gaussian.c:542 1290 {sse_maskcmpv4sf3}
     (expr_list:REG_EQUAL (lt:V4SF (reg:V4SF 22 xmm1 [336])
            (const_vector:V4SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ]))
        (nil)))

(insn:TI 267 266 268 24 (set (reg:V4SF 21 xmm0 [331])
        (and:V4SF (reg:V4SF 21 xmm0 [331])
            (reg:V4SF 24 xmm3 [371]))) ../src/izp-gaussian.c:542 1318 {*andv4sf3}
     (expr_list:REG_EQUAL (and:V4SF (reg:V4SF 337)
            (const_vector:V4SF [
                    (const_double:SF 4.294967296e+9 [0x0.8p+33])
                    (const_double:SF 4.294967296e+9 [0x0.8p+33])
                    (const_double:SF 4.294967296e+9 [0x0.8p+33])
                    (const_double:SF 4.294967296e+9 [0x0.8p+33])
                ]))
        (nil)))

(insn 268 267 270 24 (set (reg:V4SF 21 xmm0 [331])
        (plus:V4SF (reg:V4SF 21 xmm0 [331])
            (reg:V4SF 22 xmm1 [336]))) ../src/izp-gaussian.c:542 1166 {*addv4sf3}
     (expr_list:REG_DEAD (reg:V4SF 22 xmm1 [336])
        (nil)))

(insn:TI 270 268 271 24 (set (mem:V2SF (plus:DI (plus:DI (reg/f:DI 2 cx [orig:200 pretmp.584 ] [200])
                    (reg:DI 0 ax [orig:203 ivtmp.682 ] [203]))
                (const_int 32 [0x20])) [3 MEM[base: pretmp.584_150, index: ivtmp.682_158, offset: 32B]+0 S8 A32])
        (vec_select:V2SF (reg:V4SF 21 xmm0 [331])
            (parallel [
                    (const_int 0 [0])
                    (const_int 1 [0x1])
                ]))) ../src/izp-gaussian.c:541 1486 {sse_storelps}
     (nil))

(insn:TI 271 270 273 24 (set (mem:V2SF (plus:DI (plus:DI (reg/f:DI 2 cx [orig:200 pretmp.584 ] [200])
                    (reg:DI 0 ax [orig:203 ivtmp.682 ] [203]))
                (const_int 40 [0x28])) [3 MEM[base: pretmp.584_150, index: ivtmp.682_158, offset: 32B]+8 S8 A32])
        (vec_select:V2SF (reg:V4SF 21 xmm0 [331])
            (parallel [
                    (const_int 2 [0x2])
                    (const_int 3 [0x3])
                ]))) ../src/izp-gaussian.c:541 1482 {sse_storehps}
     (expr_list:REG_DEAD (reg:V4SF 21 xmm0 [331])
        (nil)))

(debug_insn 273 271 275 24 (var_location:SI j (debug_expr:SI D#5)) -1
     (nil))

(insn 275 273 277 24 (parallel [
            (set (reg:DI 0 ax [orig:203 ivtmp.682 ] [203])
                (plus:DI (reg:DI 0 ax [orig:203 ivtmp.682 ] [203])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:541 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 277 275 278 24 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 5 di [orig:369 bnd.612 ] [369])
            (reg:SI 1 dx [orig:210 ivtmp.679 ] [210]))) ../src/izp-gaussian.c:541 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 278 277 279 24 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 276)
            (pc))) ../src/izp-gaussian.c:541 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 276)
;; End of basic block 24 -> ( 24 25)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  24 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  25 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 38 [r9]
;; lr  def 	 17 [flags] 39 [r10]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags] 39 [r10]
;; live  kill	

;; Pred edge  24 [9.0%]  (fallthru,can_fallthru,loop_exit)
(note 279 278 281 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:TI 281 279 411 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 3 bx [orig:276 cols ] [276])
            (reg:SI 38 r9 [orig:370 ratio_mult_vf.613 ] [370]))) ../src/izp-gaussian.c:541 6 {*cmpsi_1}
     (nil))

(insn 411 281 282 25 (set (reg/v:SI 39 r10 [orig:224 j ] [224])
        (reg:SI 38 r9 [orig:370 ratio_mult_vf.613 ] [370])) ../src/izp-gaussian.c:541 64 {*movsi_internal}
     (nil))

(jump_insn:TI 282 411 330 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 321)
            (pc))) ../src/izp-gaussian.c:541 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 321)
;; End of basic block 25 -> ( 26 28)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  26 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  28 (can_fallthru)

;; Start of basic block ( 25 34) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 39 [r10]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si]
;; live  kill	 17 [flags]

;; Pred edge  25 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  34 [100.0%]  (can_fallthru)
(code_label 330 282 283 26 34 "" [1 uses])

(note 283 330 391 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:TI 391 283 522 26 (set (reg:DI 1 dx [orig:364 j ] [364])
        (sign_extend:DI (reg/v:SI 39 r10 [orig:224 j ] [224]))) 126 {*extendsidi2_rex64}
     (nil))

(insn 522 391 286 26 (parallel [
            (set (reg:DI 0 ax [orig:240 ivtmp.672 ] [240])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 286 522 287 26 (parallel [
            (set (reg:DI 1 dx [orig:365 D.8307 ] [365])
                (ashift:DI (reg:DI 1 dx [orig:364 j ] [364])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 287 286 288 26 (parallel [
            (set (reg:DI 2 cx [366])
                (plus:DI (reg/f:DI 2 cx [orig:200 pretmp.584 ] [200])
                    (reg:DI 1 dx [orig:365 D.8307 ] [365])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 288 287 307 26 (parallel [
            (set (reg:DI 4 si [367])
                (plus:DI (reg/f:DI 4 si [orig:202 pretmp.589 ] [202])
                    (reg:DI 1 dx [orig:365 D.8307 ] [365])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 253 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:365 D.8307 ] [365])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 26 -> ( 27)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  27 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 27 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]

;; Pred edge  27 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  26 [100.0%]  (fallthru,can_fallthru)
(code_label 307 288 284 27 32 "" [1 uses])

(note 284 307 289 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn:TI 289 284 292 27 (set (reg:DI 1 dx [orig:342 MEM[base: D.8308_218, index: ivtmp.672_220, step: 4, offset: 0B] ] [342])
        (zero_extend:DI (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [orig:240 ivtmp.672 ] [240])
                        (const_int 4 [0x4]))
                    (reg:DI 4 si [367])) [5 MEM[base: D.8308_218, index: ivtmp.672_220, step: 4, offset: 0B]+0 S4 A32]))) ../src/izp-gaussian.c:542 114 {*zero_extendsidi2_rex64}
     (nil))

(insn:TI 292 289 302 27 (set (reg:SF 21 xmm0 [343])
        (float:SF (reg:DI 1 dx [orig:342 MEM[base: D.8308_218, index: ivtmp.672_220, step: 4, offset: 0B] ] [342]))) ../src/izp-gaussian.c:542 219 {*floatdisf2_sse_interunit}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:342 MEM[base: D.8308_218, index: ivtmp.672_220, step: 4, offset: 0B] ] [342])
        (expr_list:REG_EQUIV (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:240 ivtmp.672 ] [240])
                            (const_int 4 [0x4]))
                        (reg:DI 2 cx [366]))
                    (const_int 32 [0x20])) [3 MEM[base: D.8311_219, index: ivtmp.672_220, step: 4, offset: 32B]+0 S4 A32])
            (nil))))

(insn:TI 302 292 304 27 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:240 ivtmp.672 ] [240])
                        (const_int 4 [0x4]))
                    (reg:DI 2 cx [366]))
                (const_int 32 [0x20])) [3 MEM[base: D.8311_219, index: ivtmp.672_220, step: 4, offset: 32B]+0 S4 A32])
        (reg:SF 21 xmm0 [343])) ../src/izp-gaussian.c:542 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [343])
        (nil)))

(debug_insn 304 302 305 27 (var_location:SI j (debug_expr:SI D#6)) -1
     (nil))

(insn 305 304 487 27 (parallel [
            (set (reg:DI 0 ax [orig:240 ivtmp.672 ] [240])
                (plus:DI (reg:DI 0 ax [orig:240 ivtmp.672 ] [240])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:541 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 487 305 308 27 (set (reg:SI 1 dx [orig:157 D.8314 ] [157])
        (subreg:SI (plus:DI (reg:DI 39 r10 [orig:224 j ] [224])
                (reg:DI 0 ax [orig:240 ivtmp.672 ] [240])) 0)) ../src/izp-gaussian.c:518 250 {*lea_2}
     (nil))

(insn:TI 308 487 309 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 3 bx [orig:276 cols ] [276])
            (reg:SI 1 dx [orig:157 D.8314 ] [157]))) ../src/izp-gaussian.c:540 6 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:157 D.8314 ] [157])
        (nil)))

(jump_insn:TI 309 308 321 27 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 307)
            (pc))) ../src/izp-gaussian.c:540 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 307)
;; End of basic block 27 -> ( 27 28)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  27 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  28 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 27 20 25) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  def 	 17 [flags] 37 [r8]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  27 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  20 [9.0%]  (can_fallthru)
;; Pred edge  25 (can_fallthru)
(code_label 321 309 312 28 33 "" [2 uses])

(note 312 321 314 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(debug_insn 314 312 315 28 (var_location:SI i (debug_expr:SI D#7)) -1
     (nil))

(insn:TI 315 314 316 28 (parallel [
            (set (reg:DI 37 r8 [orig:230 ivtmp.689 ] [230])
                (plus:DI (reg:DI 37 r8 [orig:230 ivtmp.689 ] [230])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:540 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 316 315 317 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 41 r12 [orig:277 rows ] [277])
            (reg:SI 37 r8 [orig:230 ivtmp.689 ] [230]))) ../src/izp-gaussian.c:539 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 317 316 352 28 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 425)
            (pc))) ../src/izp-gaussian.c:539 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 425)
;; End of basic block 28 -> ( 20 29)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  20 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  29 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 18 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  18 [9.0%]  (can_fallthru)
;; Pred edge  28 [9.0%]  (fallthru,can_fallthru,loop_exit)
(code_label 352 317 353 29 27 "" [1 uses])

(note 353 352 547 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 547 353 511 29 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 511 547 358 29 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) ../src/izp-gaussian.c:547 911 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 358 511 361 29 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 44 r15 [orig:148 extImage ] [148])) ../src/izp-gaussian.c:547 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 44 r15 [orig:148 extImage ] [148])
        (nil)))

(insn 361 358 512 29 (use (reg/i:DI 0 ax)) ../src/izp-gaussian.c:547 -1
     (nil))

(insn:TI 512 361 513 29 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:547 52 {*popdi1}
     (nil))

(insn:TI 513 512 514 29 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:547 52 {*popdi1}
     (nil))

(insn:TI 514 513 515 29 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:547 52 {*popdi1}
     (nil))

(insn:TI 515 514 516 29 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:547 52 {*popdi1}
     (nil))

(insn:TI 516 515 517 29 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:547 52 {*popdi1}
     (nil))

(insn/f:TI 517 516 518 29 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:547 52 {*popdi1}
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))

(jump_insn:TI 518 517 519 29 (return) ../src/izp-gaussian.c:547 634 {return_internal}
     (nil))
;; End of basic block 29 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  EXIT [100.0%] 

(barrier 519 518 535)

;; Start of basic block ( 2) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 37 [r8] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 37 [r8] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  2 [29.0%]  (can_fallthru)
(code_label 535 519 81 30 43 "" [1 uses])

(note 81 535 82 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(debug_insn 82 81 530 30 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2ae345ba6c80 *.LC1>)) ../src/izp-gaussian.c:525 -1
     (nil))

(insn:TI 530 82 83 30 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 83 530 84 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2ae345ba6c80 *.LC1>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (nil))

(insn 84 83 448 30 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 64 {*movsi_internal}
     (nil))

(insn:TI 448 84 86 30 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [6 S8 A64])
        (reg:DI 37 r8)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (nil)))

(call_insn:TI 86 448 87 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2ae34567a400 __printf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (nil)))))

(insn 87 86 449 30 (set (reg:SI 1 dx [orig:283 *newCols_5(D) ] [283])
        (mem:SI (reg/v/f:DI 44 r15 [orig:278 newCols ] [278]) [5 *newCols_5(D)+0 S4 A32])) ../src/izp-gaussian.c:526 64 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (reg/v/f:DI 44 r15 [orig:278 newCols ] [278]) [5 *newCols_5(D)+0 S4 A32])
        (nil)))

(insn:TI 449 87 88 30 (set (reg:DI 37 r8)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [6 S8 A64])) ../src/izp-gaussian.c:526 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 88 449 89 30 (parallel [
            (set (reg:SI 1 dx [orig:116 prephitmp.568 ] [116])
                (plus:SI (reg:SI 1 dx [orig:283 *newCols_5(D) ] [283])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:526 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:SI (mem:SI (reg/v/f:DI 44 r15 [orig:278 newCols ] [278]) [5 *newCols_5(D)+0 S4 A32])
                (const_int 4 [0x4]))
            (nil))))

(insn:TI 89 88 90 30 (parallel [
            (set (reg:SI 1 dx [orig:116 prephitmp.568 ] [116])
                (and:SI (reg:SI 1 dx [orig:116 prephitmp.568 ] [116])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:526 380 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 90 89 91 30 (set (mem:SI (reg/v/f:DI 44 r15 [orig:278 newCols ] [278]) [5 *newCols_5(D)+0 S4 A32])
        (reg:SI 1 dx [orig:116 prephitmp.568 ] [116])) ../src/izp-gaussian.c:526 64 {*movsi_internal}
     (nil))

(insn:TI 91 90 532 30 (set (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])
        (mem:SI (reg/v/f:DI 37 r8 [orig:279 newRows ] [279]) [5 *newRows_8(D)+0 S4 A32])) ../src/izp-gaussian.c:526 64 {*movsi_internal}
     (nil))

(insn:TI 532 91 533 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 43 r14 [orig:115 prephitmp.568 ] [115])
                (const_int 3 [0x3]))
            (const_int 0 [0]))) ../src/izp-gaussian.c:529 369 {*testqi_1_maybe_si}
     (nil))

(jump_insn:TI 533 532 536 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) ../src/izp-gaussian.c:529 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil)))
 -> 108)
;; End of basic block 30 -> ( 31 4)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  31 [29.0%]  (fallthru,can_fallthru)
;; Succ edge  4 [71.0%]  (can_fallthru)

;; Start of basic block ( 3 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 37 [r8] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 37 [r8] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  3 [29.0%]  (can_fallthru)
;; Pred edge  30 [29.0%]  (fallthru,can_fallthru)
(code_label 536 533 97 31 44 "" [1 uses])

(note 97 536 98 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(debug_insn 98 97 99 31 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2ae345ba6d20 *.LC2>)) ../src/izp-gaussian.c:530 -1
     (nil))

(insn:TI 99 98 100 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2ae345ba6d20 *.LC2>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (nil))

(insn 100 99 529 31 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 64 {*movsi_internal}
     (nil))

(insn 529 100 450 31 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 450 529 102 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [6 S8 A64])
        (reg:DI 37 r8)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (nil)))

(call_insn:TI 102 450 451 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2ae34567a400 __printf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (nil)))))

(insn 451 102 103 31 (set (reg:DI 37 r8)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [6 S8 A64])) ../src/izp-gaussian.c:531 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 103 451 104 31 (set (reg:SI 43 r14 [orig:286 *newRows_8(D) ] [286])
        (mem:SI (reg/v/f:DI 37 r8 [orig:279 newRows ] [279]) [5 *newRows_8(D)+0 S4 A32])) ../src/izp-gaussian.c:531 64 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (reg/v/f:DI 37 r8 [orig:279 newRows ] [279]) [5 *newRows_8(D)+0 S4 A32])
        (nil)))

(insn:TI 104 103 105 31 (parallel [
            (set (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])
                (plus:SI (reg:SI 43 r14 [orig:286 *newRows_8(D) ] [286])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:531 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:SI (mem:SI (reg/v/f:DI 37 r8 [orig:279 newRows ] [279]) [5 *newRows_8(D)+0 S4 A32])
                (const_int 4 [0x4]))
            (nil))))

(insn:TI 105 104 106 31 (parallel [
            (set (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])
                (and:SI (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:531 380 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 106 105 107 31 (set (mem:SI (reg/v/f:DI 37 r8 [orig:279 newRows ] [279]) [5 *newRows_8(D)+0 S4 A32])
        (reg:SI 43 r14 [orig:115 prephitmp.568 ] [115])) ../src/izp-gaussian.c:531 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 37 r8 [orig:279 newRows ] [279])
        (nil)))

(insn:TI 107 106 539 31 (set (reg:SI 1 dx [orig:116 prephitmp.568 ] [116])
        (mem:SI (reg/v/f:DI 44 r15 [orig:278 newCols ] [278]) [5 *newCols_5(D)+0 S4 A32])) ../src/izp-gaussian.c:531 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 44 r15 [orig:278 newCols ] [278])
        (nil)))

(jump_insn 539 107 540 31 (set (pc)
        (label_ref 108)) 606 {jump}
     (nil)
 -> 108)
;; End of basic block 31 -> ( 4)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  4 [100.0%]  (can_fallthru)

(barrier 540 539 241)

;; Start of basic block ( 5 4) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  5 [4.3%]  (can_fallthru)
;; Pred edge  4 [4.3%]  (can_fallthru)
(code_label 241 540 242 32 17 "" [2 uses])

(note 242 241 243 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(debug_insn 243 242 244 32 (var_location:DI __stream (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2ae34564c320 stderr>) [2 stderr+0 S8 A64])) ../src/izp-gaussian.c:593 -1
     (nil))

(debug_insn 244 243 247 32 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ae345ba6dc0 *.LC4>)) ../src/izp-gaussian.c:593 -1
     (nil))

(insn:TI 247 244 245 32 (set (reg:DI 5 di)
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2ae34564c320 stderr>) [2 stderr+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (nil))

(insn 245 247 525 32 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ae345ba6dc0 *.LC4>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (nil))

(insn 525 245 246 32 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 246 525 526 32 (set (reg:SI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 64 {*movsi_internal}
     (nil))

(insn 526 246 249 32 (parallel [
            (set (reg/v/f:DI 44 r15 [orig:148 extImage ] [148])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 249 526 541 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2ae34567a300 __fprintf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(jump_insn 541 249 542 32 (set (pc)
        (label_ref 250)) 606 {jump}
     (nil)
 -> 250)
;; End of basic block 32 -> ( 18)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  18 [100.0%]  (can_fallthru)

(barrier 542 541 367)

;; Start of basic block ( 7) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]

;; Pred edge  7 (can_fallthru)
(code_label 367 542 366 33 35 "" [1 uses])

(note 366 367 528 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:TI 528 366 543 33 (parallel [
            (set (reg:DI 2 cx [orig:250 i ] [250])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 543 528 544 33 (set (pc)
        (label_ref 161)) 606 {jump}
     (nil)
 -> 161)
;; End of basic block 33 -> ( 10)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  10 [100.0%]  (can_fallthru)

(barrier 544 543 381)

;; Start of basic block ( 22 21) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 39 [r10]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 39 [r10]
;; live  kill	 17 [flags]

;; Pred edge  22 (can_fallthru)
;; Pred edge  21 (can_fallthru)
(code_label 381 544 380 34 38 "" [2 uses])

(note 380 381 523 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:TI 523 380 545 34 (parallel [
            (set (reg:DI 39 r10 [orig:224 j ] [224])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:518 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 545 523 546 34 (set (pc)
        (label_ref 330)) 606 {jump}
     (nil)
 -> 330)
;; End of basic block 34 -> ( 26)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  26 [100.0%]  (can_fallthru)

(barrier 546 545 447)

(note 447 546 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function izp_transpose (izp_transpose)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 37 count 33 (  1.3)


izp_transpose

Dataflow summary:
def_info->table_size = 287, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 45[xmm8]
;;  ref usage 	r0={8d,14u,2e} r1={17d,19u,2e} r2={9d,11u} r3={3d,14u} r4={23d,22u} r5={12d,10u,1e} r6={3d,26u} r7={11d,38u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={42d,14u} r18={3d} r19={3d} r20={1d,1u} r21={18d,17u,2e} r22={18d,16u} r23={6d,4u} r24={5d,2u} r25={5d,2u} r26={11d,7u} r27={6d,2u} r28={5d,1u} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={6d,4u} r38={6d,3u} r39={4d,1u} r40={4d,1u} r41={3d,3u} r42={4d,10u} r43={4d,11u,1e} r45={4d,1u} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 575{313d,254u,8e} in 174{171 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 0 )->[2]->( 23 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 2 )->[3]->( 4 23 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 3 )->[4]->( 5 15 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 4 )->[5]->( 6 24 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 5 )->[6]->( 7 15 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 7 24 )->[8]->( 9 13 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]

( 11 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; lr  use 	 6 [bp] 7 [sp] 27 [xmm6]
;; lr  def 	 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  gen 	 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]

( 10 9 )->[11]->( 10 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 45 [xmm8]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]

( 11 )->[12]->( 13 15 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 12 8 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 14 13 )->[14]->( 14 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 14 4 6 12 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 15 23 )->[16]->( 17 22 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 16 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 4 [si] 17 [flags] 37 [r8] 42 [r13]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 4 [si] 37 [r8] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]

( 21 17 )->[18]->( 19 21 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]

( 18 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]

( 20 19 )->[20]->( 20 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]

( 20 18 )->[21]->( 18 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  gen 	 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]

( 21 16 )->[22]->( 1 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 7 [sp] 20 [frame] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 3 2 )->[23]->( 16 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 5 )->[24]->( 8 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 22 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(20){ }u-1(41){ }u-1(42){ }u-1(43){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 42 to worklist
  Adding insn 38 to worklist
  Adding insn 35 to worklist
  Adding insn 29 to worklist
  Adding insn 26 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 291 to worklist
  Adding insn 289 to worklist
  Adding insn 288 to worklist
  Adding insn 287 to worklist
  Adding insn 286 to worklist
  Adding insn 285 to worklist
  Adding insn 283 to worklist
  Adding insn 46 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 62 to worklist
  Adding insn 68 to worklist
  Adding insn 66 to worklist
  Adding insn 64 to worklist
  Adding insn 75 to worklist
  Adding insn 306 to worklist
  Adding insn 113 to worklist
  Adding insn 108 to worklist
  Adding insn 106 to worklist
  Adding insn 101 to worklist
  Adding insn 117 to worklist
  Adding insn 138 to worklist
  Adding insn 133 to worklist
  Adding insn 130 to worklist
  Adding insn 146 to worklist
  Adding insn 164 to worklist
  Adding insn 162 to worklist
  Adding insn 160 to worklist
  Adding insn 193 to worklist
  Adding insn 190 to worklist
  Adding insn 181 to worklist
  Adding insn 177 to worklist
  Adding insn 175 to worklist
  Adding insn 187 to worklist
  Adding insn 184 to worklist
  Adding insn 298 to worklist
  Adding insn 207 to worklist
  Adding insn 308 to worklist
  Adding insn 157 to worklist
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 310 to worklist
Finished finding needed instructions:
processing block 22 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 297 to worklist
  Adding insn 296 to worklist
  Adding insn 295 to worklist
  Adding insn 294 to worklist
  Adding insn 293 to worklist
  Adding insn 204 to worklist
processing block 21 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
  Adding insn 186 to worklist
  Adding insn 185 to worklist
processing block 20 lr out =  0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
  Adding insn 180 to worklist
  Adding insn 178 to worklist
  Adding insn 174 to worklist
  Adding insn 173 to worklist
processing block 19 lr out =  0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
  Adding insn 300 to worklist
  Adding insn 195 to worklist
processing block 18 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
  Adding insn 192 to worklist
processing block 17 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
  Adding insn 301 to worklist
  Adding insn 169 to worklist
  Adding insn 167 to worklist
processing block 16 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 163 to worklist
processing block 23 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 303 to worklist
  Adding insn 302 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
processing block 10 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
  Adding insn 11 to worklist
processing block 15 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 145 to worklist
processing block 14 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 137 to worklist
  Adding insn 135 to worklist
  Adding insn 134 to worklist
  Adding insn 131 to worklist
processing block 13 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 128 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 276 to worklist
  Adding insn 121 to worklist
  Adding insn 277 to worklist
processing block 12 lr out =  0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 116 to worklist
  Adding insn 115 to worklist
processing block 11 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
  Adding insn 112 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 274 to worklist
  Adding insn 98 to worklist
  Adding insn 273 to worklist
  Adding insn 251 to worklist
  Adding insn 250 to worklist
  Adding insn 249 to worklist
  Adding insn 248 to worklist
  Adding insn 247 to worklist
  Adding insn 271 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
  Adding insn 269 to worklist
  Adding insn 244 to worklist
  Adding insn 243 to worklist
  Adding insn 242 to worklist
  Adding insn 241 to worklist
  Adding insn 240 to worklist
  Adding insn 239 to worklist
  Adding insn 267 to worklist
  Adding insn 238 to worklist
  Adding insn 265 to worklist
  Adding insn 92 to worklist
  Adding insn 264 to worklist
processing block 9 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
  Adding insn 97 to worklist
  Adding insn 304 to worklist
  Adding insn 90 to worklist
  Adding insn 263 to worklist
  Adding insn 87 to worklist
  Adding insn 262 to worklist
  Adding insn 85 to worklist
  Adding insn 261 to worklist
  Adding insn 221 to worklist
  Adding insn 84 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 260 to worklist
  Adding insn 259 to worklist
  Adding insn 80 to worklist
  Adding insn 258 to worklist
  Adding insn 257 to worklist
  Adding insn 280 to worklist
  Adding insn 279 to worklist
  Adding insn 278 to worklist
processing block 8 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 74 to worklist
  Adding insn 281 to worklist
  Adding insn 72 to worklist
  Adding insn 256 to worklist
  Adding insn 71 to worklist
  Adding insn 255 to worklist
processing block 7 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 9 to worklist
processing block 6 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 67 to worklist
processing block 24 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 305 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 55 to worklist
  Adding insn 254 to worklist
processing block 4 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 49 to worklist
processing block 3 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 45 to worklist
processing block 2 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 41 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 253 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 282 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 284 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 37 count 30 (  1.2)
deleting insn with uid = 290.
deleting insn with uid = 8.
deleting insn with uid = 39.
deleting insn with uid = 40.
;;   ======================================================
;;   -- basic block 2 from 283 to 42 -- after reload
;;   ======================================================

;;	  0-->   283 [--sp]=bp                         :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   284 bp=sp                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   285 [--sp]=r14                        :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   289 use bp                            :nothing
;;	  2-->   286 [--sp]=r13                        :c2_decodern,(c2_p4+c2_p3)
;;	  3-->   287 [--sp]=r12                        :c2_decodern,(c2_p4+c2_p3)
;;	  4-->   288 [--sp]=bx                         :c2_decodern,(c2_p4+c2_p3)
;;	  5-->   291 unspec/v{0;}                      :c2_decoder0
;;	 11-->     6 bx=si                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 11-->     7 r13=dx                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 11-->    18: debug width => r13               :nothing
;;	 11-->    19: debug height => bx               :nothing
;;	 11-->    20: debug size => 0x4                :nothing
;;	 11-->     5 r12=di                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 12-->   282 si=bx+0x1#0                       :c2_decodern,c2_p0
;;	 12-->    25 di=0x20                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->    22 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->    23 {si=si<<0x3;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	 15-->    26 call <...>                        :c2_decoder0
;;	 15-->   253 si=r13                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 15-->    34 di=0x20                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 16-->    30 {si=si*bx;clobber flags;}         :c2_decodern,c2_p1
;;	 16-->    27 r14=ax                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 16-->    29: debug idx => r14                 :nothing
;;	 19-->    31 {si=si<<0x2;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	 20-->    32 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 21-->    35 call <...>                        :c2_decoder0
;;	 21-->    38: debug heap => ax                 :nothing
;;	 22-->    41 flags=cmp(ax,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 23-->    42 pc={(flags==0)?L149:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 23
;;   new head = 283
;;   new tail = 42

;;   ======================================================
;;   -- basic block 3 from 45 to 46 -- after reload
;;   ======================================================

;;	  0-->    45 flags=cmp(r14,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    46 pc={(flags==0)?L149:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 45
;;   new tail = 46

;;   ======================================================
;;   -- basic block 4 from 48 to 50 -- after reload
;;   ======================================================

;;	  0-->    48: debug i => 0                     :nothing
;;	  0-->    49 flags=cmp(bx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    50 pc={(flags<=0)?L143:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 48
;;   new tail = 50

deleting insn with uid = 56.
;;   ======================================================
;;   -- basic block 5 from 254 to 62 -- after reload
;;   ======================================================

;;	  0-->   254 dx=r14                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    55 {dx=dx<<0x3c;clobber flags;}      :c2_decodern,c2_p0|c2_p5
;;	  2-->    57 {dx=dx 0>>0x3f;clobber flags;}    :c2_decodern,c2_p0|c2_p5
;;	  3-->    58 flags=cmp(dx,bx)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    59 dx={(leu(flags,0))?dx:bx}         :c2_decoder0,(c2_p0|c2_p1|c2_p5)*2
;;	  6-->    61 flags=cmp(dx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    60 si=zxn(dx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->    62 pc={(flags==0)?L213:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 7
;;   new head = 254
;;   new tail = 62

;;   ======================================================
;;   -- basic block 6 from 64 to 68 -- after reload
;;   ======================================================

;;	  0-->    67 flags=cmp(bx,dx)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    64 [r14]=ax                          :c2_decodern,(c2_p4+c2_p3)
;;	  0-->    66: debug i => 0x1                   :nothing
;;	  1-->    68 pc={(flags==0)?L143:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 64
;;   new tail = 68

;;   ======================================================
;;   -- basic block 7 from 9 to 9 -- after reload
;;   ======================================================

;;	  0-->     9 cx=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 9
;;   new tail = 9

;;   ======================================================
;;   -- basic block 8 from 255 to 75 -- after reload
;;   ======================================================

;;	  0-->   255 r9=bx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    71 {r9=r9-dx;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   256 di=r9                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->    72 {di=di 0>>0x2;clobber flags;}     :c2_decodern,c2_p0|c2_p5
;;	  4-->   281 r8=di*0x4#0                       :c2_decodern,c2_p0
;;	  5-->    74 flags=cmp(r8,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    75 pc={(flags==0)?L118:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 6
;;   new head = 255
;;   new tail = 75

deleting insn with uid = 89.
;;   ======================================================
;;   -- basic block 9 from 278 to 306 -- after reload
;;   ======================================================

;;	  0-->   279 r11=cx+0x2#0                      :c2_decodern,c2_p0
;;	  0-->    97 xmm7=const_vector                 :nothing
;;	  1-->   280 r10=cx+0x3#0                      :c2_decodern,c2_p0
;;	  1-->   257 xmm1=r11                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   278 dx=cx+0x1#0                       :c2_decodern,c2_p0
;;	  2-->   258 xmm0=r10                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->    80 xmm1=vec_concat                   :nothing
;;	  3-->   260 xmm2=dx                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   259 xmm0=cx                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    81 xmm0=vec_concat                   :nothing
;;	  4-->    84 xmm2=[`*.LC3']                    :c2_decodern,c2_p2
;;	  4-->    82 xmm0=vec_concat                   :nothing
;;	  5-->    90 dx=si*0x8+r14                     :c2_decodern,c2_p0
;;	  5-->   261 xmm1=r13                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   304 {si=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    85 xmm4=vec_duplicate                :nothing
;;	  6-->   262 xmm1=ax                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   221 xmm8=xmm2                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->    87 xmm1=vec_duplicate                :nothing
;;	  7-->   263 xmm3=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   306 pc=L111                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 7
;;   new head = 278
;;   new tail = 306

;;   ======================================================
;;   -- basic block 10 from 11 to 11 -- after reload
;;   ======================================================

;;	  0-->    11 xmm0=xmm6                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 11
;;   new tail = 11

;;   ======================================================
;;   -- basic block 11 from 264 to 113 -- after reload
;;   ======================================================

;;	  0-->   265 xmm1=xmm4                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   267 xmm5=xmm4                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   264 xmm6=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   238 xmm1=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	  1-->   109 {si=si+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    92 xmm6=xmm6+xmm8                    :c2_decodern,c2_p0|c2_p5
;;	  2-->   239 xmm5=xmm5 0>>0x20                 :c2_decodern,c2_p1
;;	  3-->   240 xmm0=xmm0 0>>0x20                 :c2_decodern,c2_p1
;;	  4-->   241 xmm0=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	  4-->   271 xmm5=xmm2                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   242 xmm1=vec_select                   :nothing
;;	  5-->   247 xmm5=xmm5 0>>0x20                 :c2_decodern,c2_p1
;;	  7-->   243 xmm0=vec_select                   :nothing
;;	  7-->   244 xmm1=vec_select                   :nothing
;;	  7-->   269 xmm0=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->   246 xmm1=xmm1 0>>0x20                 :c2_decodern,c2_p1
;;	  9-->   248 xmm1=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	 10-->   245 xmm0=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	 12-->   250 xmm1=vec_select                   :nothing
;;	 13-->   249 xmm0=vec_select                   :nothing
;;	 13-->   251 xmm0=vec_select                   :nothing
;;	 13-->   273 xmm1=xmm7                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->    98 xmm1=xmm1>xmm0                    :c2_decodern,c2_p1
;;	 14-->   274 xmm5=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 17-->    99 xmm5=vec_select                   :nothing
;;	 17-->   104 xmm0=vec_select                   :nothing
;;	 17-->   100 xmm5=xmm5+xmm3                    :c2_decodern,c2_p0|c2_p5
;;	 18-->   105 xmm0=xmm0+xmm3                    :c2_decodern,c2_p0|c2_p5
;;	 18-->   101 [dx]=xmm5                         :c2_decodern,(c2_p4+c2_p3)
;;	 19-->   106 [dx+0x10]=xmm0                    :c2_decodern,(c2_p4+c2_p3)
;;	 19-->   108: debug i => D#8                   :nothing
;;	 19-->   110 {dx=dx+0x20;clobber flags;}       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 19-->   112 flags=cmp(si,di)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 20-->   113 pc={(ltu(flags,0))?L217:pc}       :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 20
;;   new head = 264
;;   new tail = 113

;;   ======================================================
;;   -- basic block 12 from 115 to 117 -- after reload
;;   ======================================================

;;	  0-->   115 {cx=cx+r8;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   116 flags=cmp(r9,r8)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   117 pc={(flags==0)?L143:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 115
;;   new tail = 117

deleting insn with uid = 127.
;;   ======================================================
;;   -- basic block 13 from 277 to 128 -- after reload
;;   ======================================================

;;	  0-->   277 di=r13*0x4#0                      :c2_decodern,c2_p0
;;	  0-->   276 si=r13                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   126 dx=sxn(cx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   122 {si=si*cx;clobber flags;}         :c2_decodern,c2_p1
;;	  1-->   128 dx=dx*0x8+r14                     :c2_decodern,c2_p0
;;	  1-->   121 di=sxn(di)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   123 {si=si<<0x2;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	  5-->   124 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   125 {si=ax+si;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 6
;;   new head = 277
;;   new tail = 128

;;   ======================================================
;;   -- basic block 14 from 130 to 138 -- after reload
;;   ======================================================

;;	  0-->   131 {cx=cx+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   133: debug i => cx                    :nothing
;;	  0-->   130 [dx]=si                           :c2_decodern,(c2_p4+c2_p3)
;;	  0-->   134 {si=si+di;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   135 {dx=dx+0x8;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   137 flags=cmp(bx,cx)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   138 pc={(flags>0)?L136:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 130
;;   new tail = 138

;;   ======================================================
;;   -- basic block 15 from 145 to 146 -- after reload
;;   ======================================================

;;	  0-->   145 dx=sxn(bx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   146 [dx*0x8+r14]=ax                   :c2_decodern,(c2_p4+c2_p3)
;;	Ready list (final):  
;;   total time = 1
;;   new head = 145
;;   new tail = 146

;;   ======================================================
;;   -- basic block 16 from 160 to 164 -- after reload
;;   ======================================================

;;	  0-->   160: debug extImage optimized away    :nothing
;;	  0-->   162: debug i => 0                     :nothing
;;	  0-->   163 flags=cmp(r13,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   164 pc={(flags<=0)?L198:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 160
;;   new tail = 164

deleting insn with uid = 168.
;;   ======================================================
;;   -- basic block 17 from 167 to 301 -- after reload
;;   ======================================================

;;	  0-->   167 {r13=zxn(r13-0x1);clobber flags;} :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   301 {si=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   169 r8=r13*0x4+0x4                    :c2_decodern,c2_p0
;;	Ready list (final):  
;;   total time = 1
;;   new head = 167
;;   new tail = 301

;;   ======================================================
;;   -- basic block 18 from 190 to 193 -- after reload
;;   ======================================================

;;	  0-->   190: debug j => 0                     :nothing
;;	  0-->   192 flags=cmp(bx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   193 pc={(flags<=0)?L191:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 190
;;   new tail = 193

;;   ======================================================
;;   -- basic block 19 from 195 to 300 -- after reload
;;   ======================================================

;;	  0-->   195 di=[si*0x2+r12]                   :c2_decodern,c2_p2
;;	  0-->   300 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 195
;;   new tail = 300

;;   ======================================================
;;   -- basic block 20 from 173 to 181 -- after reload
;;   ======================================================

;;	  0-->   173 cx=[ax*0x4+di]                    :c2_decodern,c2_p2
;;	  1-->   174 dx=[ax*0x8+r14]                   :c2_decodern,c2_p2
;;	  1-->   178 {ax=ax+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   180 flags=cmp(bx,ax)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   175 [dx+si]=cx                        :c2_decodern,(c2_p4+c2_p3)
;;	  5-->   177: debug j => D#9                   :nothing
;;	  5-->   181 pc={(flags>0)?L179:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 5
;;   new head = 173
;;   new tail = 181

;;   ======================================================
;;   -- basic block 21 from 184 to 187 -- after reload
;;   ======================================================

;;	  0-->   184: debug i => D#10                  :nothing
;;	  0-->   185 {si=si+0x4;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   186 flags=cmp(si,r8)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   187 pc={(flags!=0)?L188:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 184
;;   new tail = 187

deleting insn with uid = 292.
;;   ======================================================
;;   -- basic block 22 from 204 to 298 -- after reload
;;   ======================================================

;;	  0-->   293 bx=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  0-->   204 ax=r14                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   207 use ax                            :nothing
;;	  4-->   294 r12=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  8-->   295 r13=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 12-->   296 r14=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 16-->   297 bp=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 17-->   298 return                            :c2_decoder0
;;	Ready list (final):  
;;   total time = 17
;;   new head = 204
;;   new tail = 298

;;   ======================================================
;;   -- basic block 23 from 151 to 308 -- after reload
;;   ======================================================

;;	  0-->   151: debug __stream => [`stderr']     :nothing
;;	  0-->   152: debug __fmt => `*.LC4'           :nothing
;;	  0-->   155 di=[`stderr']                     :c2_decodern,c2_p2
;;	  0-->   153 dx=`*.LC4'                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   302 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   154 si=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   303 {r14=0;clobber flags;}            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   157 call <...>                        :c2_decoder0
;;	  4-->   308 pc=L158                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 4
;;   new head = 151
;;   new tail = 308

;;   ======================================================
;;   -- basic block 24 from 305 to 310 -- after reload
;;   ======================================================

;;	  0-->   305 {cx=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   310 pc=L69                            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 305
;;   new tail = 310





izp_transpose

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 45[xmm8]
;;  ref usage 	r0={8d,14u,2e} r1={17d,19u,2e} r2={9d,11u} r3={3d,14u} r4={23d,22u} r5={12d,10u,1e} r6={3d,26u} r7={11d,38u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={42d,14u} r18={3d} r19={3d} r20={1d,1u} r21={18d,17u,2e} r22={18d,16u} r23={6d,4u} r24={5d,2u} r25={5d,2u} r26={11d,7u} r27={6d,2u} r28={5d,1u} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={6d,4u} r38={6d,3u} r39={4d,1u} r40={4d,1u} r41={3d,3u} r42={4d,10u} r43={4d,11u,1e} r45={4d,1u} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 575{313d,254u,8e} in 174{171 regular + 3 call} insns.
(note 4 0 16 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 16 4 8 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 8 16 39 2 NOTE_INSN_FUNCTION_BEG)

(note 39 8 40 2 NOTE_INSN_DELETED)

(note 40 39 283 2 NOTE_INSN_DELETED)

(insn/f:TI 283 40 284 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg/f:DI 6 bp)) ../src/izp-gaussian.c:549 42 {*pushdi2_rex64}
     (nil))

(insn/f:TI 284 283 285 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) ../src/izp-gaussian.c:549 62 {*movdi_internal_rex64}
     (nil))

(insn/f 285 284 289 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 43 r14)) ../src/izp-gaussian.c:549 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn 289 285 286 2 (use (reg/f:DI 6 bp)) ../src/izp-gaussian.c:549 -1
     (nil))

(insn/f:TI 286 289 287 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 42 r13)) ../src/izp-gaussian.c:549 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f:TI 287 286 288 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) ../src/izp-gaussian.c:549 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f:TI 288 287 290 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) ../src/izp-gaussian.c:549 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(note 290 288 291 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 291 290 6 2 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) ../src/izp-gaussian.c:549 631 {blockage}
     (nil))

(insn:TI 6 291 7 2 (set (reg/v:SI 3 bx [orig:171 cols ] [171])
        (reg:SI 4 si [ cols ])) ../src/izp-gaussian.c:549 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ cols ])
        (nil)))

(insn 7 6 18 2 (set (reg/v:SI 42 r13 [orig:172 rows ] [172])
        (reg:SI 1 dx [ rows ])) ../src/izp-gaussian.c:549 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ rows ])
        (nil)))

(debug_insn 18 7 19 2 (var_location:SI width (reg/v:SI 42 r13 [orig:172 rows ] [172])) -1
     (nil))

(debug_insn 19 18 20 2 (var_location:SI height (reg/v:SI 3 bx [orig:171 cols ] [171])) -1
     (nil))

(debug_insn 20 19 5 2 (var_location:SI size (const_int 4 [0x4])) -1
     (nil))

(insn 5 20 282 2 (set (reg/v/f:DI 41 r12 [orig:170 image ] [170])
        (reg:DI 5 di [ image ])) ../src/izp-gaussian.c:549 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ image ])
        (nil)))

(insn:TI 282 5 25 2 (set (reg:SI 4 si [173])
        (subreg:SI (plus:DI (reg:DI 3 bx [orig:171 cols ] [171])
                (const_int 1 [0x1])) 0)) ../src/izp-gaussian.c:583 250 {*lea_2}
     (nil))

(insn 25 282 22 2 (set (reg:DI 5 di)
        (const_int 32 [0x20])) ../src/izp-gaussian.c:583 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 22 25 23 2 (set (reg:DI 4 si [174])
        (sign_extend:DI (reg:SI 4 si [173]))) ../src/izp-gaussian.c:583 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 23 22 26 2 (parallel [
            (set (reg:DI 4 si [175])
                (ashift:DI (reg:DI 4 si [174])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:583 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 26 23 253 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memalign") [flags 0x41]  <function_decl 0x2ae3457b0b00 memalign>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:583 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 253 26 34 2 (set (reg:SI 4 si [177])
        (reg/v:SI 42 r13 [orig:172 rows ] [172])) ../src/izp-gaussian.c:584 64 {*movsi_internal}
     (nil))

(insn 34 253 30 2 (set (reg:DI 5 di)
        (const_int 32 [0x20])) ../src/izp-gaussian.c:584 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 30 34 27 2 (parallel [
            (set (reg:SI 4 si [177])
                (mult:SI (reg:SI 4 si [177])
                    (reg/v:SI 3 bx [orig:171 cols ] [171])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:584 333 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 27 30 29 2 (set (reg/v/f:DI 43 r14 [orig:86 extImage ] [86])
        (reg:DI 0 ax)) ../src/izp-gaussian.c:583 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 176)
            (nil))))

(debug_insn 29 27 31 2 (var_location:DI idx (reg/v/f:DI 43 r14 [orig:86 extImage ] [86])) ../src/izp-gaussian.c:583 -1
     (nil))

(insn:TI 31 29 32 2 (parallel [
            (set (reg:SI 4 si [178])
                (ashift:SI (reg:SI 4 si [177])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:584 497 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 32 31 35 2 (set (reg:DI 4 si [179])
        (sign_extend:DI (reg:SI 4 si [178]))) ../src/izp-gaussian.c:584 126 {*extendsidi2_rex64}
     (nil))

(call_insn:TI 35 32 38 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memalign") [flags 0x41]  <function_decl 0x2ae3457b0b00 memalign>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:584 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(debug_insn 38 35 41 2 (var_location:DI heap (reg/v/f:DI 0 ax [orig:90 heap ] [90])) ../src/izp-gaussian.c:584 -1
     (nil))

(insn:TI 41 38 42 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:90 heap ] [90])
            (const_int 0 [0]))) ../src/izp-gaussian.c:586 3 {*cmpdi_ccno_1}
     (nil))

(jump_insn:TI 42 41 218 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) ../src/izp-gaussian.c:586 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 434 [0x1b2])
            (nil)))
 -> 149)
;; End of basic block 2 -> ( 23 3)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  23 [4.3%]  (can_fallthru)
;; Succ edge  3 [95.7%]  (fallthru,can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  2 [95.7%]  (fallthru,can_fallthru)
(note 218 42 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 43 218 44 3 NOTE_INSN_DELETED)

(note 44 43 45 3 NOTE_INSN_DELETED)

(insn:TI 45 44 46 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 43 r14 [orig:86 extImage ] [86])
            (const_int 0 [0]))) ../src/izp-gaussian.c:586 3 {*cmpdi_ccno_1}
     (nil))

(jump_insn:TI 46 45 47 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) ../src/izp-gaussian.c:586 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 434 [0x1b2])
            (nil)))
 -> 149)
;; End of basic block 3 -> ( 4 23)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  4 [95.7%]  (fallthru,can_fallthru)
;; Succ edge  23 [4.3%]  (can_fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  3 [95.7%]  (fallthru,can_fallthru)
(note 47 46 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(debug_insn 48 47 49 4 (var_location:SI i (const_int 0 [0])) -1
     (nil))

(insn:TI 49 48 50 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 3 bx [orig:171 cols ] [171])
            (const_int 0 [0]))) ../src/izp-gaussian.c:587 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 50 49 51 4 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) ../src/izp-gaussian.c:587 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 143)
;; End of basic block 4 -> ( 5 15)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  5 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  15 [9.0%]  (can_fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  4 [91.0%]  (fallthru,can_fallthru)
(note 51 50 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 54 51 56 5 NOTE_INSN_DELETED)

(note 56 54 254 5 NOTE_INSN_DELETED)

(insn:TI 254 56 55 5 (set (reg:DI 1 dx [186])
        (reg/v/f:DI 43 r14 [orig:86 extImage ] [86])) ../src/izp-gaussian.c:549 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 55 254 57 5 (parallel [
            (set (reg:DI 1 dx [186])
                (ashift:DI (reg:DI 1 dx [186])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:549 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 57 55 58 5 (parallel [
            (set (reg:DI 1 dx [188])
                (lshiftrt:DI (reg:DI 1 dx [186])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:549 533 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 58 57 59 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [188])
            (reg/v:SI 3 bx [orig:171 cols ] [171]))) ../src/izp-gaussian.c:549 6 {*cmpsi_1}
     (nil))

(insn:TI 59 58 61 5 (set (reg:SI 1 dx [orig:128 prolog_loop_niters.741 ] [128])
        (if_then_else:SI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:SI 1 dx [188])
            (reg/v:SI 3 bx [orig:171 cols ] [171]))) ../src/izp-gaussian.c:549 885 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn:TI 61 59 60 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:128 prolog_loop_niters.741 ] [128])
            (const_int 0 [0]))) ../src/izp-gaussian.c:549 2 {*cmpsi_ccno_1}
     (nil))

(insn 60 61 62 5 (set (reg:DI 4 si [orig:122 prolog_loop_niters.742 ] [122])
        (zero_extend:DI (reg:SI 1 dx [orig:128 prolog_loop_niters.741 ] [128]))) ../src/izp-gaussian.c:549 114 {*zero_extendsidi2_rex64}
     (nil))

(jump_insn:TI 62 60 63 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) ../src/izp-gaussian.c:549 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 213)
;; End of basic block 5 -> ( 6 24)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  6 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  24 (can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru,can_fallthru)
(note 63 62 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 67 63 64 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 3 bx [orig:171 cols ] [171])
            (reg:SI 1 dx [orig:128 prolog_loop_niters.741 ] [128]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (nil))

(insn 64 67 66 6 (set (mem/f:DI (reg/v/f:DI 43 r14 [orig:86 extImage ] [86]) [2 MEM[base: D.8506_51, offset: 0B]+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:90 heap ] [90])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(debug_insn 66 64 68 6 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))

(jump_insn:TI 68 66 209 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 143)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 143)
;; End of basic block 6 -> ( 7 15)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  7 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  15 (can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru,can_fallthru)
(note 209 68 9 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 9 209 69 7 (set (reg/v:SI 2 cx [orig:147 i ] [147])
        (const_int 1 [0x1])) ../src/izp-gaussian.c:587 64 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  8 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 7 24) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]

;; Pred edge  7 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  24 [100.0%]  (can_fallthru)
(code_label 69 9 70 8 48 "" [1 uses])

(note 70 69 255 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 255 70 71 8 (set (reg:SI 38 r9 [orig:144 niters.745 ] [144])
        (reg/v:SI 3 bx [orig:171 cols ] [171])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 71 255 256 8 (parallel [
            (set (reg:SI 38 r9 [orig:144 niters.745 ] [144])
                (minus:SI (reg:SI 38 r9 [orig:144 niters.745 ] [144])
                    (reg:SI 1 dx [orig:128 prolog_loop_niters.741 ] [128])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 291 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:128 prolog_loop_niters.741 ] [128])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 256 71 72 8 (set (reg:SI 5 di [orig:145 bnd.746 ] [145])
        (reg:SI 38 r9 [orig:144 niters.745 ] [144])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 72 256 281 8 (parallel [
            (set (reg:SI 5 di [orig:145 bnd.746 ] [145])
                (lshiftrt:SI (reg:SI 5 di [orig:145 bnd.746 ] [145])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 531 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 281 72 74 8 (set (reg:SI 37 r8 [orig:146 ratio_mult_vf.747 ] [146])
        (subreg:SI (mult:DI (reg:DI 5 di [orig:145 bnd.746 ] [145])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn:TI 74 281 75 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 37 r8 [orig:146 ratio_mult_vf.747 ] [146])
            (const_int 0 [0]))) ../src/izp-gaussian.c:588 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 75 74 76 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 118)
;; End of basic block 8 -> ( 9 13)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  9 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  13 (can_fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  kill	 17 [flags]

;; Pred edge  8 [100.0%]  (fallthru,can_fallthru)
(note 76 75 89 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 89 76 279 9 NOTE_INSN_DELETED)

(insn:TI 279 89 97 9 (set (reg:SI 40 r11 [191])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:147 i ] [147])
                (const_int 2 [0x2])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 97 279 280 9 (set (reg:V4SI 28 xmm7 [223])
        (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])
        (nil)))

(insn:TI 280 97 257 9 (set (reg:SI 39 r10 [192])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:147 i ] [147])
                (const_int 3 [0x3])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 257 280 278 9 (set (reg:SI 22 xmm1)
        (reg:SI 40 r11 [191])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 40 r11 [191])
        (nil)))

(insn:TI 278 257 258 9 (set (reg:SI 1 dx [190])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:147 i ] [147])
                (const_int 1 [0x1])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 258 278 80 9 (set (reg:SI 21 xmm0)
        (reg:SI 39 r10 [192])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 39 r10 [192])
        (nil)))

(insn:TI 80 258 260 9 (set (reg:V2SI 22 xmm1 [193])
        (vec_concat:V2SI (reg:SI 22 xmm1)
            (reg:SI 21 xmm0))) ../src/izp-gaussian.c:588 1791 {*vec_concatv2si_sse2}
     (expr_list:REG_DEAD (reg:SI 21 xmm0)
        (nil)))

(insn 260 80 259 9 (set (reg:SI 23 xmm2)
        (reg:SI 1 dx [190])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [190])
        (nil)))

(insn 259 260 81 9 (set (reg:SI 21 xmm0)
        (reg/v:SI 2 cx [orig:147 i ] [147])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 81 259 84 9 (set (reg:V2SI 21 xmm0 [194])
        (vec_concat:V2SI (reg:SI 21 xmm0)
            (reg:SI 23 xmm2))) ../src/izp-gaussian.c:588 1791 {*vec_concatv2si_sse2}
     (expr_list:REG_DEAD (reg:SI 23 xmm2)
        (nil)))

(insn 84 81 82 9 (set (reg:V4SI 23 xmm2 [222])
        (mem/u/c/i:V4SI (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5 S16 A128])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
            ])
        (nil)))

(insn 82 84 90 9 (set (reg:V4SI 21 xmm0 [orig:156 vect_vec_iv_.752 ] [156])
        (vec_concat:V4SI (reg:V2SI 21 xmm0 [194])
            (reg:V2SI 22 xmm1 [193]))) ../src/izp-gaussian.c:588 1794 {*vec_concatv4si_1}
     (expr_list:REG_DEAD (reg:V2SI 22 xmm1 [193])
        (nil)))

(insn:TI 90 82 261 9 (set (reg:DI 1 dx [orig:120 ivtmp.797 ] [120])
        (plus:DI (mult:DI (reg:DI 4 si [orig:122 prolog_loop_niters.742 ] [122])
                (const_int 8 [0x8]))
            (reg/v/f:DI 43 r14 [orig:86 extImage ] [86]))) ../src/izp-gaussian.c:588 249 {*lea_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:122 prolog_loop_niters.742 ] [122])
        (nil)))

(insn 261 90 304 9 (set (reg:SI 22 xmm1)
        (reg/v:SI 42 r13 [orig:172 rows ] [172])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn 304 261 85 9 (parallel [
            (set (reg:DI 4 si [orig:80 ivtmp.795 ] [80])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 85 304 262 9 (set (reg:V4SI 25 xmm4 [orig:159 vect_cst_.754 ] [159])
        (vec_duplicate:V4SI (reg:SI 22 xmm1))) ../src/izp-gaussian.c:588 1785 {*vec_dupv4si}
     (expr_list:REG_DEAD (reg:SI 22 xmm1)
        (nil)))

(insn 262 85 221 9 (set (reg:DI 22 xmm1)
        (reg/v/f:DI 0 ax [orig:90 heap ] [90])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(insn 221 262 87 9 (set (reg:V4SI 45 xmm8 [orig:157 vect_cst_.751 ] [157])
        (reg:V4SI 23 xmm2 [222])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
            ])
        (nil)))

(insn:TI 87 221 263 9 (set (reg:V2DI 22 xmm1)
        (vec_duplicate:V2DI (reg:DI 22 xmm1))) ../src/izp-gaussian.c:588 1787 {*vec_dupv2di_sse3}
     (nil))

(insn 263 87 306 9 (set (reg:V2DI 24 xmm3 [orig:164 vect_cst_.759 ] [164])
        (reg:V2DI 22 xmm1)) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1)
        (nil)))

(jump_insn 306 263 307 9 (set (pc)
        (label_ref 111)) 606 {jump}
     (nil)
 -> 111)
;; End of basic block 9 -> ( 11)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]


;; Succ edge  11 [100.0%]  (can_fallthru)

(barrier 307 306 217)

;; Start of basic block ( 11) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; lr  use 	 6 [bp] 7 [sp] 27 [xmm6]
;; lr  def 	 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  gen 	 21 [xmm0]
;; live  kill	

;; Pred edge  11 [91.0%]  (can_fallthru)
(code_label 217 307 216 10 60 "" [1 uses])

(note 216 217 11 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 11 216 111 10 (set (reg:V4SI 21 xmm0 [orig:156 vect_vec_iv_.752 ] [156])
        (reg:V4SI 27 xmm6 [orig:158 vect_vec_iv_.752 ] [158])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 27 xmm6 [orig:158 vect_vec_iv_.752 ] [158])
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]


;; Succ edge  11 [100.0%]  (fallthru,dfs_back,can_fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 45 [xmm8]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  kill	 17 [flags]

;; Pred edge  10 [100.0%]  (fallthru,dfs_back,can_fallthru)
;; Pred edge  9 [100.0%]  (can_fallthru)
(code_label 111 11 91 11 51 "" [1 uses])

(note 91 111 265 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 265 91 267 11 (set (reg:V4SI 22 xmm1)
        (reg:V4SI 25 xmm4 [orig:159 vect_cst_.754 ] [159])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn 267 265 264 11 (set (reg:V1TI 26 xmm5)
        (reg:V1TI 25 xmm4)) ../src/izp-gaussian.c:588 1125 {*movv1ti_internal}
     (nil))

(insn 264 267 238 11 (set (reg:V4SI 27 xmm6 [orig:158 vect_vec_iv_.752 ] [158])
        (reg:V4SI 21 xmm0 [orig:156 vect_vec_iv_.752 ] [156])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 238 264 109 11 (set (reg:V2DI 22 xmm1)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [orig:156 vect_vec_iv_.752 ] [156])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (nil))

(insn 109 238 92 11 (parallel [
            (set (reg:SI 4 si [orig:80 ivtmp.795 ] [80])
                (plus:SI (reg:SI 4 si [orig:80 ivtmp.795 ] [80])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 92 109 239 11 (set (reg:V4SI 27 xmm6 [orig:158 vect_vec_iv_.752 ] [158])
        (plus:V4SI (reg:V4SI 27 xmm6 [orig:158 vect_vec_iv_.752 ] [158])
            (reg:V4SI 45 xmm8 [orig:157 vect_cst_.751 ] [157]))) ../src/izp-gaussian.c:588 1570 {*addv4si3}
     (expr_list:REG_EQUAL (plus:V4SI (reg:V4SI 21 xmm0 [orig:156 vect_vec_iv_.752 ] [156])
            (const_vector:V4SI [
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                ]))
        (nil)))

(insn:TI 239 92 240 11 (set (reg:V1TI 26 xmm5)
        (lshiftrt:V1TI (reg:V1TI 26 xmm5)
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 240 239 241 11 (set (reg:V1TI 21 xmm0 [226])
        (lshiftrt:V1TI (reg:V1TI 21 xmm0 [orig:156 vect_vec_iv_.752 ] [156])
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 241 240 271 11 (set (reg:V2DI 21 xmm0 [227])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [226])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 26 xmm5 [225])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (expr_list:REG_DEAD (reg:V4SI 26 xmm5 [225])
        (nil)))

(insn 271 241 242 11 (set (reg:V1TI 26 xmm5)
        (reg:V1TI 23 xmm2)) ../src/izp-gaussian.c:588 1125 {*movv1ti_internal}
     (nil))

(insn 242 271 247 11 (set (reg:V4SI 22 xmm1 [228])
        (vec_select:V4SI (reg:V4SI 22 xmm1 [224])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn:TI 247 242 243 11 (set (reg:V1TI 26 xmm5)
        (lshiftrt:V1TI (reg:V1TI 26 xmm5)
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 243 247 244 11 (set (reg:V4SI 21 xmm0 [229])
        (vec_select:V4SI (reg:V4SI 21 xmm0 [227])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn 244 243 269 11 (set (reg:V4SI 22 xmm1 [198])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 22 xmm1 [228])
                (reg:V4SI 21 xmm0 [229]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 21 xmm0 [229])
        (nil)))

(insn 269 244 246 11 (set (reg:V4SI 21 xmm0)
        (reg:V4SI 22 xmm1 [198])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 246 269 248 11 (set (reg:V1TI 22 xmm1 [231])
        (lshiftrt:V1TI (reg:V1TI 22 xmm1 [198])
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 248 246 245 11 (set (reg:V2DI 22 xmm1 [233])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [231])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 26 xmm5 [232])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (expr_list:REG_DEAD (reg:V4SI 26 xmm5 [232])
        (nil)))

(insn:TI 245 248 250 11 (set (reg:V2DI 21 xmm0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 23 xmm2 [222])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (nil))

(insn:TI 250 245 249 11 (set (reg:V4SI 22 xmm1 [235])
        (vec_select:V4SI (reg:V4SI 22 xmm1 [233])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn:TI 249 250 251 11 (set (reg:V4SI 21 xmm0 [234])
        (vec_select:V4SI (reg:V4SI 21 xmm0 [230])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn 251 249 273 11 (set (reg:V4SI 21 xmm0 [orig:161 vect_var_.755 ] [161])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 21 xmm0 [234])
                (reg:V4SI 22 xmm1 [235]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [235])
        (nil)))

(insn 273 251 98 11 (set (reg:V4SI 22 xmm1 [203])
        (reg:V4SI 28 xmm7 [223])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 98 273 274 11 (set (reg:V4SI 22 xmm1 [203])
        (gt:V4SI (reg:V4SI 22 xmm1 [203])
            (reg:V4SI 21 xmm0 [orig:161 vect_var_.755 ] [161]))) ../src/izp-gaussian.c:588 1665 {sse2_gtv4si3}
     (expr_list:REG_EQUAL (gt:V4SI (const_vector:V4SI [
                    (const_int 0 [0])
                    (const_int 0 [0])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ])
            (reg:V4SI 21 xmm0 [orig:161 vect_var_.755 ] [161]))
        (nil)))

(insn 274 98 99 11 (set (reg:V4SI 26 xmm5)
        (reg:V4SI 21 xmm0 [orig:161 vect_var_.755 ] [161])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 99 274 104 11 (set (reg:V4SI 26 xmm5)
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 26 xmm5)
                (reg:V4SI 22 xmm1 [203]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (nil))

(insn 104 99 100 11 (set (reg:V4SI 21 xmm0 [205])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 21 xmm0 [orig:161 vect_var_.755 ] [161])
                (reg:V4SI 22 xmm1 [203]))
            (parallel [
                    (const_int 2 [0x2])
                    (const_int 6 [0x6])
                    (const_int 3 [0x3])
                    (const_int 7 [0x7])
                ]))) ../src/izp-gaussian.c:588 1750 {vec_interleave_highv4si}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [203])
        (nil)))

(insn 100 104 105 11 (set (reg:V2DI 26 xmm5 [204])
        (plus:V2DI (reg:V2DI 26 xmm5 [200])
            (reg:V2DI 24 xmm3 [orig:164 vect_cst_.759 ] [164]))) ../src/izp-gaussian.c:588 1572 {*addv2di3}
     (expr_list:REG_EQUIV (mem:V2DI (reg:DI 1 dx [orig:120 ivtmp.797 ] [120]) [2 MEM[base: D.8532_112, offset: 0B]+0 S16 A128])
        (nil)))

(insn:TI 105 100 101 11 (set (reg:V2DI 21 xmm0 [209])
        (plus:V2DI (reg:V2DI 21 xmm0 [205])
            (reg:V2DI 24 xmm3 [orig:164 vect_cst_.759 ] [164]))) ../src/izp-gaussian.c:588 1572 {*addv2di3}
     (expr_list:REG_EQUIV (mem:V2DI (plus:DI (reg:DI 1 dx [orig:120 ivtmp.797 ] [120])
                (const_int 16 [0x10])) [2 MEM[base: D.8532_112, offset: 16B]+0 S16 A128])
        (nil)))

(insn 101 105 106 11 (set (mem:V2DI (reg:DI 1 dx [orig:120 ivtmp.797 ] [120]) [2 MEM[base: D.8532_112, offset: 0B]+0 S16 A128])
        (reg:V2DI 26 xmm5 [204])) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 26 xmm5 [204])
        (nil)))

(insn:TI 106 101 108 11 (set (mem:V2DI (plus:DI (reg:DI 1 dx [orig:120 ivtmp.797 ] [120])
                (const_int 16 [0x10])) [2 MEM[base: D.8532_112, offset: 16B]+0 S16 A128])
        (reg:V2DI 21 xmm0 [209])) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 21 xmm0 [209])
        (nil)))

(debug_insn 108 106 110 11 (var_location:SI i (debug_expr:SI D#8)) -1
     (nil))

(insn 110 108 112 11 (parallel [
            (set (reg:DI 1 dx [orig:120 ivtmp.797 ] [120])
                (plus:DI (reg:DI 1 dx [orig:120 ivtmp.797 ] [120])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 112 110 113 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 4 si [orig:80 ivtmp.795 ] [80])
            (reg:SI 5 di [orig:145 bnd.746 ] [145]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 113 112 114 11 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 217)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 217)
;; End of basic block 11 -> ( 10 12)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]


;; Succ edge  10 [91.0%]  (can_fallthru)
;; Succ edge  12 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  11 [9.0%]  (fallthru,can_fallthru,loop_exit)
(note 114 113 115 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 115 114 116 12 (parallel [
            (set (reg/v:SI 2 cx [orig:147 i ] [147])
                (plus:SI (reg/v:SI 2 cx [orig:147 i ] [147])
                    (reg:SI 37 r8 [orig:146 ratio_mult_vf.747 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 116 115 117 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 38 r9 [orig:144 niters.745 ] [144])
            (reg:SI 37 r8 [orig:146 ratio_mult_vf.747 ] [146]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:144 niters.745 ] [144])
        (expr_list:REG_DEAD (reg:SI 37 r8 [orig:146 ratio_mult_vf.747 ] [146])
            (nil))))

(jump_insn:TI 117 116 118 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 143)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 143)
;; End of basic block 12 -> ( 13 15)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  13 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  15 (can_fallthru)

;; Start of basic block ( 12 8) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  12 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  8 (can_fallthru)
(code_label 118 117 119 13 50 "" [1 uses])

(note 119 118 127 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 127 119 277 13 NOTE_INSN_DELETED)

(insn:TI 277 127 276 13 (set (reg:SI 5 di [210])
        (subreg:SI (mult:DI (reg:DI 42 r13 [orig:172 rows ] [172])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:549 250 {*lea_2}
     (nil))

(insn 276 277 126 13 (set (reg:SI 4 si [211])
        (reg/v:SI 42 r13 [orig:172 rows ] [172])) ../src/izp-gaussian.c:549 64 {*movsi_internal}
     (nil))

(insn 126 276 122 13 (set (reg:DI 1 dx [orig:214 i ] [214])
        (sign_extend:DI (reg/v:SI 2 cx [orig:147 i ] [147]))) ../src/izp-gaussian.c:549 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 122 126 128 13 (parallel [
            (set (reg:SI 4 si [211])
                (mult:SI (reg:SI 4 si [211])
                    (reg/v:SI 2 cx [orig:147 i ] [147])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:549 333 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 128 122 121 13 (set (reg:DI 1 dx [orig:95 ivtmp.773 ] [95])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:214 i ] [214])
                (const_int 8 [0x8]))
            (reg/v/f:DI 43 r14 [orig:86 extImage ] [86]))) ../src/izp-gaussian.c:549 249 {*lea_1}
     (nil))

(insn 121 128 123 13 (set (reg:DI 5 di [orig:150 D.8488 ] [150])
        (sign_extend:DI (reg:SI 5 di [210]))) ../src/izp-gaussian.c:549 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 123 121 124 13 (parallel [
            (set (reg:SI 4 si [212])
                (ashift:SI (reg:SI 4 si [211])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:549 497 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 124 123 125 13 (set (reg:DI 4 si [213])
        (sign_extend:DI (reg:SI 4 si [212]))) ../src/izp-gaussian.c:549 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 125 124 136 13 (parallel [
            (set (reg:DI 4 si [orig:69 ivtmp.771 ] [69])
                (plus:DI (reg/v/f:DI 0 ax [orig:90 heap ] [90])
                    (reg:DI 4 si [213])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:549 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  14 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 14 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  14 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  13 [100.0%]  (fallthru,can_fallthru)
(code_label 136 125 129 14 53 "" [1 uses])

(note 129 136 131 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 131 129 133 14 (parallel [
            (set (reg/v:SI 2 cx [orig:147 i ] [147])
                (plus:SI (reg/v:SI 2 cx [orig:147 i ] [147])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(debug_insn 133 131 130 14 (var_location:SI i (reg/v:SI 2 cx [orig:147 i ] [147])) -1
     (nil))

(insn 130 133 134 14 (set (mem/f:DI (reg:DI 1 dx [orig:95 ivtmp.773 ] [95]) [2 MEM[base: D.8496_49, offset: 0B]+0 S8 A64])
        (reg:DI 4 si [orig:69 ivtmp.771 ] [69])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(insn 134 130 135 14 (parallel [
            (set (reg:DI 4 si [orig:69 ivtmp.771 ] [69])
                (plus:DI (reg:DI 4 si [orig:69 ivtmp.771 ] [69])
                    (reg:DI 5 di [orig:150 D.8488 ] [150])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 135 134 137 14 (parallel [
            (set (reg:DI 1 dx [orig:95 ivtmp.773 ] [95])
                (plus:DI (reg:DI 1 dx [orig:95 ivtmp.773 ] [95])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 137 135 138 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 3 bx [orig:171 cols ] [171])
            (reg/v:SI 2 cx [orig:147 i ] [147]))) ../src/izp-gaussian.c:587 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 138 137 143 14 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 136)
            (pc))) ../src/izp-gaussian.c:587 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 136)
;; End of basic block 14 -> ( 14 15)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  14 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  15 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 14 4 6 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx]
;; live  kill	

;; Pred edge  14 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  4 [9.0%]  (can_fallthru)
;; Pred edge  6 (can_fallthru)
;; Pred edge  12 (can_fallthru)
(code_label 143 138 144 15 47 "" [3 uses])

(note 144 143 145 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:TI 145 144 146 15 (set (reg:DI 1 dx [orig:216 cols ] [216])
        (sign_extend:DI (reg/v:SI 3 bx [orig:171 cols ] [171]))) ../src/izp-gaussian.c:590 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 146 145 158 15 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:216 cols ] [216])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 43 r14 [orig:86 extImage ] [86])) [2 *D.8368_54+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:90 heap ] [90])) ../src/izp-gaussian.c:590 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:216 cols ] [216])
        (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:90 heap ] [90])
            (nil))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  16 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 15 23) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  23 [100.0%]  (can_fallthru)
(code_label 158 146 159 16 54 "" [1 uses])

(note 159 158 160 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(debug_insn 160 159 162 16 (var_location:DI extImage (clobber (const_int 0 [0]))) ../src/izp-gaussian.c:552 -1
     (nil))

(debug_insn 162 160 163 16 (var_location:SI i (const_int 0 [0])) -1
     (nil))

(insn:TI 163 162 164 16 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 42 r13 [orig:172 rows ] [172])
            (const_int 0 [0]))) ../src/izp-gaussian.c:555 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 164 163 165 16 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) ../src/izp-gaussian.c:555 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 198)
;; End of basic block 16 -> ( 17 22)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  17 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  22 [9.0%]  (can_fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 4 [si] 17 [flags] 37 [r8] 42 [r13]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 4 [si] 37 [r8] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  16 [91.0%]  (fallthru,can_fallthru)
(note 165 164 166 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 166 165 168 17 NOTE_INSN_DELETED)

(note 168 166 167 17 NOTE_INSN_DELETED)

(insn:TI 167 168 301 17 (parallel [
            (set (reg:DI 42 r13 [218])
                (zero_extend:DI (plus:SI (reg/v:SI 42 r13 [orig:172 rows ] [172])
                        (const_int -1 [0xffffffffffffffff]))))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:549 254 {*addsi_1_zext}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 301 167 169 17 (parallel [
            (set (reg:DI 4 si [orig:65 ivtmp.792 ] [65])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:549 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 169 301 188 17 (set (reg:DI 37 r8 [orig:67 D.8524 ] [67])
        (plus:DI (mult:DI (reg:DI 42 r13 [218])
                (const_int 4 [0x4]))
            (const_int 4 [0x4]))) ../src/izp-gaussian.c:549 249 {*lea_1}
     (expr_list:REG_DEAD (reg:DI 42 r13 [218])
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]


;; Succ edge  18 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 21 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  21 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  17 [100.0%]  (fallthru,can_fallthru)
(code_label 188 169 189 18 56 "" [1 uses])

(note 189 188 190 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(debug_insn 190 189 192 18 (var_location:SI j (const_int 0 [0])) -1
     (nil))

(insn:TI 192 190 193 18 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 3 bx [orig:171 cols ] [171])
            (const_int 0 [0]))) ../src/izp-gaussian.c:556 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 193 192 194 18 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 191)
            (pc))) ../src/izp-gaussian.c:556 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 191)
;; End of basic block 18 -> ( 19 21)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]


;; Succ edge  19 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  21 [9.0%]  (can_fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  18 [91.0%]  (fallthru,can_fallthru)
(note 194 193 195 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:TI 195 194 300 19 (set (reg/f:DI 5 di [orig:121 pretmp.724 ] [121])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 4 si [orig:65 ivtmp.792 ] [65])
                    (const_int 2 [0x2]))
                (reg/v/f:DI 41 r12 [orig:170 image ] [170])) [2 MEM[base: image_17(D), index: ivtmp.792_70, step: 2, offset: 0B]+0 S8 A64])) ../src/izp-gaussian.c:556 62 {*movdi_internal_rex64}
     (nil))

(insn 300 195 179 19 (parallel [
            (set (reg:DI 0 ax [orig:94 ivtmp.783 ] [94])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:556 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 19 -> ( 20)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]


;; Succ edge  20 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 20 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  20 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  19 [100.0%]  (fallthru,can_fallthru)
(code_label 179 300 172 20 57 "" [1 uses])

(note 172 179 173 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:TI 173 172 174 20 (set (reg:SF 2 cx [orig:78 D.6960 ] [78])
        (mem:SF (plus:DI (mult:DI (reg:DI 0 ax [orig:94 ivtmp.783 ] [94])
                    (const_int 4 [0x4]))
                (reg/f:DI 5 di [orig:121 pretmp.724 ] [121])) [3 MEM[base: pretmp.724_90, index: ivtmp.783_111, step: 4, offset: 0B]+0 S4 A32])) ../src/izp-gaussian.c:557 110 {*movsf_internal}
     (expr_list:REG_EQUIV (mem:SF (plus:DI (mult:DI (reg:DI 0 ax [orig:94 ivtmp.783 ] [94])
                    (const_int 4 [0x4]))
                (reg/f:DI 5 di [orig:121 pretmp.724 ] [121])) [3 MEM[base: pretmp.724_90, index: ivtmp.783_111, step: 4, offset: 0B]+0 S4 A32])
        (nil)))

(insn:TI 174 173 178 20 (set (reg/f:DI 1 dx [orig:220 MEM[base: extImage_56, index: ivtmp.783_111, step: 8, offset: 0B] ] [220])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:94 ivtmp.783 ] [94])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 43 r14 [orig:86 extImage ] [86])) [2 MEM[base: extImage_56, index: ivtmp.783_111, step: 8, offset: 0B]+0 S8 A64])) ../src/izp-gaussian.c:557 62 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:94 ivtmp.783 ] [94])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 43 r14 [orig:86 extImage ] [86])) [2 MEM[base: extImage_56, index: ivtmp.783_111, step: 8, offset: 0B]+0 S8 A64])
        (nil)))

(insn 178 174 180 20 (parallel [
            (set (reg:DI 0 ax [orig:94 ivtmp.783 ] [94])
                (plus:DI (reg:DI 0 ax [orig:94 ivtmp.783 ] [94])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:557 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 180 178 175 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 3 bx [orig:171 cols ] [171])
            (reg:SI 0 ax [orig:94 ivtmp.783 ] [94]))) ../src/izp-gaussian.c:556 6 {*cmpsi_1}
     (nil))

(insn:TI 175 180 177 20 (set (mem:SF (plus:DI (reg/f:DI 1 dx [orig:220 MEM[base: extImage_56, index: ivtmp.783_111, step: 8, offset: 0B] ] [220])
                (reg:DI 4 si [orig:65 ivtmp.792 ] [65])) [3 *D.6954_14+0 S4 A32])
        (reg:SF 2 cx [orig:78 D.6960 ] [78])) ../src/izp-gaussian.c:557 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 2 cx [orig:78 D.6960 ] [78])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:220 MEM[base: extImage_56, index: ivtmp.783_111, step: 8, offset: 0B] ] [220])
            (nil))))

(debug_insn 177 175 181 20 (var_location:SI j (debug_expr:SI D#9)) -1
     (nil))

(jump_insn 181 177 191 20 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 179)
            (pc))) ../src/izp-gaussian.c:556 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 179)
;; End of basic block 20 -> ( 20 21)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]


;; Succ edge  20 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  21 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 20 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  gen 	 4 [si] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  20 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  18 [9.0%]  (can_fallthru)
(code_label 191 181 182 21 58 "" [1 uses])

(note 182 191 184 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(debug_insn 184 182 185 21 (var_location:SI i (debug_expr:SI D#10)) -1
     (nil))

(insn:TI 185 184 186 21 (parallel [
            (set (reg:DI 4 si [orig:65 ivtmp.792 ] [65])
                (plus:DI (reg:DI 4 si [orig:65 ivtmp.792 ] [65])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:556 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 186 185 187 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 4 si [orig:65 ivtmp.792 ] [65])
            (reg:DI 37 r8 [orig:67 D.8524 ] [67]))) ../src/izp-gaussian.c:555 7 {*cmpdi_1}
     (nil))

(jump_insn:TI 187 186 198 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 188)
            (pc))) ../src/izp-gaussian.c:555 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 188)
;; End of basic block 21 -> ( 18 22)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 43 [r14]


;; Succ edge  18 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  22 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 21 16) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 7 [sp] 20 [frame] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	

;; Pred edge  21 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  16 [9.0%]  (can_fallthru)
(code_label 198 187 199 22 55 "" [1 uses])

(note 199 198 312 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 312 199 293 22 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 293 312 204 22 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:562 52 {*popdi1}
     (nil))

(insn 204 293 207 22 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 43 r14 [orig:86 extImage ] [86])) ../src/izp-gaussian.c:562 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:86 extImage ] [86])
        (nil)))

(insn 207 204 294 22 (use (reg/i:DI 0 ax)) ../src/izp-gaussian.c:562 -1
     (nil))

(insn:TI 294 207 295 22 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:562 52 {*popdi1}
     (nil))

(insn:TI 295 294 296 22 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:562 52 {*popdi1}
     (nil))

(insn:TI 296 295 297 22 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:562 52 {*popdi1}
     (nil))

(insn/f:TI 297 296 298 22 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:562 52 {*popdi1}
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))

(jump_insn:TI 298 297 299 22 (return) ../src/izp-gaussian.c:562 634 {return_internal}
     (nil))
;; End of basic block 22 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 299 298 149)

;; Start of basic block ( 3 2) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  3 [4.3%]  (can_fallthru)
;; Pred edge  2 [4.3%]  (can_fallthru)
(code_label 149 299 150 23 46 "" [2 uses])

(note 150 149 151 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(debug_insn 151 150 152 23 (var_location:DI __stream (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2ae34564c320 stderr>) [2 stderr+0 S8 A64])) ../src/izp-gaussian.c:593 -1
     (nil))

(debug_insn 152 151 155 23 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ae345ba6dc0 *.LC4>)) ../src/izp-gaussian.c:593 -1
     (nil))

(insn:TI 155 152 153 23 (set (reg:DI 5 di)
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2ae34564c320 stderr>) [2 stderr+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (nil))

(insn 153 155 302 23 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ae345ba6dc0 *.LC4>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (nil))

(insn 302 153 154 23 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 154 302 303 23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 64 {*movsi_internal}
     (nil))

(insn 303 154 157 23 (parallel [
            (set (reg/v/f:DI 43 r14 [orig:86 extImage ] [86])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 157 303 308 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2ae34567a300 __fprintf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(jump_insn 308 157 309 23 (set (pc)
        (label_ref 158)) 606 {jump}
     (nil)
 -> 158)
;; End of basic block 23 -> ( 16)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  16 [100.0%]  (can_fallthru)

(barrier 309 308 213)

;; Start of basic block ( 5) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]

;; Pred edge  5 (can_fallthru)
(code_label 213 309 212 24 59 "" [1 uses])

(note 212 213 305 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:TI 305 212 310 24 (parallel [
            (set (reg:DI 2 cx [orig:147 i ] [147])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:549 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 310 305 311 24 (set (pc)
        (label_ref 69)) 606 {jump}
     (nil)
 -> 69)
;; End of basic block 24 -> ( 8)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  8 [100.0%]  (can_fallthru)

(barrier 311 310 252)

(note 252 311 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function izp_toUintArray (izp_toUintArray)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 47 count 47 (  1.5)


izp_toUintArray

Dataflow summary:
def_info->table_size = 323, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 45[xmm8]
;;  ref usage 	r0={13d,21u,1e} r1={23d,26u,2e} r2={10d,16u,1e} r3={3d,12u} r4={23d,23u} r5={13d,12u} r6={3d,32u} r7={11d,44u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={58d,21u} r18={3d} r19={3d} r20={1d,1u} r21={23d,22u,2e} r22={19d,17u} r23={6d,4u} r24={5d,2u} r25={5d,2u} r26={11d,7u} r27={6d,2u} r28={5d,1u} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={7d,7u} r38={7d,6u} r39={8d,5u} r40={4d,1u} r41={3d,14u} r42={3d,3u} r43={4d,11u} r45={4d,1u} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r248={1e} 
;;    total ref usage 673{353d,313u,7e} in 212{209 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 0 )->[2]->( 28 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 2 )->[3]->( 4 28 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 3 )->[4]->( 5 15 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 4 )->[5]->( 6 29 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 5 )->[6]->( 7 15 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 7 29 )->[8]->( 9 13 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]

( 11 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; lr  use 	 6 [bp] 7 [sp] 27 [xmm6]
;; lr  def 	 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  gen 	 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]

( 10 9 )->[11]->( 10 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 45 [xmm8]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]

( 11 )->[12]->( 13 15 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 12 8 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 14 13 )->[14]->( 14 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 14 4 6 12 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 1 [dx]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 15 28 )->[16]->( 17 27 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags] 37 [r8]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

( 16 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags] 22 [xmm1] 38 [r9]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di] 22 [xmm1] 38 [r9]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

( 17 26 )->[18]->( 19 26 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

( 18 )->[19]->( 30 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13] 43 [r14]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

( 19 )->[20]->( 21 30 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 39 [r10]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 39 [r10]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

( 20 )->[21]->( 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

( 22 21 )->[22]->( 22 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

( 22 )->[23]->( 24 26 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 38 [r9]
;; lr  def 	 17 [flags] 39 [r10]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags] 39 [r10]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]

( 23 30 )->[24]->( 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 39 [r10]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]

( 25 24 )->[25]->( 25 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]

( 25 18 23 )->[26]->( 18 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  def 	 17 [flags] 37 [r8]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

( 16 26 )->[27]->( 1 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 7 [sp] 20 [frame] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 3 2 )->[28]->( 16 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 5 )->[29]->( 8 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 20 19 )->[30]->( 24 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 39 [r10]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 39 [r10]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]

( 27 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(20){ }u-1(41){ }u-1(42){ }u-1(43){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 45 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 32 to worklist
  Adding insn 29 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 380 to worklist
  Adding insn 378 to worklist
  Adding insn 377 to worklist
  Adding insn 376 to worklist
  Adding insn 375 to worklist
  Adding insn 374 to worklist
  Adding insn 372 to worklist
  Adding insn 49 to worklist
  Adding insn 53 to worklist
  Adding insn 51 to worklist
  Adding insn 65 to worklist
  Adding insn 71 to worklist
  Adding insn 69 to worklist
  Adding insn 67 to worklist
  Adding insn 78 to worklist
  Adding insn 400 to worklist
  Adding insn 116 to worklist
  Adding insn 111 to worklist
  Adding insn 109 to worklist
  Adding insn 104 to worklist
  Adding insn 120 to worklist
  Adding insn 141 to worklist
  Adding insn 136 to worklist
  Adding insn 133 to worklist
  Adding insn 149 to worklist
  Adding insn 167 to worklist
  Adding insn 165 to worklist
  Adding insn 163 to worklist
  Adding insn 219 to worklist
  Adding insn 216 to worklist
  Adding insn 230 to worklist
  Adding insn 243 to worklist
  Adding insn 185 to worklist
  Adding insn 180 to worklist
  Adding insn 178 to worklist
  Adding insn 189 to worklist
  Adding insn 205 to worklist
  Adding insn 200 to worklist
  Adding insn 198 to worklist
  Adding insn 213 to worklist
  Adding insn 210 to worklist
  Adding insn 387 to worklist
  Adding insn 256 to worklist
  Adding insn 402 to worklist
  Adding insn 160 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 404 to worklist
  Adding insn 406 to worklist
Finished finding needed instructions:
processing block 27 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 386 to worklist
  Adding insn 385 to worklist
  Adding insn 384 to worklist
  Adding insn 383 to worklist
  Adding insn 382 to worklist
  Adding insn 253 to worklist
processing block 26 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 212 to worklist
  Adding insn 211 to worklist
processing block 25 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 204 to worklist
  Adding insn 365 to worklist
  Adding insn 201 to worklist
  Adding insn 392 to worklist
  Adding insn 391 to worklist
processing block 24 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 195 to worklist
  Adding insn 194 to worklist
  Adding insn 193 to worklist
  Adding insn 282 to worklist
  Adding insn 393 to worklist
processing block 30 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 394 to worklist
processing block 23 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 188 to worklist
  Adding insn 300 to worklist
processing block 22 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 184 to worklist
  Adding insn 182 to worklist
  Adding insn 181 to worklist
  Adding insn 176 to worklist
  Adding insn 174 to worklist
  Adding insn 173 to worklist
  Adding insn 359 to worklist
processing block 21 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 390 to worklist
  Adding insn 389 to worklist
processing block 20 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 242 to worklist
  Adding insn 363 to worklist
  Adding insn 238 to worklist
  Adding insn 237 to worklist
  Adding insn 362 to worklist
  Adding insn 235 to worklist
  Adding insn 234 to worklist
  Adding insn 361 to worklist
  Adding insn 232 to worklist
  Adding insn 231 to worklist
processing block 19 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 229 to worklist
  Adding insn 222 to worklist
  Adding insn 221 to worklist
processing block 18 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 218 to worklist
processing block 17 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 172 to worklist
  Adding insn 364 to worklist
  Adding insn 224 to worklist
  Adding insn 360 to worklist
processing block 16 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 166 to worklist
  Adding insn 395 to worklist
processing block 28 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 397 to worklist
  Adding insn 396 to worklist
  Adding insn 158 to worklist
  Adding insn 157 to worklist
  Adding insn 156 to worklist
processing block 10 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
  Adding insn 11 to worklist
processing block 15 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 148 to worklist
processing block 14 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 140 to worklist
  Adding insn 138 to worklist
  Adding insn 137 to worklist
  Adding insn 134 to worklist
processing block 13 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 131 to worklist
  Adding insn 129 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 358 to worklist
  Adding insn 124 to worklist
  Adding insn 366 to worklist
processing block 12 lr out =  0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 119 to worklist
  Adding insn 118 to worklist
processing block 11 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
  Adding insn 115 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 103 to worklist
  Adding insn 102 to worklist
  Adding insn 356 to worklist
  Adding insn 101 to worklist
  Adding insn 355 to worklist
  Adding insn 333 to worklist
  Adding insn 332 to worklist
  Adding insn 331 to worklist
  Adding insn 330 to worklist
  Adding insn 329 to worklist
  Adding insn 353 to worklist
  Adding insn 328 to worklist
  Adding insn 327 to worklist
  Adding insn 351 to worklist
  Adding insn 326 to worklist
  Adding insn 325 to worklist
  Adding insn 324 to worklist
  Adding insn 323 to worklist
  Adding insn 322 to worklist
  Adding insn 321 to worklist
  Adding insn 349 to worklist
  Adding insn 320 to worklist
  Adding insn 347 to worklist
  Adding insn 95 to worklist
  Adding insn 346 to worklist
processing block 9 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
  Adding insn 100 to worklist
  Adding insn 398 to worklist
  Adding insn 93 to worklist
  Adding insn 345 to worklist
  Adding insn 90 to worklist
  Adding insn 344 to worklist
  Adding insn 88 to worklist
  Adding insn 343 to worklist
  Adding insn 283 to worklist
  Adding insn 87 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 342 to worklist
  Adding insn 341 to worklist
  Adding insn 83 to worklist
  Adding insn 340 to worklist
  Adding insn 339 to worklist
  Adding insn 369 to worklist
  Adding insn 368 to worklist
  Adding insn 367 to worklist
processing block 8 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 77 to worklist
  Adding insn 370 to worklist
  Adding insn 75 to worklist
  Adding insn 338 to worklist
  Adding insn 74 to worklist
  Adding insn 337 to worklist
processing block 7 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 9 to worklist
processing block 6 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 70 to worklist
processing block 29 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 399 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 58 to worklist
  Adding insn 336 to worklist
processing block 4 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 52 to worklist
processing block 3 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 48 to worklist
processing block 2 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 44 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 335 to worklist
  Adding insn 30 to worklist
  Adding insn 28 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 371 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 373 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 47 count 37 (  1.2)
deleting insn with uid = 379.
deleting insn with uid = 8.
deleting insn with uid = 42.
deleting insn with uid = 43.
;;   ======================================================
;;   -- basic block 2 from 372 to 45 -- after reload
;;   ======================================================

;;	  0-->   372 [--sp]=bp                         :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   373 bp=sp                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   374 [--sp]=r14                        :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   378 use bp                            :nothing
;;	  2-->   375 [--sp]=r13                        :c2_decodern,(c2_p4+c2_p3)
;;	  3-->   376 [--sp]=r12                        :c2_decodern,(c2_p4+c2_p3)
;;	  4-->   377 [--sp]=bx                         :c2_decodern,(c2_p4+c2_p3)
;;	  5-->   380 unspec/v{0;}                      :c2_decoder0
;;	 11-->     7 r12=dx                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 11-->     6 bx=si                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 11-->    21: debug width => bx                :nothing
;;	 11-->    22: debug height => r12              :nothing
;;	 11-->    23: debug size => 0x4                :nothing
;;	 11-->     5 r13=di                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 12-->   371 si=r12+0x1#0                      :c2_decodern,c2_p0
;;	 12-->    28 di=0x20                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->    25 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->    26 {si=si<<0x3;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	 15-->    29 call <...>                        :c2_decoder0
;;	 15-->   335 si=bx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 15-->    37 di=0x20                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 16-->    33 {si=si*r12;clobber flags;}        :c2_decodern,c2_p1
;;	 16-->    30 r14=ax                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 16-->    32: debug idx => r14                 :nothing
;;	 19-->    34 {si=si<<0x2;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	 20-->    35 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 21-->    38 call <...>                        :c2_decoder0
;;	 21-->    41: debug heap => ax                 :nothing
;;	 22-->    44 flags=cmp(ax,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 23-->    45 pc={(flags==0)?L152:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 23
;;   new head = 372
;;   new tail = 45

;;   ======================================================
;;   -- basic block 3 from 48 to 49 -- after reload
;;   ======================================================

;;	  0-->    48 flags=cmp(r14,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    49 pc={(flags==0)?L152:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 48
;;   new tail = 49

;;   ======================================================
;;   -- basic block 4 from 51 to 53 -- after reload
;;   ======================================================

;;	  0-->    51: debug i => 0                     :nothing
;;	  0-->    52 flags=cmp(r12,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    53 pc={(flags<=0)?L146:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 51
;;   new tail = 53

deleting insn with uid = 59.
;;   ======================================================
;;   -- basic block 5 from 336 to 65 -- after reload
;;   ======================================================

;;	  0-->   336 dx=r14                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    58 {dx=dx<<0x3c;clobber flags;}      :c2_decodern,c2_p0|c2_p5
;;	  2-->    60 {dx=dx 0>>0x3f;clobber flags;}    :c2_decodern,c2_p0|c2_p5
;;	  3-->    61 flags=cmp(dx,r12)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    62 dx={(leu(flags,0))?dx:r12}        :c2_decoder0,(c2_p0|c2_p1|c2_p5)*2
;;	  6-->    64 flags=cmp(dx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    63 si=zxn(dx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->    65 pc={(flags==0)?L262:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 7
;;   new head = 336
;;   new tail = 65

;;   ======================================================
;;   -- basic block 6 from 67 to 71 -- after reload
;;   ======================================================

;;	  0-->    70 flags=cmp(r12,dx)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    67 [r14]=ax                          :c2_decodern,(c2_p4+c2_p3)
;;	  0-->    69: debug i => 0x1                   :nothing
;;	  1-->    71 pc={(flags==0)?L146:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 67
;;   new tail = 71

;;   ======================================================
;;   -- basic block 7 from 9 to 9 -- after reload
;;   ======================================================

;;	  0-->     9 cx=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 9
;;   new tail = 9

;;   ======================================================
;;   -- basic block 8 from 337 to 78 -- after reload
;;   ======================================================

;;	  0-->   337 r9=r12                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    74 {r9=r9-dx;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   338 di=r9                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->    75 {di=di 0>>0x2;clobber flags;}     :c2_decodern,c2_p0|c2_p5
;;	  4-->   370 r8=di*0x4#0                       :c2_decodern,c2_p0
;;	  5-->    77 flags=cmp(r8,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    78 pc={(flags==0)?L121:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 6
;;   new head = 337
;;   new tail = 78

deleting insn with uid = 92.
;;   ======================================================
;;   -- basic block 9 from 367 to 400 -- after reload
;;   ======================================================

;;	  0-->   368 r11=cx+0x2#0                      :c2_decodern,c2_p0
;;	  0-->   100 xmm7=const_vector                 :nothing
;;	  1-->   369 r10=cx+0x3#0                      :c2_decodern,c2_p0
;;	  1-->   339 xmm1=r11                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   367 dx=cx+0x1#0                       :c2_decodern,c2_p0
;;	  2-->   340 xmm0=r10                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->    83 xmm1=vec_concat                   :nothing
;;	  3-->   342 xmm2=dx                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   341 xmm0=cx                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    84 xmm0=vec_concat                   :nothing
;;	  4-->    87 xmm2=[`*.LC3']                    :c2_decodern,c2_p2
;;	  4-->    85 xmm0=vec_concat                   :nothing
;;	  5-->    93 dx=si*0x8+r14                     :c2_decodern,c2_p0
;;	  5-->   343 xmm1=bx                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   398 {si=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    88 xmm4=vec_duplicate                :nothing
;;	  6-->   344 xmm1=ax                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   283 xmm8=xmm2                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->    90 xmm1=vec_duplicate                :nothing
;;	  7-->   345 xmm3=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   400 pc=L114                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 7
;;   new head = 367
;;   new tail = 400

;;   ======================================================
;;   -- basic block 10 from 11 to 11 -- after reload
;;   ======================================================

;;	  0-->    11 xmm0=xmm6                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 11
;;   new tail = 11

;;   ======================================================
;;   -- basic block 11 from 346 to 116 -- after reload
;;   ======================================================

;;	  0-->   347 xmm1=xmm4                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   349 xmm5=xmm4                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   346 xmm6=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   320 xmm1=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	  1-->   112 {si=si+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    95 xmm6=xmm6+xmm8                    :c2_decodern,c2_p0|c2_p5
;;	  2-->   321 xmm5=xmm5 0>>0x20                 :c2_decodern,c2_p1
;;	  3-->   322 xmm0=xmm0 0>>0x20                 :c2_decodern,c2_p1
;;	  4-->   323 xmm0=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	  4-->   353 xmm5=xmm2                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   324 xmm1=vec_select                   :nothing
;;	  5-->   329 xmm5=xmm5 0>>0x20                 :c2_decodern,c2_p1
;;	  7-->   325 xmm0=vec_select                   :nothing
;;	  7-->   326 xmm1=vec_select                   :nothing
;;	  7-->   351 xmm0=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->   328 xmm1=xmm1 0>>0x20                 :c2_decodern,c2_p1
;;	  9-->   330 xmm1=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	 10-->   327 xmm0=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	 12-->   332 xmm1=vec_select                   :nothing
;;	 13-->   331 xmm0=vec_select                   :nothing
;;	 13-->   333 xmm0=vec_select                   :nothing
;;	 13-->   355 xmm1=xmm7                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->   101 xmm1=xmm1>xmm0                    :c2_decodern,c2_p1
;;	 14-->   356 xmm5=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 17-->   102 xmm5=vec_select                   :nothing
;;	 17-->   107 xmm0=vec_select                   :nothing
;;	 17-->   103 xmm5=xmm5+xmm3                    :c2_decodern,c2_p0|c2_p5
;;	 18-->   108 xmm0=xmm0+xmm3                    :c2_decodern,c2_p0|c2_p5
;;	 18-->   104 [dx]=xmm5                         :c2_decodern,(c2_p4+c2_p3)
;;	 19-->   109 [dx+0x10]=xmm0                    :c2_decodern,(c2_p4+c2_p3)
;;	 19-->   111: debug i => D#11                  :nothing
;;	 19-->   113 {dx=dx+0x20;clobber flags;}       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 19-->   115 flags=cmp(si,di)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 20-->   116 pc={(ltu(flags,0))?L266:pc}       :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 20
;;   new head = 346
;;   new tail = 116

;;   ======================================================
;;   -- basic block 12 from 118 to 120 -- after reload
;;   ======================================================

;;	  0-->   118 {cx=cx+r8;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   119 flags=cmp(r9,r8)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   120 pc={(flags==0)?L146:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 118
;;   new tail = 120

deleting insn with uid = 130.
;;   ======================================================
;;   -- basic block 13 from 366 to 131 -- after reload
;;   ======================================================

;;	  0-->   366 di=bx*0x4#0                       :c2_decodern,c2_p0
;;	  0-->   358 si=bx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   129 dx=sxn(cx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   125 {si=si*cx;clobber flags;}         :c2_decodern,c2_p1
;;	  1-->   131 dx=dx*0x8+r14                     :c2_decodern,c2_p0
;;	  1-->   124 di=sxn(di)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   126 {si=si<<0x2;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	  5-->   127 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   128 {si=ax+si;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 6
;;   new head = 366
;;   new tail = 131

;;   ======================================================
;;   -- basic block 14 from 133 to 141 -- after reload
;;   ======================================================

;;	  0-->   134 {cx=cx+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   136: debug i => cx                    :nothing
;;	  0-->   133 [dx]=si                           :c2_decodern,(c2_p4+c2_p3)
;;	  0-->   137 {si=si+di;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   138 {dx=dx+0x8;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   140 flags=cmp(r12,cx)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   141 pc={(flags>0)?L139:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 133
;;   new tail = 141

;;   ======================================================
;;   -- basic block 15 from 148 to 149 -- after reload
;;   ======================================================

;;	  0-->   148 dx=sxn(r12)                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   149 [dx*0x8+r14]=ax                   :c2_decodern,(c2_p4+c2_p3)
;;	Ready list (final):  
;;   total time = 1
;;   new head = 148
;;   new tail = 149

;;   ======================================================
;;   -- basic block 16 from 163 to 167 -- after reload
;;   ======================================================

;;	  0-->   163: debug extImage optimized away    :nothing
;;	  0-->   165: debug i => 0                     :nothing
;;	  0-->   395 {r8=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   166 flags=cmp(r12,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   167 pc={(flags<=0)?L247:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 163
;;   new tail = 167

;;   ======================================================
;;   -- basic block 17 from 360 to 172 -- after reload
;;   ======================================================

;;	  0-->   360 di=bx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   172 xmm1=const_vector                 :nothing
;;	  1-->   224 {di=di 0>>0x2;clobber flags;}     :c2_decodern,c2_p0|c2_p5
;;	  2-->   364 r9=di*0x4#0                       :c2_decodern,c2_p0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 360
;;   new tail = 172

;;   ======================================================
;;   -- basic block 18 from 216 to 219 -- after reload
;;   ======================================================

;;	  0-->   216: debug j => 0                     :nothing
;;	  0-->   218 flags=cmp(bx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   219 pc={(flags<=0)?L217:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 216
;;   new tail = 219

deleting insn with uid = 227.
deleting insn with uid = 228.
;;   ======================================================
;;   -- basic block 19 from 221 to 230 -- after reload
;;   ======================================================

;;	  0-->   229 flags=cmp(r9,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   221 si=[r8*0x8+r14]                   :c2_decodern,c2_p2
;;	  1-->   222 cx=[r8*0x8+r13]                   :c2_decodern,c2_p2
;;	  1-->   230 pc={(flags==0)?L276:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 221
;;   new tail = 230

deleting insn with uid = 240.
deleting insn with uid = 241.
;;   ======================================================
;;   -- basic block 20 from 231 to 243 -- after reload
;;   ======================================================

;;	  0-->   361 ax=si+0x10                        :c2_decodern,c2_p0
;;	  0-->   231 flags=cmp(bx,0x5)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   362 r10=cx+0x10                       :c2_decodern,c2_p0
;;	  1-->   232 dx=gtu(flags,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   234 flags=cmp(cx,ax)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   235 ax=gtu(flags,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   237 flags=cmp(si,r10)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   238 r10=gtu(flags,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   363 {ax=ax|r10;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   242 flags=cmp(dx&ax,0)                :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   243 pc={(flags==0)?L276:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 6
;;   new head = 231
;;   new tail = 243

;;   ======================================================
;;   -- basic block 21 from 389 to 390 -- after reload
;;   ======================================================

;;	  0-->   389 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   390 {dx=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 389
;;   new tail = 390

;;   ======================================================
;;   -- basic block 22 from 359 to 185 -- after reload
;;   ======================================================

;;	  0-->   359 xmm0=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   181 {dx=dx+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   173 xmm0=vec_concat                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   174 xmm0=vec_concat                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   176 xmm0=fix(xmm0)                    :nothing
;;	  3-->   178 [si+ax]=unspec[xmm0] 41           :c2_decodern,(c2_p4+c2_p3)
;;	  3-->   180: debug j => D#12                  :nothing
;;	  3-->   182 {ax=ax+0x10;clobber flags;}       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   184 flags=cmp(di,dx)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   185 pc={(gtu(flags,0))?L183:pc}       :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 5
;;   new head = 359
;;   new tail = 185

;;   ======================================================
;;   -- basic block 23 from 300 to 189 -- after reload
;;   ======================================================

;;	  0-->   188 flags=cmp(bx,r9)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   300 r10=r9                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   189 pc={(flags==0)?L217:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 300
;;   new tail = 189

;;   ======================================================
;;   -- basic block 24 from 393 to 195 -- after reload
;;   ======================================================

;;	  0-->   282 dx=sxn(r10)                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   393 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   193 {dx=dx<<0x2;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	  2-->   194 {si=si+dx;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   195 {cx=cx+dx;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 393
;;   new tail = 195

;;   ======================================================
;;   -- basic block 25 from 391 to 205 -- after reload
;;   ======================================================

;;	  0-->   391 xmm0=[ax*0x4+cx]                  :c2_decodern,c2_p2
;;	  2-->   392 dx=fix(xmm0)                      :c2_decodern,c2_p1
;;	  6-->   198 [ax*0x4+si]=dx                    :c2_decodern,(c2_p4+c2_p3)
;;	  6-->   200: debug j => D#13                  :nothing
;;	  6-->   201 {ax=ax+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   365 dx=r10+ax#0                       :c2_decodern,c2_p0
;;	  8-->   204 flags=cmp(bx,dx)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  9-->   205 pc={(flags>0)?L203:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 9
;;   new head = 391
;;   new tail = 205

;;   ======================================================
;;   -- basic block 26 from 210 to 213 -- after reload
;;   ======================================================

;;	  0-->   210: debug i => D#14                  :nothing
;;	  0-->   211 {r8=r8+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   212 flags=cmp(r12,r8)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   213 pc={(flags>0)?L314:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 210
;;   new tail = 213

deleting insn with uid = 381.
;;   ======================================================
;;   -- basic block 27 from 253 to 387 -- after reload
;;   ======================================================

;;	  0-->   382 bx=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  0-->   253 ax=r14                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   256 use ax                            :nothing
;;	  4-->   383 r12=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  8-->   384 r13=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 12-->   385 r14=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 16-->   386 bp=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 17-->   387 return                            :c2_decoder0
;;	Ready list (final):  
;;   total time = 17
;;   new head = 253
;;   new tail = 387

;;   ======================================================
;;   -- basic block 28 from 154 to 402 -- after reload
;;   ======================================================

;;	  0-->   154: debug __stream => [`stderr']     :nothing
;;	  0-->   155: debug __fmt => `*.LC4'           :nothing
;;	  0-->   158 di=[`stderr']                     :c2_decodern,c2_p2
;;	  0-->   156 dx=`*.LC4'                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   396 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   157 si=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   397 {r14=0;clobber flags;}            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   160 call <...>                        :c2_decoder0
;;	  4-->   402 pc=L161                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 4
;;   new head = 154
;;   new tail = 402

;;   ======================================================
;;   -- basic block 29 from 399 to 404 -- after reload
;;   ======================================================

;;	  0-->   399 {cx=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   404 pc=L72                            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 399
;;   new tail = 404

;;   ======================================================
;;   -- basic block 30 from 394 to 406 -- after reload
;;   ======================================================

;;	  0-->   394 {r10=0;clobber flags;}            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   406 pc=L226                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 394
;;   new tail = 406





izp_toUintArray

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 45[xmm8]
;;  ref usage 	r0={13d,21u,1e} r1={23d,26u,2e} r2={10d,16u,1e} r3={3d,12u} r4={23d,23u} r5={13d,12u} r6={3d,32u} r7={11d,44u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={58d,21u} r18={3d} r19={3d} r20={1d,1u} r21={23d,22u,2e} r22={19d,17u} r23={6d,4u} r24={5d,2u} r25={5d,2u} r26={11d,7u} r27={6d,2u} r28={5d,1u} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={7d,7u} r38={7d,6u} r39={8d,5u} r40={4d,1u} r41={3d,14u} r42={3d,3u} r43={4d,11u} r45={4d,1u} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r248={1e} 
;;    total ref usage 673{353d,313u,7e} in 212{209 regular + 3 call} insns.
(note 4 0 19 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 19 4 8 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 8 19 42 2 NOTE_INSN_FUNCTION_BEG)

(note 42 8 43 2 NOTE_INSN_DELETED)

(note 43 42 372 2 NOTE_INSN_DELETED)

(insn/f:TI 372 43 373 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg/f:DI 6 bp)) ../src/izp-gaussian.c:565 42 {*pushdi2_rex64}
     (nil))

(insn/f:TI 373 372 374 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) ../src/izp-gaussian.c:565 62 {*movdi_internal_rex64}
     (nil))

(insn/f 374 373 378 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 43 r14)) ../src/izp-gaussian.c:565 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn 378 374 375 2 (use (reg/f:DI 6 bp)) ../src/izp-gaussian.c:565 -1
     (nil))

(insn/f:TI 375 378 376 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 42 r13)) ../src/izp-gaussian.c:565 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f:TI 376 375 377 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) ../src/izp-gaussian.c:565 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f:TI 377 376 379 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) ../src/izp-gaussian.c:565 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(note 379 377 380 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 380 379 7 2 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) ../src/izp-gaussian.c:565 631 {blockage}
     (nil))

(insn:TI 7 380 6 2 (set (reg/v:SI 41 r12 [orig:197 rows ] [197])
        (reg:SI 1 dx [ rows ])) ../src/izp-gaussian.c:565 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ rows ])
        (nil)))

(insn 6 7 21 2 (set (reg/v:SI 3 bx [orig:196 cols ] [196])
        (reg:SI 4 si [ cols ])) ../src/izp-gaussian.c:565 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ cols ])
        (nil)))

(debug_insn 21 6 22 2 (var_location:SI width (reg/v:SI 3 bx [orig:196 cols ] [196])) -1
     (nil))

(debug_insn 22 21 23 2 (var_location:SI height (reg/v:SI 41 r12 [orig:197 rows ] [197])) -1
     (nil))

(debug_insn 23 22 5 2 (var_location:SI size (const_int 4 [0x4])) -1
     (nil))

(insn 5 23 371 2 (set (reg/v/f:DI 42 r13 [orig:195 image ] [195])
        (reg:DI 5 di [ image ])) ../src/izp-gaussian.c:565 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ image ])
        (nil)))

(insn:TI 371 5 28 2 (set (reg:SI 4 si [198])
        (subreg:SI (plus:DI (reg:DI 41 r12 [orig:197 rows ] [197])
                (const_int 1 [0x1])) 0)) ../src/izp-gaussian.c:583 250 {*lea_2}
     (nil))

(insn 28 371 25 2 (set (reg:DI 5 di)
        (const_int 32 [0x20])) ../src/izp-gaussian.c:583 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 25 28 26 2 (set (reg:DI 4 si [199])
        (sign_extend:DI (reg:SI 4 si [198]))) ../src/izp-gaussian.c:583 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 26 25 29 2 (parallel [
            (set (reg:DI 4 si [200])
                (ashift:DI (reg:DI 4 si [199])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:583 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 29 26 335 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memalign") [flags 0x41]  <function_decl 0x2ae3457b0b00 memalign>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:583 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 335 29 37 2 (set (reg:SI 4 si [202])
        (reg/v:SI 3 bx [orig:196 cols ] [196])) ../src/izp-gaussian.c:584 64 {*movsi_internal}
     (nil))

(insn 37 335 33 2 (set (reg:DI 5 di)
        (const_int 32 [0x20])) ../src/izp-gaussian.c:584 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 33 37 30 2 (parallel [
            (set (reg:SI 4 si [202])
                (mult:SI (reg:SI 4 si [202])
                    (reg/v:SI 41 r12 [orig:197 rows ] [197])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:584 333 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 30 33 32 2 (set (reg/v/f:DI 43 r14 [orig:81 extImage ] [81])
        (reg:DI 0 ax)) ../src/izp-gaussian.c:583 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 201)
            (nil))))

(debug_insn 32 30 34 2 (var_location:DI idx (reg/v/f:DI 43 r14 [orig:81 extImage ] [81])) ../src/izp-gaussian.c:583 -1
     (nil))

(insn:TI 34 32 35 2 (parallel [
            (set (reg:SI 4 si [203])
                (ashift:SI (reg:SI 4 si [202])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:584 497 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 35 34 38 2 (set (reg:DI 4 si [204])
        (sign_extend:DI (reg:SI 4 si [203]))) ../src/izp-gaussian.c:584 126 {*extendsidi2_rex64}
     (nil))

(call_insn:TI 38 35 41 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memalign") [flags 0x41]  <function_decl 0x2ae3457b0b00 memalign>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:584 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(debug_insn 41 38 44 2 (var_location:DI heap (reg/v/f:DI 0 ax [orig:85 heap ] [85])) ../src/izp-gaussian.c:584 -1
     (nil))

(insn:TI 44 41 45 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:85 heap ] [85])
            (const_int 0 [0]))) ../src/izp-gaussian.c:586 3 {*cmpdi_ccno_1}
     (nil))

(jump_insn:TI 45 44 277 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) ../src/izp-gaussian.c:586 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 434 [0x1b2])
            (nil)))
 -> 152)
;; End of basic block 2 -> ( 28 3)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  28 [4.3%]  (can_fallthru)
;; Succ edge  3 [95.7%]  (fallthru,can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  2 [95.7%]  (fallthru,can_fallthru)
(note 277 45 46 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 46 277 47 3 NOTE_INSN_DELETED)

(note 47 46 48 3 NOTE_INSN_DELETED)

(insn:TI 48 47 49 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 43 r14 [orig:81 extImage ] [81])
            (const_int 0 [0]))) ../src/izp-gaussian.c:586 3 {*cmpdi_ccno_1}
     (nil))

(jump_insn:TI 49 48 50 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) ../src/izp-gaussian.c:586 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 434 [0x1b2])
            (nil)))
 -> 152)
;; End of basic block 3 -> ( 4 28)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  4 [95.7%]  (fallthru,can_fallthru)
;; Succ edge  28 [4.3%]  (can_fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  3 [95.7%]  (fallthru,can_fallthru)
(note 50 49 51 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(debug_insn 51 50 52 4 (var_location:SI i (const_int 0 [0])) -1
     (nil))

(insn:TI 52 51 53 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 41 r12 [orig:197 rows ] [197])
            (const_int 0 [0]))) ../src/izp-gaussian.c:587 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 53 52 54 4 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) ../src/izp-gaussian.c:587 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 146)
;; End of basic block 4 -> ( 5 15)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  5 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  15 [9.0%]  (can_fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  4 [91.0%]  (fallthru,can_fallthru)
(note 54 53 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 57 54 59 5 NOTE_INSN_DELETED)

(note 59 57 336 5 NOTE_INSN_DELETED)

(insn:TI 336 59 58 5 (set (reg:DI 1 dx [211])
        (reg/v/f:DI 43 r14 [orig:81 extImage ] [81])) ../src/izp-gaussian.c:564 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 58 336 60 5 (parallel [
            (set (reg:DI 1 dx [211])
                (ashift:DI (reg:DI 1 dx [211])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 60 58 61 5 (parallel [
            (set (reg:DI 1 dx [213])
                (lshiftrt:DI (reg:DI 1 dx [211])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 533 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 61 60 62 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [213])
            (reg/v:SI 41 r12 [orig:197 rows ] [197]))) ../src/izp-gaussian.c:564 6 {*cmpsi_1}
     (nil))

(insn:TI 62 61 64 5 (set (reg:SI 1 dx [orig:158 prolog_loop_niters.868 ] [158])
        (if_then_else:SI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:SI 1 dx [213])
            (reg/v:SI 41 r12 [orig:197 rows ] [197]))) ../src/izp-gaussian.c:564 885 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn:TI 64 62 63 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:158 prolog_loop_niters.868 ] [158])
            (const_int 0 [0]))) ../src/izp-gaussian.c:564 2 {*cmpsi_ccno_1}
     (nil))

(insn 63 64 65 5 (set (reg:DI 4 si [orig:159 prolog_loop_niters.869 ] [159])
        (zero_extend:DI (reg:SI 1 dx [orig:158 prolog_loop_niters.868 ] [158]))) ../src/izp-gaussian.c:564 114 {*zero_extendsidi2_rex64}
     (nil))

(jump_insn:TI 65 63 66 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 262)
            (pc))) ../src/izp-gaussian.c:564 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 262)
;; End of basic block 5 -> ( 6 29)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  6 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  29 (can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru,can_fallthru)
(note 66 65 70 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 70 66 67 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 41 r12 [orig:197 rows ] [197])
            (reg:SI 1 dx [orig:158 prolog_loop_niters.868 ] [158]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (nil))

(insn 67 70 69 6 (set (mem/f:DI (reg/v/f:DI 43 r14 [orig:81 extImage ] [81]) [2 MEM[base: D.8736_24, offset: 0B]+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:85 heap ] [85])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(debug_insn 69 67 71 6 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))

(jump_insn:TI 71 69 258 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 146)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 146)
;; End of basic block 6 -> ( 7 15)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  7 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  15 (can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru,can_fallthru)
(note 258 71 9 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 9 258 72 7 (set (reg/v:SI 2 cx [orig:170 i ] [170])
        (const_int 1 [0x1])) ../src/izp-gaussian.c:587 64 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  8 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 7 29) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]

;; Pred edge  7 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  29 [100.0%]  (can_fallthru)
(code_label 72 9 73 8 66 "" [1 uses])

(note 73 72 337 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 337 73 74 8 (set (reg:SI 38 r9 [orig:167 niters.872 ] [167])
        (reg/v:SI 41 r12 [orig:197 rows ] [197])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 74 337 338 8 (parallel [
            (set (reg:SI 38 r9 [orig:167 niters.872 ] [167])
                (minus:SI (reg:SI 38 r9 [orig:167 niters.872 ] [167])
                    (reg:SI 1 dx [orig:158 prolog_loop_niters.868 ] [158])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 291 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:158 prolog_loop_niters.868 ] [158])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 338 74 75 8 (set (reg:SI 5 di [orig:168 bnd.873 ] [168])
        (reg:SI 38 r9 [orig:167 niters.872 ] [167])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 75 338 370 8 (parallel [
            (set (reg:SI 5 di [orig:168 bnd.873 ] [168])
                (lshiftrt:SI (reg:SI 5 di [orig:168 bnd.873 ] [168])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 531 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 370 75 77 8 (set (reg:SI 37 r8 [orig:169 ratio_mult_vf.874 ] [169])
        (subreg:SI (mult:DI (reg:DI 5 di [orig:168 bnd.873 ] [168])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn:TI 77 370 78 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 37 r8 [orig:169 ratio_mult_vf.874 ] [169])
            (const_int 0 [0]))) ../src/izp-gaussian.c:588 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 78 77 79 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 121)
;; End of basic block 8 -> ( 9 13)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  9 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  13 (can_fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  kill	 17 [flags]

;; Pred edge  8 [100.0%]  (fallthru,can_fallthru)
(note 79 78 92 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 92 79 368 9 NOTE_INSN_DELETED)

(insn:TI 368 92 100 9 (set (reg:SI 40 r11 [216])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:170 i ] [170])
                (const_int 2 [0x2])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 100 368 369 9 (set (reg:V4SI 28 xmm7 [275])
        (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])
        (nil)))

(insn:TI 369 100 339 9 (set (reg:SI 39 r10 [217])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:170 i ] [170])
                (const_int 3 [0x3])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 339 369 367 9 (set (reg:SI 22 xmm1)
        (reg:SI 40 r11 [216])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 40 r11 [216])
        (nil)))

(insn:TI 367 339 340 9 (set (reg:SI 1 dx [215])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:170 i ] [170])
                (const_int 1 [0x1])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 340 367 83 9 (set (reg:SI 21 xmm0)
        (reg:SI 39 r10 [217])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 39 r10 [217])
        (nil)))

(insn:TI 83 340 342 9 (set (reg:V2SI 22 xmm1 [218])
        (vec_concat:V2SI (reg:SI 22 xmm1)
            (reg:SI 21 xmm0))) ../src/izp-gaussian.c:588 1791 {*vec_concatv2si_sse2}
     (expr_list:REG_DEAD (reg:SI 21 xmm0)
        (nil)))

(insn 342 83 341 9 (set (reg:SI 23 xmm2)
        (reg:SI 1 dx [215])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [215])
        (nil)))

(insn 341 342 84 9 (set (reg:SI 21 xmm0)
        (reg/v:SI 2 cx [orig:170 i ] [170])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 84 341 87 9 (set (reg:V2SI 21 xmm0 [219])
        (vec_concat:V2SI (reg:SI 21 xmm0)
            (reg:SI 23 xmm2))) ../src/izp-gaussian.c:588 1791 {*vec_concatv2si_sse2}
     (expr_list:REG_DEAD (reg:SI 23 xmm2)
        (nil)))

(insn 87 84 85 9 (set (reg:V4SI 23 xmm2 [265])
        (mem/u/c/i:V4SI (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5 S16 A128])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
            ])
        (nil)))

(insn 85 87 93 9 (set (reg:V4SI 21 xmm0 [orig:180 vect_vec_iv_.879 ] [180])
        (vec_concat:V4SI (reg:V2SI 21 xmm0 [219])
            (reg:V2SI 22 xmm1 [218]))) ../src/izp-gaussian.c:588 1794 {*vec_concatv4si_1}
     (expr_list:REG_DEAD (reg:V2SI 22 xmm1 [218])
        (nil)))

(insn:TI 93 85 343 9 (set (reg:DI 1 dx [orig:115 ivtmp.932 ] [115])
        (plus:DI (mult:DI (reg:DI 4 si [orig:159 prolog_loop_niters.869 ] [159])
                (const_int 8 [0x8]))
            (reg/v/f:DI 43 r14 [orig:81 extImage ] [81]))) ../src/izp-gaussian.c:588 249 {*lea_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:159 prolog_loop_niters.869 ] [159])
        (nil)))

(insn 343 93 398 9 (set (reg:SI 22 xmm1)
        (reg/v:SI 3 bx [orig:196 cols ] [196])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn 398 343 88 9 (parallel [
            (set (reg:DI 4 si [orig:96 ivtmp.930 ] [96])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 88 398 344 9 (set (reg:V4SI 25 xmm4 [orig:183 vect_cst_.881 ] [183])
        (vec_duplicate:V4SI (reg:SI 22 xmm1))) ../src/izp-gaussian.c:588 1785 {*vec_dupv4si}
     (expr_list:REG_DEAD (reg:SI 22 xmm1)
        (nil)))

(insn 344 88 283 9 (set (reg:DI 22 xmm1)
        (reg/v/f:DI 0 ax [orig:85 heap ] [85])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(insn 283 344 90 9 (set (reg:V4SI 45 xmm8 [orig:181 vect_cst_.878 ] [181])
        (reg:V4SI 23 xmm2 [265])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
            ])
        (nil)))

(insn:TI 90 283 345 9 (set (reg:V2DI 22 xmm1)
        (vec_duplicate:V2DI (reg:DI 22 xmm1))) ../src/izp-gaussian.c:588 1787 {*vec_dupv2di_sse3}
     (nil))

(insn 345 90 400 9 (set (reg:V2DI 24 xmm3 [orig:188 vect_cst_.886 ] [188])
        (reg:V2DI 22 xmm1)) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1)
        (nil)))

(jump_insn 400 345 401 9 (set (pc)
        (label_ref 114)) 606 {jump}
     (nil)
 -> 114)
;; End of basic block 9 -> ( 11)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]


;; Succ edge  11 [100.0%]  (can_fallthru)

(barrier 401 400 266)

;; Start of basic block ( 11) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; lr  use 	 6 [bp] 7 [sp] 27 [xmm6]
;; lr  def 	 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  gen 	 21 [xmm0]
;; live  kill	

;; Pred edge  11 [91.0%]  (can_fallthru)
(code_label 266 401 265 10 81 "" [1 uses])

(note 265 266 11 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 11 265 114 10 (set (reg:V4SI 21 xmm0 [orig:180 vect_vec_iv_.879 ] [180])
        (reg:V4SI 27 xmm6 [orig:182 vect_vec_iv_.879 ] [182])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 27 xmm6 [orig:182 vect_vec_iv_.879 ] [182])
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]


;; Succ edge  11 [100.0%]  (fallthru,dfs_back,can_fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 45 [xmm8]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  kill	 17 [flags]

;; Pred edge  10 [100.0%]  (fallthru,dfs_back,can_fallthru)
;; Pred edge  9 [100.0%]  (can_fallthru)
(code_label 114 11 94 11 69 "" [1 uses])

(note 94 114 347 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 347 94 349 11 (set (reg:V4SI 22 xmm1)
        (reg:V4SI 25 xmm4 [orig:183 vect_cst_.881 ] [183])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn 349 347 346 11 (set (reg:V1TI 26 xmm5)
        (reg:V1TI 25 xmm4)) ../src/izp-gaussian.c:588 1125 {*movv1ti_internal}
     (nil))

(insn 346 349 320 11 (set (reg:V4SI 27 xmm6 [orig:182 vect_vec_iv_.879 ] [182])
        (reg:V4SI 21 xmm0 [orig:180 vect_vec_iv_.879 ] [180])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 320 346 112 11 (set (reg:V2DI 22 xmm1)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [orig:180 vect_vec_iv_.879 ] [180])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (nil))

(insn 112 320 95 11 (parallel [
            (set (reg:SI 4 si [orig:96 ivtmp.930 ] [96])
                (plus:SI (reg:SI 4 si [orig:96 ivtmp.930 ] [96])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 95 112 321 11 (set (reg:V4SI 27 xmm6 [orig:182 vect_vec_iv_.879 ] [182])
        (plus:V4SI (reg:V4SI 27 xmm6 [orig:182 vect_vec_iv_.879 ] [182])
            (reg:V4SI 45 xmm8 [orig:181 vect_cst_.878 ] [181]))) ../src/izp-gaussian.c:588 1570 {*addv4si3}
     (expr_list:REG_EQUAL (plus:V4SI (reg:V4SI 21 xmm0 [orig:180 vect_vec_iv_.879 ] [180])
            (const_vector:V4SI [
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                ]))
        (nil)))

(insn:TI 321 95 322 11 (set (reg:V1TI 26 xmm5)
        (lshiftrt:V1TI (reg:V1TI 26 xmm5)
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 322 321 323 11 (set (reg:V1TI 21 xmm0 [278])
        (lshiftrt:V1TI (reg:V1TI 21 xmm0 [orig:180 vect_vec_iv_.879 ] [180])
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 323 322 353 11 (set (reg:V2DI 21 xmm0 [279])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [278])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 26 xmm5 [277])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (expr_list:REG_DEAD (reg:V4SI 26 xmm5 [277])
        (nil)))

(insn 353 323 324 11 (set (reg:V1TI 26 xmm5)
        (reg:V1TI 23 xmm2)) ../src/izp-gaussian.c:588 1125 {*movv1ti_internal}
     (nil))

(insn 324 353 329 11 (set (reg:V4SI 22 xmm1 [280])
        (vec_select:V4SI (reg:V4SI 22 xmm1 [276])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn:TI 329 324 325 11 (set (reg:V1TI 26 xmm5)
        (lshiftrt:V1TI (reg:V1TI 26 xmm5)
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 325 329 326 11 (set (reg:V4SI 21 xmm0 [281])
        (vec_select:V4SI (reg:V4SI 21 xmm0 [279])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn 326 325 351 11 (set (reg:V4SI 22 xmm1 [223])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 22 xmm1 [280])
                (reg:V4SI 21 xmm0 [281]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 21 xmm0 [281])
        (nil)))

(insn 351 326 328 11 (set (reg:V4SI 21 xmm0)
        (reg:V4SI 22 xmm1 [223])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 328 351 330 11 (set (reg:V1TI 22 xmm1 [283])
        (lshiftrt:V1TI (reg:V1TI 22 xmm1 [223])
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 330 328 327 11 (set (reg:V2DI 22 xmm1 [285])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [283])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 26 xmm5 [284])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (expr_list:REG_DEAD (reg:V4SI 26 xmm5 [284])
        (nil)))

(insn:TI 327 330 332 11 (set (reg:V2DI 21 xmm0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 23 xmm2 [265])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (nil))

(insn:TI 332 327 331 11 (set (reg:V4SI 22 xmm1 [287])
        (vec_select:V4SI (reg:V4SI 22 xmm1 [285])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn:TI 331 332 333 11 (set (reg:V4SI 21 xmm0 [286])
        (vec_select:V4SI (reg:V4SI 21 xmm0 [282])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn 333 331 355 11 (set (reg:V4SI 21 xmm0 [orig:185 vect_var_.882 ] [185])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 21 xmm0 [286])
                (reg:V4SI 22 xmm1 [287]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [287])
        (nil)))

(insn 355 333 101 11 (set (reg:V4SI 22 xmm1 [228])
        (reg:V4SI 28 xmm7 [275])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 101 355 356 11 (set (reg:V4SI 22 xmm1 [228])
        (gt:V4SI (reg:V4SI 22 xmm1 [228])
            (reg:V4SI 21 xmm0 [orig:185 vect_var_.882 ] [185]))) ../src/izp-gaussian.c:588 1665 {sse2_gtv4si3}
     (expr_list:REG_EQUAL (gt:V4SI (const_vector:V4SI [
                    (const_int 0 [0])
                    (const_int 0 [0])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ])
            (reg:V4SI 21 xmm0 [orig:185 vect_var_.882 ] [185]))
        (nil)))

(insn 356 101 102 11 (set (reg:V4SI 26 xmm5)
        (reg:V4SI 21 xmm0 [orig:185 vect_var_.882 ] [185])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 102 356 107 11 (set (reg:V4SI 26 xmm5)
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 26 xmm5)
                (reg:V4SI 22 xmm1 [228]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (nil))

(insn 107 102 103 11 (set (reg:V4SI 21 xmm0 [230])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 21 xmm0 [orig:185 vect_var_.882 ] [185])
                (reg:V4SI 22 xmm1 [228]))
            (parallel [
                    (const_int 2 [0x2])
                    (const_int 6 [0x6])
                    (const_int 3 [0x3])
                    (const_int 7 [0x7])
                ]))) ../src/izp-gaussian.c:588 1750 {vec_interleave_highv4si}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [228])
        (nil)))

(insn 103 107 108 11 (set (reg:V2DI 26 xmm5 [229])
        (plus:V2DI (reg:V2DI 26 xmm5 [225])
            (reg:V2DI 24 xmm3 [orig:188 vect_cst_.886 ] [188]))) ../src/izp-gaussian.c:588 1572 {*addv2di3}
     (expr_list:REG_EQUIV (mem:V2DI (reg:DI 1 dx [orig:115 ivtmp.932 ] [115]) [2 MEM[base: D.8774_27, offset: 0B]+0 S16 A128])
        (nil)))

(insn:TI 108 103 104 11 (set (reg:V2DI 21 xmm0 [234])
        (plus:V2DI (reg:V2DI 21 xmm0 [230])
            (reg:V2DI 24 xmm3 [orig:188 vect_cst_.886 ] [188]))) ../src/izp-gaussian.c:588 1572 {*addv2di3}
     (expr_list:REG_EQUIV (mem:V2DI (plus:DI (reg:DI 1 dx [orig:115 ivtmp.932 ] [115])
                (const_int 16 [0x10])) [2 MEM[base: D.8774_27, offset: 16B]+0 S16 A128])
        (nil)))

(insn 104 108 109 11 (set (mem:V2DI (reg:DI 1 dx [orig:115 ivtmp.932 ] [115]) [2 MEM[base: D.8774_27, offset: 0B]+0 S16 A128])
        (reg:V2DI 26 xmm5 [229])) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 26 xmm5 [229])
        (nil)))

(insn:TI 109 104 111 11 (set (mem:V2DI (plus:DI (reg:DI 1 dx [orig:115 ivtmp.932 ] [115])
                (const_int 16 [0x10])) [2 MEM[base: D.8774_27, offset: 16B]+0 S16 A128])
        (reg:V2DI 21 xmm0 [234])) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 21 xmm0 [234])
        (nil)))

(debug_insn 111 109 113 11 (var_location:SI i (debug_expr:SI D#11)) -1
     (nil))

(insn 113 111 115 11 (parallel [
            (set (reg:DI 1 dx [orig:115 ivtmp.932 ] [115])
                (plus:DI (reg:DI 1 dx [orig:115 ivtmp.932 ] [115])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 115 113 116 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 4 si [orig:96 ivtmp.930 ] [96])
            (reg:SI 5 di [orig:168 bnd.873 ] [168]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 116 115 117 11 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 266)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 266)
;; End of basic block 11 -> ( 10 12)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]


;; Succ edge  10 [91.0%]  (can_fallthru)
;; Succ edge  12 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  11 [9.0%]  (fallthru,can_fallthru,loop_exit)
(note 117 116 118 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 118 117 119 12 (parallel [
            (set (reg/v:SI 2 cx [orig:170 i ] [170])
                (plus:SI (reg/v:SI 2 cx [orig:170 i ] [170])
                    (reg:SI 37 r8 [orig:169 ratio_mult_vf.874 ] [169])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 119 118 120 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 38 r9 [orig:167 niters.872 ] [167])
            (reg:SI 37 r8 [orig:169 ratio_mult_vf.874 ] [169]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:167 niters.872 ] [167])
        (expr_list:REG_DEAD (reg:SI 37 r8 [orig:169 ratio_mult_vf.874 ] [169])
            (nil))))

(jump_insn:TI 120 119 121 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 146)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 146)
;; End of basic block 12 -> ( 13 15)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  13 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  15 (can_fallthru)

;; Start of basic block ( 12 8) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  12 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  8 (can_fallthru)
(code_label 121 120 122 13 68 "" [1 uses])

(note 122 121 130 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 130 122 366 13 NOTE_INSN_DELETED)

(insn:TI 366 130 358 13 (set (reg:SI 5 di [235])
        (subreg:SI (mult:DI (reg:DI 3 bx [orig:196 cols ] [196])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:564 250 {*lea_2}
     (nil))

(insn 358 366 129 13 (set (reg:SI 4 si [236])
        (reg/v:SI 3 bx [orig:196 cols ] [196])) ../src/izp-gaussian.c:564 64 {*movsi_internal}
     (nil))

(insn 129 358 125 13 (set (reg:DI 1 dx [orig:239 i ] [239])
        (sign_extend:DI (reg/v:SI 2 cx [orig:170 i ] [170]))) ../src/izp-gaussian.c:564 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 125 129 131 13 (parallel [
            (set (reg:SI 4 si [236])
                (mult:SI (reg:SI 4 si [236])
                    (reg/v:SI 2 cx [orig:170 i ] [170])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 333 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 131 125 124 13 (set (reg:DI 1 dx [orig:65 ivtmp.900 ] [65])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:239 i ] [239])
                (const_int 8 [0x8]))
            (reg/v/f:DI 43 r14 [orig:81 extImage ] [81]))) ../src/izp-gaussian.c:564 249 {*lea_1}
     (nil))

(insn 124 131 126 13 (set (reg:DI 5 di [orig:101 D.8718 ] [101])
        (sign_extend:DI (reg:SI 5 di [235]))) ../src/izp-gaussian.c:564 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 126 124 127 13 (parallel [
            (set (reg:SI 4 si [237])
                (ashift:SI (reg:SI 4 si [236])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 497 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 127 126 128 13 (set (reg:DI 4 si [238])
        (sign_extend:DI (reg:SI 4 si [237]))) ../src/izp-gaussian.c:564 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 128 127 139 13 (parallel [
            (set (reg:DI 4 si [orig:145 ivtmp.898 ] [145])
                (plus:DI (reg/v/f:DI 0 ax [orig:85 heap ] [85])
                    (reg:DI 4 si [238])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  14 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 14 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  14 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  13 [100.0%]  (fallthru,can_fallthru)
(code_label 139 128 132 14 71 "" [1 uses])

(note 132 139 134 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 134 132 136 14 (parallel [
            (set (reg/v:SI 2 cx [orig:170 i ] [170])
                (plus:SI (reg/v:SI 2 cx [orig:170 i ] [170])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(debug_insn 136 134 133 14 (var_location:SI i (reg/v:SI 2 cx [orig:170 i ] [170])) -1
     (nil))

(insn 133 136 137 14 (set (mem/f:DI (reg:DI 1 dx [orig:65 ivtmp.900 ] [65]) [2 MEM[base: D.8726_14, offset: 0B]+0 S8 A64])
        (reg:DI 4 si [orig:145 ivtmp.898 ] [145])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(insn 137 133 138 14 (parallel [
            (set (reg:DI 4 si [orig:145 ivtmp.898 ] [145])
                (plus:DI (reg:DI 4 si [orig:145 ivtmp.898 ] [145])
                    (reg:DI 5 di [orig:101 D.8718 ] [101])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 138 137 140 14 (parallel [
            (set (reg:DI 1 dx [orig:65 ivtmp.900 ] [65])
                (plus:DI (reg:DI 1 dx [orig:65 ivtmp.900 ] [65])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 140 138 141 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 41 r12 [orig:197 rows ] [197])
            (reg/v:SI 2 cx [orig:170 i ] [170]))) ../src/izp-gaussian.c:587 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 141 140 146 14 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 139)
            (pc))) ../src/izp-gaussian.c:587 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 139)
;; End of basic block 14 -> ( 14 15)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  14 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  15 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 14 4 6 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 1 [dx]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx]
;; live  kill	

;; Pred edge  14 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  4 [9.0%]  (can_fallthru)
;; Pred edge  6 (can_fallthru)
;; Pred edge  12 (can_fallthru)
(code_label 146 141 147 15 65 "" [3 uses])

(note 147 146 148 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:TI 148 147 149 15 (set (reg:DI 1 dx [orig:241 rows ] [241])
        (sign_extend:DI (reg/v:SI 41 r12 [orig:197 rows ] [197]))) ../src/izp-gaussian.c:590 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 149 148 161 15 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:241 rows ] [241])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 43 r14 [orig:81 extImage ] [81])) [2 *D.8559_56+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:85 heap ] [85])) ../src/izp-gaussian.c:590 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:241 rows ] [241])
        (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:85 heap ] [85])
            (nil))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  16 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 15 28) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags] 37 [r8]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  15 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  28 [100.0%]  (can_fallthru)
(code_label 161 149 162 16 72 "" [1 uses])

(note 162 161 163 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(debug_insn 163 162 165 16 (var_location:DI extImage (clobber (const_int 0 [0]))) ../src/izp-gaussian.c:568 -1
     (nil))

(debug_insn 165 163 395 16 (var_location:SI i (const_int 0 [0])) -1
     (nil))

(insn:TI 395 165 166 16 (parallel [
            (set (reg:DI 37 r8 [orig:150 ivtmp.925 ] [150])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:572 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 166 395 167 16 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 41 r12 [orig:197 rows ] [197])
            (const_int 0 [0]))) ../src/izp-gaussian.c:572 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 167 166 214 16 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 247)
            (pc))) ../src/izp-gaussian.c:572 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 247)
;; End of basic block 16 -> ( 17 27)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  17 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  27 [9.0%]  (can_fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags] 22 [xmm1] 38 [r9]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di] 22 [xmm1] 38 [r9]
;; live  kill	 17 [flags]

;; Pred edge  16 [91.0%]  (fallthru,can_fallthru)
(code_label 214 167 215 17 73 "" [0 uses])

(note 215 214 360 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:TI 360 215 172 17 (set (reg:SI 5 di [orig:270 bnd.849 ] [270])
        (reg/v:SI 3 bx [orig:196 cols ] [196])) ../src/izp-gaussian.c:564 64 {*movsi_internal}
     (nil))

(insn 172 360 224 17 (set (reg:V4SF 22 xmm1 [272])
        (const_vector:V4SF [
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])) ../src/izp-gaussian.c:574 1126 {*movv4sf_internal}
     (expr_list:REG_EQUIV (const_vector:V4SF [
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn:TI 224 172 364 17 (parallel [
            (set (reg:SI 5 di [orig:270 bnd.849 ] [270])
                (lshiftrt:SI (reg:SI 5 di [orig:270 bnd.849 ] [270])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 531 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 364 224 314 17 (set (reg:SI 38 r9 [orig:271 ratio_mult_vf.850 ] [271])
        (subreg:SI (mult:DI (reg:DI 5 di [orig:270 bnd.849 ] [270])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:564 250 {*lea_2}
     (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  18 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 17 26) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  17 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  26 [91.0%]  (dfs_back,can_fallthru)
(code_label 314 364 284 18 87 "" [1 uses])

(note 284 314 216 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(debug_insn 216 284 218 18 (var_location:SI j (const_int 0 [0])) -1
     (nil))

(insn:TI 218 216 219 18 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 3 bx [orig:196 cols ] [196])
            (const_int 0 [0]))) ../src/izp-gaussian.c:573 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 219 218 220 18 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 217)
            (pc))) ../src/izp-gaussian.c:573 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 217)
;; End of basic block 18 -> ( 19 26)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  19 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  26 [9.0%]  (can_fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13] 43 [r14]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	

;; Pred edge  18 [91.0%]  (fallthru,can_fallthru)
(note 220 219 227 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 227 220 228 19 NOTE_INSN_DELETED)

(note 228 227 229 19 NOTE_INSN_DELETED)

(insn:TI 229 228 221 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 38 r9 [orig:271 ratio_mult_vf.850 ] [271])
            (const_int 0 [0]))) ../src/izp-gaussian.c:564 2 {*cmpsi_ccno_1}
     (nil))

(insn 221 229 222 19 (set (reg/f:DI 4 si [orig:116 pretmp.826 ] [116])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 37 r8 [orig:150 ivtmp.925 ] [150])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 43 r14 [orig:81 extImage ] [81])) [2 MEM[base: extImage_58, index: ivtmp.925_141, step: 8, offset: 0B]+0 S8 A64])) ../src/izp-gaussian.c:573 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 222 221 230 19 (set (reg/f:DI 2 cx [orig:119 pretmp.829 ] [119])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 37 r8 [orig:150 ivtmp.925 ] [150])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 42 r13 [orig:195 image ] [195])) [2 MEM[base: image_17(D), index: ivtmp.925_141, step: 8, offset: 0B]+0 S8 A64])) ../src/izp-gaussian.c:573 62 {*movdi_internal_rex64}
     (nil))

(jump_insn 230 222 278 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 276)
            (pc))) ../src/izp-gaussian.c:564 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 276)
;; End of basic block 19 -> ( 30 20)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  30 (can_fallthru)
;; Succ edge  20 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 39 [r10]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 39 [r10]
;; live  kill	 17 [flags]

;; Pred edge  19 [100.0%]  (fallthru,can_fallthru)
(note 278 230 240 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 240 278 241 20 NOTE_INSN_DELETED)

(note 241 240 361 20 NOTE_INSN_DELETED)

(insn:TI 361 241 231 20 (set (reg/f:DI 0 ax [254])
        (plus:DI (reg/f:DI 4 si [orig:116 pretmp.826 ] [116])
            (const_int 16 [0x10]))) ../src/izp-gaussian.c:564 249 {*lea_1}
     (nil))

(insn 231 361 362 20 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 3 bx [orig:196 cols ] [196])
            (const_int 5 [0x5]))) ../src/izp-gaussian.c:564 6 {*cmpsi_1}
     (nil))

(insn:TI 362 231 232 20 (set (reg/f:DI 39 r10 [257])
        (plus:DI (reg/f:DI 2 cx [orig:119 pretmp.829 ] [119])
            (const_int 16 [0x10]))) ../src/izp-gaussian.c:564 249 {*lea_1}
     (nil))

(insn 232 362 234 20 (set (reg:QI 1 dx [253])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ../src/izp-gaussian.c:564 585 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn 234 232 235 20 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 2 cx [orig:119 pretmp.829 ] [119])
            (reg/f:DI 0 ax [254]))) ../src/izp-gaussian.c:564 7 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [254])
        (nil)))

(insn:TI 235 234 237 20 (set (reg:QI 0 ax [260])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ../src/izp-gaussian.c:564 585 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn 237 235 238 20 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 4 si [orig:116 pretmp.826 ] [116])
            (reg/f:DI 39 r10 [257]))) ../src/izp-gaussian.c:564 7 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [257])
        (nil)))

(insn:TI 238 237 363 20 (set (reg:QI 39 r10 [259])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ../src/izp-gaussian.c:564 585 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn:TI 363 238 242 20 (parallel [
            (set (reg:SI 0 ax [260])
                (ior:SI (reg:SI 0 ax [260])
                    (reg:SI 39 r10 [259])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 399 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 39 r10 [259])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 242 363 243 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 1 dx [253])
                (reg:QI 0 ax [260]))
            (const_int 0 [0]))) ../src/izp-gaussian.c:564 369 {*testqi_1_maybe_si}
     (expr_list:REG_DEAD (reg:QI 1 dx [253])
        (expr_list:REG_DEAD (reg:QI 0 ax [260])
            (nil))))

(jump_insn:TI 243 242 246 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 276)
            (pc))) ../src/izp-gaussian.c:564 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 276)
;; End of basic block 20 -> ( 21 30)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  21 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  30 (can_fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]

;; Pred edge  20 [100.0%]  (fallthru,can_fallthru)
(note 246 243 389 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:TI 389 246 390 21 (parallel [
            (set (reg:DI 0 ax [orig:136 ivtmp.919 ] [136])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 390 389 183 21 (parallel [
            (set (reg:DI 1 dx [orig:100 ivtmp.916 ] [100])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 21 -> ( 22)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  22 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 22 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]

;; Pred edge  22 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  21 [100.0%]  (fallthru,can_fallthru)
(code_label 183 390 171 22 75 "" [1 uses])

(note 171 183 359 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:TI 359 171 181 22 (set (reg:V4SF 21 xmm0 [243])
        (reg:V4SF 22 xmm1 [272])) ../src/izp-gaussian.c:574 1126 {*movv4sf_internal}
     (nil))

(insn 181 359 173 22 (parallel [
            (set (reg:SI 1 dx [orig:100 ivtmp.916 ] [100])
                (plus:SI (reg:SI 1 dx [orig:100 ivtmp.916 ] [100])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:574 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 173 181 174 22 (set (reg:V4SF 21 xmm0 [243])
        (vec_concat:V4SF (mem:V2SF (plus:DI (reg/f:DI 2 cx [orig:119 pretmp.829 ] [119])
                    (reg:DI 0 ax [orig:136 ivtmp.919 ] [136])) [3 MEM[base: pretmp.829_93, index: ivtmp.919_113, offset: 0B]+0 S8 A32])
            (vec_select:V2SF (reg:V4SF 21 xmm0 [243])
                (parallel [
                        (const_int 2 [0x2])
                        (const_int 3 [0x3])
                    ])))) ../src/izp-gaussian.c:574 1488 {sse_loadlps}
     (expr_list:REG_EQUAL (vec_concat:V4SF (mem:V2SF (plus:DI (reg/f:DI 2 cx [orig:119 pretmp.829 ] [119])
                    (reg:DI 0 ax [orig:136 ivtmp.919 ] [136])) [3 MEM[base: pretmp.829_93, index: ivtmp.919_113, offset: 0B]+0 S8 A32])
            (const_vector:V2SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ]))
        (nil)))

(insn:TI 174 173 176 22 (set (reg:V4SF 21 xmm0 [243])
        (vec_concat:V4SF (vec_select:V2SF (reg:V4SF 21 xmm0 [243])
                (parallel [
                        (const_int 0 [0])
                        (const_int 1 [0x1])
                    ]))
            (mem:V2SF (plus:DI (plus:DI (reg/f:DI 2 cx [orig:119 pretmp.829 ] [119])
                        (reg:DI 0 ax [orig:136 ivtmp.919 ] [136]))
                    (const_int 8 [0x8])) [3 MEM[base: pretmp.829_93, index: ivtmp.919_113, offset: 0B]+8 S8 A32]))) ../src/izp-gaussian.c:574 1484 {sse_loadhps}
     (nil))

(insn:TI 176 174 178 22 (set (reg:V4SI 21 xmm0 [242])
        (fix:V4SI (reg:V4SF 21 xmm0 [243]))) ../src/izp-gaussian.c:574 1433 {sse2_cvttps2dq}
     (nil))

(insn 178 176 180 22 (set (mem:V16QI (plus:DI (reg/f:DI 4 si [orig:116 pretmp.826 ] [116])
                (reg:DI 0 ax [orig:136 ivtmp.919 ] [136])) [5 MEM[base: pretmp.826_89, index: ivtmp.919_113, offset: 0B]+0 S16 A32])
        (unspec:V16QI [
                (reg:V16QI 21 xmm0 [242])
            ] UNSPEC_MOVU)) ../src/izp-gaussian.c:574 1138 {*sse2_movdqu}
     (expr_list:REG_DEAD (reg:V16QI 21 xmm0 [242])
        (nil)))

(debug_insn 180 178 182 22 (var_location:SI j (debug_expr:SI D#12)) -1
     (nil))

(insn 182 180 184 22 (parallel [
            (set (reg:DI 0 ax [orig:136 ivtmp.919 ] [136])
                (plus:DI (reg:DI 0 ax [orig:136 ivtmp.919 ] [136])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:574 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 184 182 185 22 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 5 di [orig:270 bnd.849 ] [270])
            (reg:SI 1 dx [orig:100 ivtmp.916 ] [100]))) ../src/izp-gaussian.c:574 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 185 184 186 22 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 183)
            (pc))) ../src/izp-gaussian.c:574 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 183)
;; End of basic block 22 -> ( 22 23)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  22 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  23 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 38 [r9]
;; lr  def 	 17 [flags] 39 [r10]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags] 39 [r10]
;; live  kill	

;; Pred edge  22 [9.0%]  (fallthru,can_fallthru,loop_exit)
(note 186 185 188 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:TI 188 186 300 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 3 bx [orig:196 cols ] [196])
            (reg:SI 38 r9 [orig:271 ratio_mult_vf.850 ] [271]))) ../src/izp-gaussian.c:574 6 {*cmpsi_1}
     (nil))

(insn 300 188 189 23 (set (reg/v:SI 39 r10 [orig:143 j ] [143])
        (reg:SI 38 r9 [orig:271 ratio_mult_vf.850 ] [271])) ../src/izp-gaussian.c:574 64 {*movsi_internal}
     (nil))

(jump_insn:TI 189 300 226 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 217)
            (pc))) ../src/izp-gaussian.c:574 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 217)
;; End of basic block 23 -> ( 24 26)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  24 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  26 (can_fallthru)

;; Start of basic block ( 23 30) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 39 [r10]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si]
;; live  kill	 17 [flags]

;; Pred edge  23 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  30 [100.0%]  (can_fallthru)
(code_label 226 189 190 24 79 "" [1 uses])

(note 190 226 282 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:TI 282 190 393 24 (set (reg:DI 1 dx [orig:264 j ] [264])
        (sign_extend:DI (reg/v:SI 39 r10 [orig:143 j ] [143]))) 126 {*extendsidi2_rex64}
     (nil))

(insn 393 282 193 24 (parallel [
            (set (reg:DI 0 ax [orig:160 ivtmp.910 ] [160])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 193 393 194 24 (parallel [
            (set (reg:DI 1 dx [orig:266 D.8745 ] [266])
                (ashift:DI (reg:DI 1 dx [orig:264 j ] [264])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 194 193 195 24 (parallel [
            (set (reg:DI 4 si [267])
                (plus:DI (reg/f:DI 4 si [orig:116 pretmp.826 ] [116])
                    (reg:DI 1 dx [orig:266 D.8745 ] [266])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 195 194 203 24 (parallel [
            (set (reg:DI 2 cx [268])
                (plus:DI (reg/f:DI 2 cx [orig:119 pretmp.829 ] [119])
                    (reg:DI 1 dx [orig:266 D.8745 ] [266])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 253 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:266 D.8745 ] [266])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 24 -> ( 25)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  25 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 25 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]

;; Pred edge  25 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  24 [100.0%]  (fallthru,can_fallthru)
(code_label 203 195 191 25 77 "" [1 uses])

(note 191 203 196 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note 196 191 391 25 NOTE_INSN_DELETED)

(insn:TI 391 196 392 25 (set (reg:SF 21 xmm0)
        (mem:SF (plus:DI (mult:DI (reg:DI 0 ax [orig:160 ivtmp.910 ] [160])
                    (const_int 4 [0x4]))
                (reg:DI 2 cx [268])) [3 MEM[base: D.8746_158, index: ivtmp.910_160, step: 4, offset: 0B]+0 S4 A32])) ../src/izp-gaussian.c:574 110 {*movsf_internal}
     (nil))

(insn:TI 392 391 198 25 (set (reg:SI 1 dx [249])
        (fix:SI (reg:SF 21 xmm0))) ../src/izp-gaussian.c:574 156 {fix_truncsfsi_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))

(insn:TI 198 392 200 25 (set (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [orig:160 ivtmp.910 ] [160])
                    (const_int 4 [0x4]))
                (reg:DI 4 si [267])) [5 MEM[base: D.8749_159, index: ivtmp.910_160, step: 4, offset: 0B]+0 S4 A32])
        (reg:SI 1 dx [249])) ../src/izp-gaussian.c:574 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [249])
        (expr_list:REG_EQUAL (fix:SI (reg:SF 248 [ MEM[base: D.8746_158, index: ivtmp.910_160, step: 4, offset: 0B] ]))
            (nil))))

(debug_insn 200 198 201 25 (var_location:SI j (debug_expr:SI D#13)) -1
     (nil))

(insn 201 200 365 25 (parallel [
            (set (reg:DI 0 ax [orig:160 ivtmp.910 ] [160])
                (plus:DI (reg:DI 0 ax [orig:160 ivtmp.910 ] [160])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:574 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 365 201 204 25 (set (reg:SI 1 dx [orig:91 D.8752 ] [91])
        (subreg:SI (plus:DI (reg:DI 39 r10 [orig:143 j ] [143])
                (reg:DI 0 ax [orig:160 ivtmp.910 ] [160])) 0)) ../src/izp-gaussian.c:564 250 {*lea_2}
     (nil))

(insn:TI 204 365 205 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 3 bx [orig:196 cols ] [196])
            (reg:SI 1 dx [orig:91 D.8752 ] [91]))) ../src/izp-gaussian.c:573 6 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:91 D.8752 ] [91])
        (nil)))

(jump_insn:TI 205 204 217 25 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 203)
            (pc))) ../src/izp-gaussian.c:573 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 203)
;; End of basic block 25 -> ( 25 26)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  25 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  26 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 25 18 23) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  def 	 17 [flags] 37 [r8]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  25 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  18 [9.0%]  (can_fallthru)
;; Pred edge  23 (can_fallthru)
(code_label 217 205 208 26 78 "" [2 uses])

(note 208 217 210 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(debug_insn 210 208 211 26 (var_location:SI i (debug_expr:SI D#14)) -1
     (nil))

(insn:TI 211 210 212 26 (parallel [
            (set (reg:DI 37 r8 [orig:150 ivtmp.925 ] [150])
                (plus:DI (reg:DI 37 r8 [orig:150 ivtmp.925 ] [150])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:573 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 212 211 213 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 41 r12 [orig:197 rows ] [197])
            (reg:SI 37 r8 [orig:150 ivtmp.925 ] [150]))) ../src/izp-gaussian.c:572 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 213 212 247 26 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 314)
            (pc))) ../src/izp-gaussian.c:572 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 314)
;; End of basic block 26 -> ( 18 27)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  18 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  27 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 16 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 7 [sp] 20 [frame] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	

;; Pred edge  16 [9.0%]  (can_fallthru)
;; Pred edge  26 [9.0%]  (fallthru,can_fallthru,loop_exit)
(code_label 247 213 248 27 74 "" [1 uses])

(note 248 247 408 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 408 248 382 27 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 382 408 253 27 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:579 52 {*popdi1}
     (nil))

(insn 253 382 256 27 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 43 r14 [orig:81 extImage ] [81])) ../src/izp-gaussian.c:579 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:81 extImage ] [81])
        (nil)))

(insn 256 253 383 27 (use (reg/i:DI 0 ax)) ../src/izp-gaussian.c:579 -1
     (nil))

(insn:TI 383 256 384 27 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:579 52 {*popdi1}
     (nil))

(insn:TI 384 383 385 27 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:579 52 {*popdi1}
     (nil))

(insn:TI 385 384 386 27 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:579 52 {*popdi1}
     (nil))

(insn/f:TI 386 385 387 27 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:579 52 {*popdi1}
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))

(jump_insn:TI 387 386 388 27 (return) ../src/izp-gaussian.c:579 634 {return_internal}
     (nil))
;; End of basic block 27 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 388 387 152)

;; Start of basic block ( 3 2) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  3 [4.3%]  (can_fallthru)
;; Pred edge  2 [4.3%]  (can_fallthru)
(code_label 152 388 153 28 64 "" [2 uses])

(note 153 152 154 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(debug_insn 154 153 155 28 (var_location:DI __stream (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2ae34564c320 stderr>) [2 stderr+0 S8 A64])) ../src/izp-gaussian.c:593 -1
     (nil))

(debug_insn 155 154 158 28 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ae345ba6dc0 *.LC4>)) ../src/izp-gaussian.c:593 -1
     (nil))

(insn:TI 158 155 156 28 (set (reg:DI 5 di)
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2ae34564c320 stderr>) [2 stderr+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (nil))

(insn 156 158 396 28 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ae345ba6dc0 *.LC4>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (nil))

(insn 396 156 157 28 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 157 396 397 28 (set (reg:SI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 64 {*movsi_internal}
     (nil))

(insn 397 157 160 28 (parallel [
            (set (reg/v/f:DI 43 r14 [orig:81 extImage ] [81])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 160 397 402 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2ae34567a300 __fprintf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(jump_insn 402 160 403 28 (set (pc)
        (label_ref 161)) 606 {jump}
     (nil)
 -> 161)
;; End of basic block 28 -> ( 16)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  16 [100.0%]  (can_fallthru)

(barrier 403 402 262)

;; Start of basic block ( 5) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]

;; Pred edge  5 (can_fallthru)
(code_label 262 403 261 29 80 "" [1 uses])

(note 261 262 399 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn:TI 399 261 404 29 (parallel [
            (set (reg:DI 2 cx [orig:170 i ] [170])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 404 399 405 29 (set (pc)
        (label_ref 72)) 606 {jump}
     (nil)
 -> 72)
;; End of basic block 29 -> ( 8)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  8 [100.0%]  (can_fallthru)

(barrier 405 404 276)

;; Start of basic block ( 20 19) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 39 [r10]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 39 [r10]
;; live  kill	 17 [flags]

;; Pred edge  20 (can_fallthru)
;; Pred edge  19 (can_fallthru)
(code_label 276 405 275 30 83 "" [2 uses])

(note 275 276 394 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn:TI 394 275 406 30 (parallel [
            (set (reg:DI 39 r10 [orig:143 j ] [143])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:564 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 406 394 407 30 (set (pc)
        (label_ref 226)) 606 {jump}
     (nil)
 -> 226)
;; End of basic block 30 -> ( 24)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  24 [100.0%]  (can_fallthru)

(barrier 407 406 334)

(note 334 407 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function izp_allocarray (izp_allocarray)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 22 (  1.2)


izp_allocarray

Dataflow summary:
def_info->table_size = 273, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 45[xmm8]
;;  ref usage 	r0={6d,10u} r1={15d,17u,2e} r2={8d,10u} r3={4d,12u} r4={18d,15u} r5={9d,7u} r6={3d,20u} r7={11d,32u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={34d,10u} r18={3d} r19={3d} r20={1d,1u} r21={18d,17u,2e} r22={18d,16u} r23={7d,4u} r24={5d,2u} r25={5d,2u} r26={11d,7u} r27={6d,2u} r28={5d,1u} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d,3u} r38={6d,3u} r39={4d,1u} r40={4d,1u} r41={8d,11u} r42={4d,10u} r43={3d,6u} r45={4d,1u} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 522{297d,221u,4e} in 149{146 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 0 )->[2]->( 17 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 2 )->[3]->( 4 17 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 3 )->[4]->( 5 15 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 4 )->[5]->( 6 18 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 5 )->[6]->( 7 15 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 7 18 )->[8]->( 9 13 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]

( 11 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; lr  use 	 6 [bp] 7 [sp] 27 [xmm6]
;; lr  def 	 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  gen 	 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]

( 10 9 )->[11]->( 10 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 45 [xmm8]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]

( 11 )->[12]->( 13 15 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 12 8 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 14 13 )->[14]->( 14 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 14 4 6 12 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 3 [bx]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 7 [sp] 20 [frame] 42 [r13]
;; live  out 	 7 [sp] 20 [frame] 42 [r13]

( 15 17 )->[16]->( 1 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 7 [sp] 20 [frame] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 3 2 )->[17]->( 16 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 7 [sp] 20 [frame] 42 [r13]
;; live  out 	 7 [sp] 20 [frame] 42 [r13]

( 5 )->[18]->( 8 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 16 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(20){ }u-1(41){ }u-1(42){ }u-1(43){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 36 to worklist
  Adding insn 32 to worklist
  Adding insn 29 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 237 to worklist
  Adding insn 235 to worklist
  Adding insn 234 to worklist
  Adding insn 233 to worklist
  Adding insn 232 to worklist
  Adding insn 231 to worklist
  Adding insn 229 to worklist
  Adding insn 40 to worklist
  Adding insn 44 to worklist
  Adding insn 42 to worklist
  Adding insn 56 to worklist
  Adding insn 62 to worklist
  Adding insn 60 to worklist
  Adding insn 58 to worklist
  Adding insn 69 to worklist
  Adding insn 250 to worklist
  Adding insn 108 to worklist
  Adding insn 103 to worklist
  Adding insn 101 to worklist
  Adding insn 96 to worklist
  Adding insn 112 to worklist
  Adding insn 133 to worklist
  Adding insn 128 to worklist
  Adding insn 125 to worklist
  Adding insn 141 to worklist
  Adding insn 244 to worklist
  Adding insn 162 to worklist
  Adding insn 252 to worklist
  Adding insn 152 to worklist
  Adding insn 147 to worklist
  Adding insn 146 to worklist
  Adding insn 254 to worklist
Finished finding needed instructions:
processing block 16 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 243 to worklist
  Adding insn 242 to worklist
  Adding insn 241 to worklist
  Adding insn 240 to worklist
  Adding insn 239 to worklist
  Adding insn 159 to worklist
processing block 17 lr out =  7 [sp] 20 [frame] 42 [r13]
  Adding insn 247 to worklist
  Adding insn 246 to worklist
  Adding insn 150 to worklist
  Adding insn 149 to worklist
  Adding insn 148 to worklist
processing block 10 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
  Adding insn 10 to worklist
processing block 15 lr out =  7 [sp] 20 [frame] 42 [r13]
  Adding insn 140 to worklist
processing block 14 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 132 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
  Adding insn 126 to worklist
processing block 13 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 123 to worklist
  Adding insn 121 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 117 to worklist
  Adding insn 116 to worklist
  Adding insn 115 to worklist
  Adding insn 223 to worklist
processing block 12 lr out =  0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 111 to worklist
  Adding insn 110 to worklist
processing block 11 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
  Adding insn 107 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 221 to worklist
  Adding insn 93 to worklist
  Adding insn 220 to worklist
  Adding insn 197 to worklist
  Adding insn 196 to worklist
  Adding insn 195 to worklist
  Adding insn 194 to worklist
  Adding insn 193 to worklist
  Adding insn 218 to worklist
  Adding insn 192 to worklist
  Adding insn 191 to worklist
  Adding insn 216 to worklist
  Adding insn 190 to worklist
  Adding insn 189 to worklist
  Adding insn 188 to worklist
  Adding insn 187 to worklist
  Adding insn 186 to worklist
  Adding insn 214 to worklist
  Adding insn 185 to worklist
  Adding insn 184 to worklist
  Adding insn 212 to worklist
  Adding insn 88 to worklist
  Adding insn 211 to worklist
processing block 9 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
  Adding insn 92 to worklist
  Adding insn 248 to worklist
  Adding insn 86 to worklist
  Adding insn 210 to worklist
  Adding insn 83 to worklist
  Adding insn 209 to worklist
  Adding insn 81 to worklist
  Adding insn 208 to worklist
  Adding insn 79 to worklist
  Adding insn 207 to worklist
  Adding insn 78 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 206 to worklist
  Adding insn 205 to worklist
  Adding insn 74 to worklist
  Adding insn 204 to worklist
  Adding insn 203 to worklist
  Adding insn 226 to worklist
  Adding insn 225 to worklist
  Adding insn 224 to worklist
processing block 8 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 68 to worklist
  Adding insn 227 to worklist
  Adding insn 66 to worklist
  Adding insn 202 to worklist
  Adding insn 65 to worklist
  Adding insn 201 to worklist
processing block 7 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 8 to worklist
processing block 6 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 61 to worklist
processing block 18 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 249 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 49 to worklist
  Adding insn 200 to worklist
processing block 4 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 43 to worklist
processing block 3 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 39 to worklist
processing block 2 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 35 to worklist
  Adding insn 28 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 199 to worklist
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 228 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 230 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 22 (  1.2)
deleting insn with uid = 236.
deleting insn with uid = 7.
deleting insn with uid = 33.
deleting insn with uid = 34.
;;   ======================================================
;;   -- basic block 2 from 229 to 36 -- after reload
;;   ======================================================

;;	  0-->   229 [--sp]=bp                         :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   230 bp=sp                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   231 [--sp]=r14                        :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   235 use bp                            :nothing
;;	  2-->   232 [--sp]=r13                        :c2_decodern,(c2_p4+c2_p3)
;;	  3-->   233 [--sp]=r12                        :c2_decodern,(c2_p4+c2_p3)
;;	  4-->   234 [--sp]=bx                         :c2_decodern,(c2_p4+c2_p3)
;;	  5-->   237 unspec/v{0;}                      :c2_decoder0
;;	 11-->     5 bx=si                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 11-->     4 r12=di                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 11-->    19 di=0x20                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 12-->   228 si=bx+0x1#0                       :c2_decodern,c2_p0
;;	 12-->     6 r14=dx                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->    16 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->    17 {si=si<<0x3;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	 15-->    20 call <...>                        :c2_decoder0
;;	 15-->   199 si=r12                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 15-->    28 di=0x20                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 16-->    24 {si=si*bx;clobber flags;}         :c2_decodern,c2_p1
;;	 16-->    21 r13=ax                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 16-->    23: debug idx => r13                 :nothing
;;	 19-->    25 {si=si*r14;clobber flags;}        :c2_decodern,c2_p1
;;	 22-->    26 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 23-->    29 call <...>                        :c2_decoder0
;;	 23-->    32: debug heap => ax                 :nothing
;;	 24-->    35 flags=cmp(ax,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 25-->    36 pc={(flags==0)?L144:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 25
;;   new head = 229
;;   new tail = 36

;;   ======================================================
;;   -- basic block 3 from 39 to 40 -- after reload
;;   ======================================================

;;	  0-->    39 flags=cmp(r13,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    40 pc={(flags==0)?L144:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 39
;;   new tail = 40

;;   ======================================================
;;   -- basic block 4 from 42 to 44 -- after reload
;;   ======================================================

;;	  0-->    42: debug i => 0                     :nothing
;;	  0-->    43 flags=cmp(bx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    44 pc={(flags<=0)?L138:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 42
;;   new tail = 44

deleting insn with uid = 50.
;;   ======================================================
;;   -- basic block 5 from 200 to 56 -- after reload
;;   ======================================================

;;	  0-->   200 dx=r13                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    49 {dx=dx<<0x3c;clobber flags;}      :c2_decodern,c2_p0|c2_p5
;;	  2-->    51 {dx=dx 0>>0x3f;clobber flags;}    :c2_decodern,c2_p0|c2_p5
;;	  3-->    52 flags=cmp(dx,bx)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    53 dx={(leu(flags,0))?dx:bx}         :c2_decoder0,(c2_p0|c2_p1|c2_p5)*2
;;	  6-->    55 flags=cmp(dx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    54 si=zxn(dx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->    56 pc={(flags==0)?L168:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 7
;;   new head = 200
;;   new tail = 56

;;   ======================================================
;;   -- basic block 6 from 58 to 62 -- after reload
;;   ======================================================

;;	  0-->    61 flags=cmp(bx,dx)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    58 [r13]=ax                          :c2_decodern,(c2_p4+c2_p3)
;;	  0-->    60: debug i => 0x1                   :nothing
;;	  1-->    62 pc={(flags==0)?L138:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 58
;;   new tail = 62

;;   ======================================================
;;   -- basic block 7 from 8 to 8 -- after reload
;;   ======================================================

;;	  0-->     8 cx=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 8
;;   new tail = 8

;;   ======================================================
;;   -- basic block 8 from 201 to 69 -- after reload
;;   ======================================================

;;	  0-->   201 r9=bx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    65 {r9=r9-dx;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   202 di=r9                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->    66 {di=di 0>>0x2;clobber flags;}     :c2_decodern,c2_p0|c2_p5
;;	  4-->   227 r8=di*0x4#0                       :c2_decodern,c2_p0
;;	  5-->    68 flags=cmp(r8,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    69 pc={(flags==0)?L113:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 6
;;   new head = 201
;;   new tail = 69

deleting insn with uid = 85.
;;   ======================================================
;;   -- basic block 9 from 224 to 250 -- after reload
;;   ======================================================

;;	  0-->   225 r11=cx+0x2#0                      :c2_decodern,c2_p0
;;	  0-->    92 xmm7=const_vector                 :nothing
;;	  0-->    78 xmm8=[`*.LC3']                    :c2_decodern,c2_p2
;;	  1-->   226 r10=cx+0x3#0                      :c2_decodern,c2_p0
;;	  1-->   203 xmm1=r11                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   224 dx=cx+0x1#0                       :c2_decodern,c2_p0
;;	  2-->   204 xmm0=r10                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->    74 xmm1=vec_concat                   :nothing
;;	  3-->   206 xmm2=dx                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   205 xmm0=cx                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    75 xmm0=vec_concat                   :nothing
;;	  4-->    76 xmm0=vec_concat                   :nothing
;;	  4-->   207 xmm1=r12                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->    79 xmm4=vec_duplicate                :nothing
;;	  5-->   208 xmm2=r14                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   209 xmm1=ax                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    81 xmm3=vec_duplicate                :nothing
;;	  6-->    83 xmm1=vec_duplicate                :nothing
;;	  6-->    86 dx=si*0x8+r13                     :c2_decodern,c2_p0
;;	  7-->   210 xmm2=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   248 {si=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   250 pc=L106                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 7
;;   new head = 224
;;   new tail = 250

;;   ======================================================
;;   -- basic block 10 from 10 to 10 -- after reload
;;   ======================================================

;;	  0-->    10 xmm0=xmm6                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 10
;;   new tail = 10

;;   ======================================================
;;   -- basic block 11 from 211 to 108 -- after reload
;;   ======================================================

;;	  0-->   214 xmm5=xmm4                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   211 xmm6=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   212 xmm1=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   186 xmm5=xmm5 0>>0x20                 :c2_decodern,c2_p1
;;	  1-->   104 {si=si+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    88 xmm6=xmm6+xmm8                    :c2_decodern,c2_p0|c2_p5
;;	  2-->   185 xmm0=xmm0 0>>0x20                 :c2_decodern,c2_p1
;;	  3-->   187 xmm0=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	  3-->   218 xmm5=xmm3                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   184 xmm1=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	  5-->   193 xmm5=xmm5 0>>0x20                 :c2_decodern,c2_p1
;;	  6-->   189 xmm0=vec_select                   :nothing
;;	  7-->   188 xmm1=vec_select                   :nothing
;;	  7-->   190 xmm1=vec_select                   :nothing
;;	  7-->   216 xmm0=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->   192 xmm1=xmm1 0>>0x20                 :c2_decodern,c2_p1
;;	  9-->   194 xmm1=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	 10-->   191 xmm0=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	 12-->   196 xmm1=vec_select                   :nothing
;;	 13-->   195 xmm0=vec_select                   :nothing
;;	 13-->   197 xmm0=vec_select                   :nothing
;;	 13-->   220 xmm1=xmm7                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->    93 xmm1=xmm1>xmm0                    :c2_decodern,c2_p1
;;	 14-->   221 xmm5=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 17-->    94 xmm5=vec_select                   :nothing
;;	 17-->    99 xmm0=vec_select                   :nothing
;;	 17-->    95 xmm5=xmm5+xmm2                    :c2_decodern,c2_p0|c2_p5
;;	 18-->   100 xmm0=xmm0+xmm2                    :c2_decodern,c2_p0|c2_p5
;;	 18-->    96 [dx]=xmm5                         :c2_decodern,(c2_p4+c2_p3)
;;	 19-->   101 [dx+0x10]=xmm0                    :c2_decodern,(c2_p4+c2_p3)
;;	 19-->   103: debug i => D#15                  :nothing
;;	 19-->   105 {dx=dx+0x20;clobber flags;}       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 19-->   107 flags=cmp(si,di)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 20-->   108 pc={(ltu(flags,0))?L172:pc}       :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 20
;;   new head = 211
;;   new tail = 108

;;   ======================================================
;;   -- basic block 12 from 110 to 112 -- after reload
;;   ======================================================

;;	  0-->   110 {cx=cx+r8;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   111 flags=cmp(r9,r8)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   112 pc={(flags==0)?L138:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 110
;;   new tail = 112

deleting insn with uid = 122.
;;   ======================================================
;;   -- basic block 13 from 223 to 123 -- after reload
;;   ======================================================

;;	  0-->   223 si=r12                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   117 {r12=r12*cx;clobber flags;}       :c2_decodern,c2_p1
;;	  0-->   121 dx=sxn(cx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   115 {si=si*r14;clobber flags;}        :c2_decodern,c2_p1
;;	  1-->   123 dx=dx*0x8+r13                     :c2_decodern,c2_p0
;;	  3-->   118 {r12=r12*r14;clobber flags;}      :c2_decodern,c2_p1
;;	  4-->   116 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   119 r12=sxn(r12)                      :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   120 {r12=ax+r12;clobber flags;}       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 7
;;   new head = 223
;;   new tail = 123

;;   ======================================================
;;   -- basic block 14 from 125 to 133 -- after reload
;;   ======================================================

;;	  0-->   126 {cx=cx+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   128: debug i => cx                    :nothing
;;	  0-->   125 [dx]=r12                          :c2_decodern,(c2_p4+c2_p3)
;;	  0-->   129 {r12=r12+si;clobber flags;}       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   130 {dx=dx+0x8;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   132 flags=cmp(bx,cx)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   133 pc={(flags>0)?L131:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 125
;;   new tail = 133

;;   ======================================================
;;   -- basic block 15 from 140 to 141 -- after reload
;;   ======================================================

;;	  0-->   140 bx=sxn(bx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   141 [bx*0x8+r13]=ax                   :c2_decodern,(c2_p4+c2_p3)
;;	Ready list (final):  
;;   total time = 1
;;   new head = 140
;;   new tail = 141

deleting insn with uid = 238.
;;   ======================================================
;;   -- basic block 16 from 159 to 244 -- after reload
;;   ======================================================

;;	  0-->   239 bx=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  0-->   159 ax=r13                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   162 use ax                            :nothing
;;	  4-->   240 r12=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  8-->   241 r13=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 12-->   242 r14=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 16-->   243 bp=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 17-->   244 return                            :c2_decoder0
;;	Ready list (final):  
;;   total time = 17
;;   new head = 159
;;   new tail = 244

;;   ======================================================
;;   -- basic block 17 from 146 to 252 -- after reload
;;   ======================================================

;;	  0-->   146: debug __stream => [`stderr']     :nothing
;;	  0-->   147: debug __fmt => `*.LC4'           :nothing
;;	  0-->   150 di=[`stderr']                     :c2_decodern,c2_p2
;;	  0-->   148 dx=`*.LC4'                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   246 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   149 si=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   247 {r13=0;clobber flags;}            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   152 call <...>                        :c2_decoder0
;;	  4-->   252 pc=L153                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 4
;;   new head = 146
;;   new tail = 252

;;   ======================================================
;;   -- basic block 18 from 249 to 254 -- after reload
;;   ======================================================

;;	  0-->   249 {cx=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   254 pc=L63                            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 249
;;   new tail = 254





izp_allocarray

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 45[xmm8]
;;  ref usage 	r0={6d,10u} r1={15d,17u,2e} r2={8d,10u} r3={4d,12u} r4={18d,15u} r5={9d,7u} r6={3d,20u} r7={11d,32u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={34d,10u} r18={3d} r19={3d} r20={1d,1u} r21={18d,17u,2e} r22={18d,16u} r23={7d,4u} r24={5d,2u} r25={5d,2u} r26={11d,7u} r27={6d,2u} r28={5d,1u} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d,3u} r38={6d,3u} r39={4d,1u} r40={4d,1u} r41={8d,11u} r42={4d,10u} r43={3d,6u} r45={4d,1u} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 522{297d,221u,4e} in 149{146 regular + 3 call} insns.
(note 3 0 13 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 13 3 7 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 7 13 33 2 NOTE_INSN_FUNCTION_BEG)

(note 33 7 34 2 NOTE_INSN_DELETED)

(note 34 33 229 2 NOTE_INSN_DELETED)

(insn/f:TI 229 34 230 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg/f:DI 6 bp)) ../src/izp-gaussian.c:581 42 {*pushdi2_rex64}
     (nil))

(insn/f:TI 230 229 231 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) ../src/izp-gaussian.c:581 62 {*movdi_internal_rex64}
     (nil))

(insn/f 231 230 235 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 43 r14)) ../src/izp-gaussian.c:581 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn 235 231 232 2 (use (reg/f:DI 6 bp)) ../src/izp-gaussian.c:581 -1
     (nil))

(insn/f:TI 232 235 233 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 42 r13)) ../src/izp-gaussian.c:581 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f:TI 233 232 234 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) ../src/izp-gaussian.c:581 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f:TI 234 233 236 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) ../src/izp-gaussian.c:581 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(note 236 234 237 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 237 236 5 2 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) ../src/izp-gaussian.c:581 631 {blockage}
     (nil))

(insn:TI 5 237 4 2 (set (reg/v:SI 3 bx [orig:139 height ] [139])
        (reg:SI 4 si [ height ])) ../src/izp-gaussian.c:581 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ height ])
        (nil)))

(insn 4 5 19 2 (set (reg/v:SI 41 r12 [orig:138 width ] [138])
        (reg:SI 5 di [ width ])) ../src/izp-gaussian.c:581 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ width ])
        (nil)))

(insn 19 4 228 2 (set (reg:DI 5 di)
        (const_int 32 [0x20])) ../src/izp-gaussian.c:583 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 228 19 6 2 (set (reg:SI 4 si [141])
        (subreg:SI (plus:DI (reg:DI 3 bx [orig:139 height ] [139])
                (const_int 1 [0x1])) 0)) ../src/izp-gaussian.c:583 250 {*lea_2}
     (nil))

(insn 6 228 16 2 (set (reg/v:SI 43 r14 [orig:140 size ] [140])
        (reg:SI 1 dx [ size ])) ../src/izp-gaussian.c:581 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ size ])
        (nil)))

(insn:TI 16 6 17 2 (set (reg:DI 4 si [142])
        (sign_extend:DI (reg:SI 4 si [141]))) ../src/izp-gaussian.c:583 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 17 16 20 2 (parallel [
            (set (reg:DI 4 si [143])
                (ashift:DI (reg:DI 4 si [142])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:583 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 20 17 199 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memalign") [flags 0x41]  <function_decl 0x2ae3457b0b00 memalign>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:583 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 199 20 28 2 (set (reg:SI 4 si [146])
        (reg/v:SI 41 r12 [orig:138 width ] [138])) ../src/izp-gaussian.c:584 64 {*movsi_internal}
     (nil))

(insn 28 199 24 2 (set (reg:DI 5 di)
        (const_int 32 [0x20])) ../src/izp-gaussian.c:584 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 24 28 21 2 (parallel [
            (set (reg:SI 4 si [146])
                (mult:SI (reg:SI 4 si [146])
                    (reg/v:SI 3 bx [orig:139 height ] [139])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:584 333 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 21 24 23 2 (set (reg/v/f:DI 42 r13 [orig:62 idx ] [62])
        (reg:DI 0 ax)) ../src/izp-gaussian.c:583 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 144)
            (nil))))

(debug_insn 23 21 25 2 (var_location:DI idx (reg/v/f:DI 42 r13 [orig:62 idx ] [62])) ../src/izp-gaussian.c:583 -1
     (nil))

(insn:TI 25 23 26 2 (parallel [
            (set (reg:SI 4 si [146])
                (mult:SI (reg:SI 4 si [146])
                    (reg/v:SI 43 r14 [orig:140 size ] [140])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:584 333 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 26 25 29 2 (set (reg:DI 4 si [147])
        (sign_extend:DI (reg:SI 4 si [146]))) ../src/izp-gaussian.c:584 126 {*extendsidi2_rex64}
     (nil))

(call_insn:TI 29 26 32 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memalign") [flags 0x41]  <function_decl 0x2ae3457b0b00 memalign>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:584 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(debug_insn 32 29 35 2 (var_location:DI heap (reg/v/f:DI 0 ax [orig:69 heap ] [69])) ../src/izp-gaussian.c:584 -1
     (nil))

(insn:TI 35 32 36 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:69 heap ] [69])
            (const_int 0 [0]))) ../src/izp-gaussian.c:586 3 {*cmpdi_ccno_1}
     (nil))

(jump_insn:TI 36 35 173 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) ../src/izp-gaussian.c:586 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 434 [0x1b2])
            (nil)))
 -> 144)
;; End of basic block 2 -> ( 17 3)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  17 [4.3%]  (can_fallthru)
;; Succ edge  3 [95.7%]  (fallthru,can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  2 [95.7%]  (fallthru,can_fallthru)
(note 173 36 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 37 173 38 3 NOTE_INSN_DELETED)

(note 38 37 39 3 NOTE_INSN_DELETED)

(insn:TI 39 38 40 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 42 r13 [orig:62 idx ] [62])
            (const_int 0 [0]))) ../src/izp-gaussian.c:586 3 {*cmpdi_ccno_1}
     (nil))

(jump_insn:TI 40 39 41 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) ../src/izp-gaussian.c:586 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 434 [0x1b2])
            (nil)))
 -> 144)
;; End of basic block 3 -> ( 4 17)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  4 [95.7%]  (fallthru,can_fallthru)
;; Succ edge  17 [4.3%]  (can_fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  3 [95.7%]  (fallthru,can_fallthru)
(note 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(debug_insn 42 41 43 4 (var_location:SI i (const_int 0 [0])) -1
     (nil))

(insn:TI 43 42 44 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 3 bx [orig:139 height ] [139])
            (const_int 0 [0]))) ../src/izp-gaussian.c:587 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 44 43 45 4 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) ../src/izp-gaussian.c:587 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 138)
;; End of basic block 4 -> ( 5 15)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  5 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  15 [9.0%]  (can_fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  4 [91.0%]  (fallthru,can_fallthru)
(note 45 44 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 48 45 50 5 NOTE_INSN_DELETED)

(note 50 48 200 5 NOTE_INSN_DELETED)

(insn:TI 200 50 49 5 (set (reg:DI 1 dx [154])
        (reg/v/f:DI 42 r13 [orig:62 idx ] [62])) ../src/izp-gaussian.c:581 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 49 200 51 5 (parallel [
            (set (reg:DI 1 dx [154])
                (ashift:DI (reg:DI 1 dx [154])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:581 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 51 49 52 5 (parallel [
            (set (reg:DI 1 dx [156])
                (lshiftrt:DI (reg:DI 1 dx [154])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:581 533 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 52 51 53 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [156])
            (reg/v:SI 3 bx [orig:139 height ] [139]))) ../src/izp-gaussian.c:581 6 {*cmpsi_1}
     (nil))

(insn:TI 53 52 55 5 (set (reg:SI 1 dx [orig:101 prolog_loop_niters.955 ] [101])
        (if_then_else:SI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:SI 1 dx [156])
            (reg/v:SI 3 bx [orig:139 height ] [139]))) ../src/izp-gaussian.c:581 885 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn:TI 55 53 54 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:101 prolog_loop_niters.955 ] [101])
            (const_int 0 [0]))) ../src/izp-gaussian.c:581 2 {*cmpsi_ccno_1}
     (nil))

(insn 54 55 56 5 (set (reg:DI 4 si [orig:102 prolog_loop_niters.956 ] [102])
        (zero_extend:DI (reg:SI 1 dx [orig:101 prolog_loop_niters.955 ] [101]))) ../src/izp-gaussian.c:581 114 {*zero_extendsidi2_rex64}
     (nil))

(jump_insn:TI 56 54 57 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 168)
            (pc))) ../src/izp-gaussian.c:581 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 168)
;; End of basic block 5 -> ( 6 18)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  6 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  18 (can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru,can_fallthru)
(note 57 56 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 61 57 58 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 3 bx [orig:139 height ] [139])
            (reg:SI 1 dx [orig:101 prolog_loop_niters.955 ] [101]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (nil))

(insn 58 61 60 6 (set (mem/f:DI (reg/v/f:DI 42 r13 [orig:62 idx ] [62]) [2 MEM[base: D.8892_146, offset: 0B]+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:69 heap ] [69])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(debug_insn 60 58 62 6 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))

(jump_insn:TI 62 60 164 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 138)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 138)
;; End of basic block 6 -> ( 7 15)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  7 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  15 (can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru,can_fallthru)
(note 164 62 8 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 8 164 63 7 (set (reg/v:SI 2 cx [orig:113 i ] [113])
        (const_int 1 [0x1])) ../src/izp-gaussian.c:587 64 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  8 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 7 18) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]

;; Pred edge  7 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  18 [100.0%]  (can_fallthru)
(code_label 63 8 64 8 91 "" [1 uses])

(note 64 63 201 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 201 64 65 8 (set (reg:SI 38 r9 [orig:110 niters.959 ] [110])
        (reg/v:SI 3 bx [orig:139 height ] [139])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 65 201 202 8 (parallel [
            (set (reg:SI 38 r9 [orig:110 niters.959 ] [110])
                (minus:SI (reg:SI 38 r9 [orig:110 niters.959 ] [110])
                    (reg:SI 1 dx [orig:101 prolog_loop_niters.955 ] [101])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 291 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:101 prolog_loop_niters.955 ] [101])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 202 65 66 8 (set (reg:SI 5 di [orig:111 bnd.960 ] [111])
        (reg:SI 38 r9 [orig:110 niters.959 ] [110])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 66 202 227 8 (parallel [
            (set (reg:SI 5 di [orig:111 bnd.960 ] [111])
                (lshiftrt:SI (reg:SI 5 di [orig:111 bnd.960 ] [111])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 531 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 227 66 68 8 (set (reg:SI 37 r8 [orig:112 ratio_mult_vf.961 ] [112])
        (subreg:SI (mult:DI (reg:DI 5 di [orig:111 bnd.960 ] [111])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn:TI 68 227 69 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 37 r8 [orig:112 ratio_mult_vf.961 ] [112])
            (const_int 0 [0]))) ../src/izp-gaussian.c:588 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 69 68 70 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 113)
;; End of basic block 8 -> ( 9 13)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  9 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  13 (can_fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  kill	 17 [flags]

;; Pred edge  8 [100.0%]  (fallthru,can_fallthru)
(note 70 69 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 85 70 225 9 NOTE_INSN_DELETED)

(insn:TI 225 85 92 9 (set (reg:SI 40 r11 [159])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:113 i ] [113])
                (const_int 2 [0x2])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 92 225 78 9 (set (reg:V4SI 28 xmm7 [186])
        (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])
        (nil)))

(insn 78 92 226 9 (set (reg:V4SI 45 xmm8 [orig:123 vect_cst_.965 ] [123])
        (mem/u/c/i:V4SI (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5 S16 A128])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
            ])
        (nil)))

(insn:TI 226 78 203 9 (set (reg:SI 39 r10 [160])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:113 i ] [113])
                (const_int 3 [0x3])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 203 226 224 9 (set (reg:SI 22 xmm1)
        (reg:SI 40 r11 [159])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 40 r11 [159])
        (nil)))

(insn:TI 224 203 204 9 (set (reg:SI 1 dx [158])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:113 i ] [113])
                (const_int 1 [0x1])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 204 224 74 9 (set (reg:SI 21 xmm0)
        (reg:SI 39 r10 [160])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 39 r10 [160])
        (nil)))

(insn:TI 74 204 206 9 (set (reg:V2SI 22 xmm1 [161])
        (vec_concat:V2SI (reg:SI 22 xmm1)
            (reg:SI 21 xmm0))) ../src/izp-gaussian.c:588 1791 {*vec_concatv2si_sse2}
     (expr_list:REG_DEAD (reg:SI 21 xmm0)
        (nil)))

(insn 206 74 205 9 (set (reg:SI 23 xmm2)
        (reg:SI 1 dx [158])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [158])
        (nil)))

(insn 205 206 75 9 (set (reg:SI 21 xmm0)
        (reg/v:SI 2 cx [orig:113 i ] [113])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 75 205 76 9 (set (reg:V2SI 21 xmm0 [162])
        (vec_concat:V2SI (reg:SI 21 xmm0)
            (reg:SI 23 xmm2))) ../src/izp-gaussian.c:588 1791 {*vec_concatv2si_sse2}
     (expr_list:REG_DEAD (reg:SI 23 xmm2)
        (nil)))

(insn 76 75 207 9 (set (reg:V4SI 21 xmm0 [orig:122 vect_vec_iv_.966 ] [122])
        (vec_concat:V4SI (reg:V2SI 21 xmm0 [162])
            (reg:V2SI 22 xmm1 [161]))) ../src/izp-gaussian.c:588 1794 {*vec_concatv4si_1}
     (expr_list:REG_DEAD (reg:V2SI 22 xmm1 [161])
        (nil)))

(insn 207 76 79 9 (set (reg:SI 22 xmm1)
        (reg/v:SI 41 r12 [orig:138 width ] [138])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 79 207 208 9 (set (reg:V4SI 25 xmm4 [orig:125 vect_cst_.968 ] [125])
        (vec_duplicate:V4SI (reg:SI 22 xmm1))) ../src/izp-gaussian.c:588 1785 {*vec_dupv4si}
     (expr_list:REG_DEAD (reg:SI 22 xmm1)
        (nil)))

(insn 208 79 209 9 (set (reg:SI 23 xmm2)
        (reg/v:SI 43 r14 [orig:140 size ] [140])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn 209 208 81 9 (set (reg:DI 22 xmm1)
        (reg/v/f:DI 0 ax [orig:69 heap ] [69])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 81 209 83 9 (set (reg:V4SI 24 xmm3 [orig:127 vect_cst_.970 ] [127])
        (vec_duplicate:V4SI (reg:SI 23 xmm2))) ../src/izp-gaussian.c:588 1785 {*vec_dupv4si}
     (expr_list:REG_DEAD (reg:SI 23 xmm2)
        (nil)))

(insn 83 81 86 9 (set (reg:V2DI 22 xmm1)
        (vec_duplicate:V2DI (reg:DI 22 xmm1))) ../src/izp-gaussian.c:588 1787 {*vec_dupv2di_sse3}
     (nil))

(insn 86 83 210 9 (set (reg:DI 1 dx [orig:104 ivtmp.998 ] [104])
        (plus:DI (mult:DI (reg:DI 4 si [orig:102 prolog_loop_niters.956 ] [102])
                (const_int 8 [0x8]))
            (reg/v/f:DI 42 r13 [orig:62 idx ] [62]))) ../src/izp-gaussian.c:588 249 {*lea_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:102 prolog_loop_niters.956 ] [102])
        (nil)))

(insn:TI 210 86 248 9 (set (reg:V2DI 23 xmm2 [orig:131 vect_cst_.973 ] [131])
        (reg:V2DI 22 xmm1)) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1)
        (nil)))

(insn 248 210 250 9 (parallel [
            (set (reg:DI 4 si [orig:103 ivtmp.996 ] [103])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 250 248 251 9 (set (pc)
        (label_ref 106)) 606 {jump}
     (nil)
 -> 106)
;; End of basic block 9 -> ( 11)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]


;; Succ edge  11 [100.0%]  (can_fallthru)

(barrier 251 250 172)

;; Start of basic block ( 11) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; lr  use 	 6 [bp] 7 [sp] 27 [xmm6]
;; lr  def 	 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  gen 	 21 [xmm0]
;; live  kill	

;; Pred edge  11 [91.0%]  (can_fallthru)
(code_label 172 251 171 10 99 "" [1 uses])

(note 171 172 10 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 10 171 106 10 (set (reg:V4SI 21 xmm0 [orig:122 vect_vec_iv_.966 ] [122])
        (reg:V4SI 27 xmm6 [orig:124 vect_vec_iv_.966 ] [124])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 27 xmm6 [orig:124 vect_vec_iv_.966 ] [124])
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]


;; Succ edge  11 [100.0%]  (fallthru,dfs_back,can_fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 45 [xmm8]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  kill	 17 [flags]

;; Pred edge  10 [100.0%]  (fallthru,dfs_back,can_fallthru)
;; Pred edge  9 [100.0%]  (can_fallthru)
(code_label 106 10 87 11 94 "" [1 uses])

(note 87 106 214 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 214 87 211 11 (set (reg:V1TI 26 xmm5)
        (reg:V1TI 25 xmm4)) ../src/izp-gaussian.c:588 1125 {*movv1ti_internal}
     (nil))

(insn 211 214 212 11 (set (reg:V4SI 27 xmm6 [orig:124 vect_vec_iv_.966 ] [124])
        (reg:V4SI 21 xmm0 [orig:122 vect_vec_iv_.966 ] [122])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn 212 211 186 11 (set (reg:V4SI 22 xmm1)
        (reg:V4SI 21 xmm0 [orig:122 vect_vec_iv_.966 ] [122])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 186 212 104 11 (set (reg:V1TI 26 xmm5)
        (lshiftrt:V1TI (reg:V1TI 26 xmm5)
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn 104 186 88 11 (parallel [
            (set (reg:SI 4 si [orig:103 ivtmp.996 ] [103])
                (plus:SI (reg:SI 4 si [orig:103 ivtmp.996 ] [103])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 88 104 185 11 (set (reg:V4SI 27 xmm6 [orig:124 vect_vec_iv_.966 ] [124])
        (plus:V4SI (reg:V4SI 27 xmm6 [orig:124 vect_vec_iv_.966 ] [124])
            (reg:V4SI 45 xmm8 [orig:123 vect_cst_.965 ] [123]))) ../src/izp-gaussian.c:588 1570 {*addv4si3}
     (expr_list:REG_EQUAL (plus:V4SI (reg:V4SI 21 xmm0 [orig:122 vect_vec_iv_.966 ] [122])
            (const_vector:V4SI [
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                ]))
        (nil)))

(insn:TI 185 88 187 11 (set (reg:V1TI 21 xmm0 [188])
        (lshiftrt:V1TI (reg:V1TI 21 xmm0 [orig:122 vect_vec_iv_.966 ] [122])
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 187 185 218 11 (set (reg:V2DI 21 xmm0 [190])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [188])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 26 xmm5 [189])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (expr_list:REG_DEAD (reg:V4SI 26 xmm5 [189])
        (nil)))

(insn 218 187 184 11 (set (reg:V1TI 26 xmm5)
        (reg:V1TI 24 xmm3)) ../src/izp-gaussian.c:588 1125 {*movv1ti_internal}
     (nil))

(insn:TI 184 218 193 11 (set (reg:V2DI 22 xmm1)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 25 xmm4 [orig:125 vect_cst_.968 ] [125])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (nil))

(insn:TI 193 184 189 11 (set (reg:V1TI 26 xmm5)
        (lshiftrt:V1TI (reg:V1TI 26 xmm5)
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 189 193 188 11 (set (reg:V4SI 21 xmm0 [192])
        (vec_select:V4SI (reg:V4SI 21 xmm0 [190])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn:TI 188 189 190 11 (set (reg:V4SI 22 xmm1 [191])
        (vec_select:V4SI (reg:V4SI 22 xmm1 [187])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn 190 188 216 11 (set (reg:V4SI 22 xmm1 [167])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 22 xmm1 [191])
                (reg:V4SI 21 xmm0 [192]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 21 xmm0 [192])
        (nil)))

(insn 216 190 192 11 (set (reg:V4SI 21 xmm0)
        (reg:V4SI 22 xmm1 [167])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 192 216 194 11 (set (reg:V1TI 22 xmm1 [194])
        (lshiftrt:V1TI (reg:V1TI 22 xmm1 [167])
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 194 192 191 11 (set (reg:V2DI 22 xmm1 [196])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [194])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 26 xmm5 [195])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (expr_list:REG_DEAD (reg:V4SI 26 xmm5 [195])
        (nil)))

(insn:TI 191 194 196 11 (set (reg:V2DI 21 xmm0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 24 xmm3 [orig:127 vect_cst_.970 ] [127])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (nil))

(insn:TI 196 191 195 11 (set (reg:V4SI 22 xmm1 [198])
        (vec_select:V4SI (reg:V4SI 22 xmm1 [196])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn:TI 195 196 197 11 (set (reg:V4SI 21 xmm0 [197])
        (vec_select:V4SI (reg:V4SI 21 xmm0 [193])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn 197 195 220 11 (set (reg:V4SI 21 xmm0 [orig:128 vect_var_.969 ] [128])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 21 xmm0 [197])
                (reg:V4SI 22 xmm1 [198]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [198])
        (nil)))

(insn 220 197 93 11 (set (reg:V4SI 22 xmm1 [171])
        (reg:V4SI 28 xmm7 [186])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 93 220 221 11 (set (reg:V4SI 22 xmm1 [171])
        (gt:V4SI (reg:V4SI 22 xmm1 [171])
            (reg:V4SI 21 xmm0 [orig:128 vect_var_.969 ] [128]))) ../src/izp-gaussian.c:588 1665 {sse2_gtv4si3}
     (expr_list:REG_EQUAL (gt:V4SI (const_vector:V4SI [
                    (const_int 0 [0])
                    (const_int 0 [0])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ])
            (reg:V4SI 21 xmm0 [orig:128 vect_var_.969 ] [128]))
        (nil)))

(insn 221 93 94 11 (set (reg:V4SI 26 xmm5)
        (reg:V4SI 21 xmm0 [orig:128 vect_var_.969 ] [128])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 94 221 99 11 (set (reg:V4SI 26 xmm5)
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 26 xmm5)
                (reg:V4SI 22 xmm1 [171]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (nil))

(insn 99 94 95 11 (set (reg:V4SI 21 xmm0 [173])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 21 xmm0 [orig:128 vect_var_.969 ] [128])
                (reg:V4SI 22 xmm1 [171]))
            (parallel [
                    (const_int 2 [0x2])
                    (const_int 6 [0x6])
                    (const_int 3 [0x3])
                    (const_int 7 [0x7])
                ]))) ../src/izp-gaussian.c:588 1750 {vec_interleave_highv4si}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [171])
        (nil)))

(insn 95 99 100 11 (set (reg:V2DI 26 xmm5 [172])
        (plus:V2DI (reg:V2DI 26 xmm5 [168])
            (reg:V2DI 23 xmm2 [orig:131 vect_cst_.973 ] [131]))) ../src/izp-gaussian.c:588 1572 {*addv2di3}
     (expr_list:REG_EQUIV (mem:V2DI (reg:DI 1 dx [orig:104 ivtmp.998 ] [104]) [2 MEM[base: D.8900_92, offset: 0B]+0 S16 A128])
        (nil)))

(insn:TI 100 95 96 11 (set (reg:V2DI 21 xmm0 [177])
        (plus:V2DI (reg:V2DI 21 xmm0 [173])
            (reg:V2DI 23 xmm2 [orig:131 vect_cst_.973 ] [131]))) ../src/izp-gaussian.c:588 1572 {*addv2di3}
     (expr_list:REG_EQUIV (mem:V2DI (plus:DI (reg:DI 1 dx [orig:104 ivtmp.998 ] [104])
                (const_int 16 [0x10])) [2 MEM[base: D.8900_92, offset: 16B]+0 S16 A128])
        (nil)))

(insn 96 100 101 11 (set (mem:V2DI (reg:DI 1 dx [orig:104 ivtmp.998 ] [104]) [2 MEM[base: D.8900_92, offset: 0B]+0 S16 A128])
        (reg:V2DI 26 xmm5 [172])) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 26 xmm5 [172])
        (nil)))

(insn:TI 101 96 103 11 (set (mem:V2DI (plus:DI (reg:DI 1 dx [orig:104 ivtmp.998 ] [104])
                (const_int 16 [0x10])) [2 MEM[base: D.8900_92, offset: 16B]+0 S16 A128])
        (reg:V2DI 21 xmm0 [177])) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 21 xmm0 [177])
        (nil)))

(debug_insn 103 101 105 11 (var_location:SI i (debug_expr:SI D#15)) -1
     (nil))

(insn 105 103 107 11 (parallel [
            (set (reg:DI 1 dx [orig:104 ivtmp.998 ] [104])
                (plus:DI (reg:DI 1 dx [orig:104 ivtmp.998 ] [104])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 107 105 108 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 4 si [orig:103 ivtmp.996 ] [103])
            (reg:SI 5 di [orig:111 bnd.960 ] [111]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 108 107 109 11 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 172)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 172)
;; End of basic block 11 -> ( 10 12)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8]


;; Succ edge  10 [91.0%]  (can_fallthru)
;; Succ edge  12 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  11 [9.0%]  (fallthru,can_fallthru,loop_exit)
(note 109 108 110 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 110 109 111 12 (parallel [
            (set (reg/v:SI 2 cx [orig:113 i ] [113])
                (plus:SI (reg/v:SI 2 cx [orig:113 i ] [113])
                    (reg:SI 37 r8 [orig:112 ratio_mult_vf.961 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 111 110 112 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 38 r9 [orig:110 niters.959 ] [110])
            (reg:SI 37 r8 [orig:112 ratio_mult_vf.961 ] [112]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:110 niters.959 ] [110])
        (expr_list:REG_DEAD (reg:SI 37 r8 [orig:112 ratio_mult_vf.961 ] [112])
            (nil))))

(jump_insn:TI 112 111 113 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 138)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 138)
;; End of basic block 12 -> ( 13 15)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  13 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  15 (can_fallthru)

;; Start of basic block ( 12 8) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  12 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  8 (can_fallthru)
(code_label 113 112 114 13 93 "" [1 uses])

(note 114 113 122 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 122 114 223 13 NOTE_INSN_DELETED)

(insn:TI 223 122 117 13 (set (reg:SI 4 si [178])
        (reg/v:SI 41 r12 [orig:138 width ] [138])) ../src/izp-gaussian.c:581 64 {*movsi_internal}
     (nil))

(insn 117 223 121 13 (parallel [
            (set (reg:SI 41 r12 [180])
                (mult:SI (reg/v:SI 41 r12 [orig:138 width ] [138])
                    (reg/v:SI 2 cx [orig:113 i ] [113])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:581 333 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 121 117 115 13 (set (reg:DI 1 dx [orig:182 i ] [182])
        (sign_extend:DI (reg/v:SI 2 cx [orig:113 i ] [113]))) ../src/izp-gaussian.c:581 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 115 121 123 13 (parallel [
            (set (reg:SI 4 si [178])
                (mult:SI (reg:SI 4 si [178])
                    (reg/v:SI 43 r14 [orig:140 size ] [140])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:581 333 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 123 115 118 13 (set (reg:DI 1 dx [orig:74 ivtmp.987 ] [74])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:182 i ] [182])
                (const_int 8 [0x8]))
            (reg/v/f:DI 42 r13 [orig:62 idx ] [62]))) ../src/izp-gaussian.c:581 249 {*lea_1}
     (nil))

(insn:TI 118 123 116 13 (parallel [
            (set (reg:SI 41 r12 [180])
                (mult:SI (reg:SI 41 r12 [180])
                    (reg/v:SI 43 r14 [orig:140 size ] [140])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:581 333 {*mulsi3_1}
     (expr_list:REG_DEAD (reg/v:SI 43 r14 [orig:140 size ] [140])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 116 118 119 13 (set (reg:DI 4 si [orig:88 D.8874 ] [88])
        (sign_extend:DI (reg:SI 4 si [178]))) ../src/izp-gaussian.c:581 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 119 116 120 13 (set (reg:DI 41 r12 [181])
        (sign_extend:DI (reg:SI 41 r12 [180]))) ../src/izp-gaussian.c:581 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 120 119 131 13 (parallel [
            (set (reg:DI 41 r12 [orig:117 ivtmp.985 ] [117])
                (plus:DI (reg/v/f:DI 0 ax [orig:69 heap ] [69])
                    (reg:DI 41 r12 [181])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:581 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  14 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 14 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]

;; Pred edge  14 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  13 [100.0%]  (fallthru,can_fallthru)
(code_label 131 120 124 14 96 "" [1 uses])

(note 124 131 126 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 126 124 128 14 (parallel [
            (set (reg/v:SI 2 cx [orig:113 i ] [113])
                (plus:SI (reg/v:SI 2 cx [orig:113 i ] [113])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(debug_insn 128 126 125 14 (var_location:SI i (reg/v:SI 2 cx [orig:113 i ] [113])) -1
     (nil))

(insn 125 128 129 14 (set (mem/f:DI (reg:DI 1 dx [orig:74 ivtmp.987 ] [74]) [2 MEM[base: D.8882_24, offset: 0B]+0 S8 A64])
        (reg:DI 41 r12 [orig:117 ivtmp.985 ] [117])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(insn 129 125 130 14 (parallel [
            (set (reg:DI 41 r12 [orig:117 ivtmp.985 ] [117])
                (plus:DI (reg:DI 41 r12 [orig:117 ivtmp.985 ] [117])
                    (reg:DI 4 si [orig:88 D.8874 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 130 129 132 14 (parallel [
            (set (reg:DI 1 dx [orig:74 ivtmp.987 ] [74])
                (plus:DI (reg:DI 1 dx [orig:74 ivtmp.987 ] [74])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 132 130 133 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 3 bx [orig:139 height ] [139])
            (reg/v:SI 2 cx [orig:113 i ] [113]))) ../src/izp-gaussian.c:587 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 133 132 138 14 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 131)
            (pc))) ../src/izp-gaussian.c:587 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 131)
;; End of basic block 14 -> ( 14 15)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  14 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  15 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 14 4 6 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 3 [bx]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; live  gen 	 3 [bx]
;; live  kill	

;; Pred edge  14 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  4 [9.0%]  (can_fallthru)
;; Pred edge  6 (can_fallthru)
;; Pred edge  12 (can_fallthru)
(code_label 138 133 139 15 90 "" [3 uses])

(note 139 138 140 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:TI 140 139 141 15 (set (reg:DI 3 bx [orig:184 height ] [184])
        (sign_extend:DI (reg/v:SI 3 bx [orig:139 height ] [139]))) ../src/izp-gaussian.c:590 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 141 140 153 15 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 3 bx [orig:184 height ] [184])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 42 r13 [orig:62 idx ] [62])) [2 *D.6925_28+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:69 heap ] [69])) ../src/izp-gaussian.c:590 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx [orig:184 height ] [184])
        (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:69 heap ] [69])
            (nil))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 7 [sp] 20 [frame] 42 [r13]
;; live  out 	 7 [sp] 20 [frame] 42 [r13]


;; Succ edge  16 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 15 17) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 7 [sp] 20 [frame] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  17 [100.0%]  (can_fallthru)
(code_label 153 141 154 16 97 "" [1 uses])

(note 154 153 256 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 256 154 239 16 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 239 256 159 16 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:596 52 {*popdi1}
     (nil))

(insn 159 239 162 16 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 42 r13 [orig:62 idx ] [62])) ../src/izp-gaussian.c:596 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:62 idx ] [62])
        (nil)))

(insn 162 159 240 16 (use (reg/i:DI 0 ax)) ../src/izp-gaussian.c:596 -1
     (nil))

(insn:TI 240 162 241 16 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:596 52 {*popdi1}
     (nil))

(insn:TI 241 240 242 16 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:596 52 {*popdi1}
     (nil))

(insn:TI 242 241 243 16 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:596 52 {*popdi1}
     (nil))

(insn/f:TI 243 242 244 16 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:596 52 {*popdi1}
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))

(jump_insn:TI 244 243 245 16 (return) ../src/izp-gaussian.c:596 634 {return_internal}
     (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 245 244 144)

;; Start of basic block ( 3 2) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  3 [4.3%]  (can_fallthru)
;; Pred edge  2 [4.3%]  (can_fallthru)
(code_label 144 245 145 17 89 "" [2 uses])

(note 145 144 146 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(debug_insn 146 145 147 17 (var_location:DI __stream (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2ae34564c320 stderr>) [2 stderr+0 S8 A64])) ../src/izp-gaussian.c:593 -1
     (nil))

(debug_insn 147 146 150 17 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ae345ba6dc0 *.LC4>)) ../src/izp-gaussian.c:593 -1
     (nil))

(insn:TI 150 147 148 17 (set (reg:DI 5 di)
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2ae34564c320 stderr>) [2 stderr+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (nil))

(insn 148 150 246 17 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ae345ba6dc0 *.LC4>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (nil))

(insn 246 148 149 17 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 149 246 247 17 (set (reg:SI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 64 {*movsi_internal}
     (nil))

(insn 247 149 152 17 (parallel [
            (set (reg/v/f:DI 42 r13 [orig:62 idx ] [62])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 152 247 252 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2ae34567a300 __fprintf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(jump_insn 252 152 253 17 (set (pc)
        (label_ref 153)) 606 {jump}
     (nil)
 -> 153)
;; End of basic block 17 -> ( 16)
;; lr  out 	 7 [sp] 20 [frame] 42 [r13]
;; live  out 	 7 [sp] 20 [frame] 42 [r13]


;; Succ edge  16 [100.0%]  (can_fallthru)

(barrier 253 252 168)

;; Start of basic block ( 5) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]

;; Pred edge  5 (can_fallthru)
(code_label 168 253 167 18 98 "" [1 uses])

(note 167 168 249 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:TI 249 167 254 18 (parallel [
            (set (reg:DI 2 cx [orig:113 i ] [113])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:581 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 254 249 255 18 (set (pc)
        (label_ref 63)) 606 {jump}
     (nil)
 -> 63)
;; End of basic block 18 -> ( 8)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  8 [100.0%]  (can_fallthru)

(barrier 255 254 198)

(note 198 255 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function izp_gaussianMatrix (izp_gaussianMatrix)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 36 n_edges 57 count 53 (  1.5)


izp_gaussianMatrix

Dataflow summary:
def_info->table_size = 437, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15] 45[xmm8]
;;  ref usage 	r0={21d,30u,2e} r1={30d,33u} r2={20d,29u,1e} r3={3d,16u} r4={26d,23u} r5={14d,12u} r6={3d,52u} r7={15d,56u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={85d,24u} r18={4d} r19={4d} r20={1d,1u} r21={36d,40u,2e} r22={22d,24u} r23={8d,5u} r24={6d,2u} r25={6d,2u} r26={12d,7u} r27={7d,2u} r28={6d,1u} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={7d,7u} r38={9d,6u} r39={6d,4u} r40={7d,4u} r41={3d,16u} r42={4d,12u,1e} r43={4d,7u} r44={6d,8u} r45={5d,1u} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 902{472d,424u,6e} in 289{285 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 0 )->[2]->( 34 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 2 )->[3]->( 4 34 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 3 )->[4]->( 5 15 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 4 )->[5]->( 6 35 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 1 [dx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 5 )->[6]->( 7 15 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 7 35 )->[8]->( 9 13 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 4 [si] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]

( 11 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; lr  use 	 6 [bp] 7 [sp] 27 [xmm6]
;; lr  def 	 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; live  gen 	 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]

( 10 9 )->[11]->( 10 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 45 [xmm8]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]

( 11 )->[12]->( 13 15 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 12 8 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 14 13 )->[14]->( 14 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 14 4 6 12 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 1 [dx]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 15 34 )->[16]->( 17 33 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 22 [xmm1] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 22 [xmm1] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]

( 16 20 )->[17]->( 18 20 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]

( 17 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0] 43 [r14]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 21 [xmm0] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 19 18 )->[19]->( 19 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 19 17 )->[20]->( 17 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]

( 20 )->[21]->( 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 17 [flags] 21 [xmm0] 23 [xmm2] 38 [r9]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13]
;; live  gen 	 21 [xmm0] 23 [xmm2] 38 [r9]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]

( 32 21 )->[22]->( 23 32 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]

( 22 )->[23]->( 24 26 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 38 [r9] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]

( 23 24 )->[24]->( 24 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]

( 24 )->[25]->( 26 32 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]

( 23 25 )->[26]->( 27 30 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags] 39 [r10] 40 [r11]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 5 [di] 17 [flags] 39 [r10] 40 [r11]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

( 26 )->[27]->( 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 2 [cx] 4 [si]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

( 28 27 )->[28]->( 28 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 23 [xmm2]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

( 28 )->[29]->( 30 32 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 39 [r10] 40 [r11]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]

( 29 26 )->[30]->( 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 1 [dx]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]

( 31 30 )->[31]->( 31 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]

( 31 22 29 25 )->[32]->( 22 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 38 [r9] 41 [r12]
;; lr  def 	 17 [flags] 38 [r9]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags] 38 [r9]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]

( 32 16 )->[33]->( 1 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp] 20 [frame] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 3 2 )->[34]->( 16 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 5 )->[35]->( 8 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 33 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(20){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 54 to worklist
  Adding insn 50 to worklist
  Adding insn 47 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 13 to worklist
  Adding insn 494 to worklist
  Adding insn 492 to worklist
  Adding insn 490 to worklist
  Adding insn 489 to worklist
  Adding insn 488 to worklist
  Adding insn 487 to worklist
  Adding insn 486 to worklist
  Adding insn 484 to worklist
  Adding insn 58 to worklist
  Adding insn 62 to worklist
  Adding insn 60 to worklist
  Adding insn 74 to worklist
  Adding insn 80 to worklist
  Adding insn 78 to worklist
  Adding insn 76 to worklist
  Adding insn 87 to worklist
  Adding insn 515 to worklist
  Adding insn 125 to worklist
  Adding insn 120 to worklist
  Adding insn 118 to worklist
  Adding insn 113 to worklist
  Adding insn 129 to worklist
  Adding insn 150 to worklist
  Adding insn 145 to worklist
  Adding insn 142 to worklist
  Adding insn 158 to worklist
  Adding insn 191 to worklist
  Adding insn 189 to worklist
  Adding insn 188 to worklist
  Adding insn 186 to worklist
  Adding insn 185 to worklist
  Adding insn 179 to worklist
  Adding insn 454 to worklist
  Adding insn 173 to worklist
  Adding insn 172 to worklist
  Adding insn 234 to worklist
  Adding insn 231 to worklist
  Adding insn 230 to worklist
  Adding insn 464 to worklist
  Adding insn 461 to worklist
  Adding insn 220 to worklist
  Adding insn 216 to worklist
  Adding insn 215 to worklist
  Adding insn 211 to worklist
  Adding insn 209 to worklist
  Adding insn 206 to worklist
  Adding insn 425 to worklist
  Adding insn 424 to worklist
  Adding insn 227 to worklist
  Adding insn 224 to worklist
  Adding insn 223 to worklist
  Adding insn 247 to worklist
  Adding insn 295 to worklist
  Adding insn 292 to worklist
  Adding insn 308 to worklist
  Adding insn 320 to worklist
  Adding insn 316 to worklist
  Adding insn 313 to worklist
  Adding insn 324 to worklist
  Adding insn 332 to worklist
  Adding insn 260 to worklist
  Adding insn 255 to worklist
  Adding insn 253 to worklist
  Adding insn 264 to worklist
  Adding insn 280 to worklist
  Adding insn 276 to worklist
  Adding insn 273 to worklist
  Adding insn 289 to worklist
  Adding insn 286 to worklist
  Adding insn 503 to worklist
  Adding insn 349 to worklist
  Adding insn 517 to worklist
  Adding insn 169 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 519 to worklist
Finished finding needed instructions:
processing block 33 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 502 to worklist
  Adding insn 501 to worklist
  Adding insn 500 to worklist
  Adding insn 499 to worklist
  Adding insn 498 to worklist
  Adding insn 497 to worklist
  Adding insn 496 to worklist
  Adding insn 346 to worklist
processing block 32 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
  Adding insn 288 to worklist
  Adding insn 287 to worklist
processing block 31 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
  Adding insn 279 to worklist
  Adding insn 277 to worklist
  Adding insn 274 to worklist
  Adding insn 272 to worklist
  Adding insn 271 to worklist
processing block 30 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
  Adding insn 268 to worklist
  Adding insn 266 to worklist
processing block 29 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
  Adding insn 263 to worklist
  Adding insn 262 to worklist
processing block 28 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
  Adding insn 259 to worklist
  Adding insn 257 to worklist
  Adding insn 256 to worklist
  Adding insn 252 to worklist
  Adding insn 251 to worklist
processing block 27 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
  Adding insn 506 to worklist
  Adding insn 505 to worklist
  Adding insn 335 to worklist
processing block 26 lr out =  0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
  Adding insn 331 to worklist
  Adding insn 470 to worklist
  Adding insn 328 to worklist
  Adding insn 469 to worklist
  Adding insn 327 to worklist
  Adding insn 468 to worklist
processing block 25 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
  Adding insn 323 to worklist
processing block 24 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
  Adding insn 319 to worklist
  Adding insn 317 to worklist
  Adding insn 314 to worklist
  Adding insn 312 to worklist
  Adding insn 311 to worklist
processing block 23 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
  Adding insn 307 to worklist
  Adding insn 507 to worklist
  Adding insn 306 to worklist
  Adding insn 305 to worklist
  Adding insn 304 to worklist
  Adding insn 303 to worklist
  Adding insn 302 to worklist
  Adding insn 301 to worklist
  Adding insn 300 to worklist
  Adding insn 467 to worklist
  Adding insn 299 to worklist
  Adding insn 297 to worklist
processing block 22 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
  Adding insn 294 to worklist
processing block 21 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
  Adding insn 466 to worklist
  Adding insn 336 to worklist
  Adding insn 465 to worklist
  Adding insn 508 to worklist
processing block 20 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 226 to worklist
  Adding insn 225 to worklist
processing block 19 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 219 to worklist
  Adding insn 217 to worklist
  Adding insn 212 to worklist
  Adding insn 427 to worklist
  Adding insn 210 to worklist
  Adding insn 426 to worklist
  Adding insn 474 to worklist
  Adding insn 473 to worklist
  Adding insn 472 to worklist
  Adding insn 471 to worklist
  Adding insn 203 to worklist
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
  Adding insn 199 to worklist
  Adding insn 457 to worklist
  Adding insn 198 to worklist
  Adding insn 456 to worklist
processing block 18 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 509 to worklist
  Adding insn 242 to worklist
  Adding insn 241 to worklist
  Adding insn 462 to worklist
  Adding insn 240 to worklist
  Adding insn 239 to worklist
  Adding insn 238 to worklist
  Adding insn 459 to worklist
  Adding insn 236 to worklist
processing block 17 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 233 to worklist
processing block 16 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 190 to worklist
  Adding insn 477 to worklist
  Adding insn 510 to worklist
  Adding insn 183 to worklist
  Adding insn 182 to worklist
  Adding insn 181 to worklist
  Adding insn 455 to worklist
  Adding insn 476 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 175 to worklist
  Adding insn 452 to worklist
  Adding insn 475 to worklist
processing block 34 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 512 to worklist
  Adding insn 511 to worklist
  Adding insn 167 to worklist
  Adding insn 166 to worklist
  Adding insn 165 to worklist
processing block 10 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
  Adding insn 17 to worklist
processing block 15 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 157 to worklist
processing block 14 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 149 to worklist
  Adding insn 147 to worklist
  Adding insn 146 to worklist
  Adding insn 143 to worklist
processing block 13 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 140 to worklist
  Adding insn 138 to worklist
  Adding insn 137 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
  Adding insn 134 to worklist
  Adding insn 451 to worklist
  Adding insn 133 to worklist
  Adding insn 478 to worklist
processing block 12 lr out =  0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 128 to worklist
  Adding insn 127 to worklist
processing block 11 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
  Adding insn 124 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
  Adding insn 117 to worklist
  Adding insn 116 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
  Adding insn 449 to worklist
  Adding insn 110 to worklist
  Adding insn 448 to worklist
  Adding insn 422 to worklist
  Adding insn 421 to worklist
  Adding insn 420 to worklist
  Adding insn 419 to worklist
  Adding insn 418 to worklist
  Adding insn 446 to worklist
  Adding insn 417 to worklist
  Adding insn 416 to worklist
  Adding insn 444 to worklist
  Adding insn 415 to worklist
  Adding insn 414 to worklist
  Adding insn 413 to worklist
  Adding insn 412 to worklist
  Adding insn 411 to worklist
  Adding insn 410 to worklist
  Adding insn 442 to worklist
  Adding insn 409 to worklist
  Adding insn 440 to worklist
  Adding insn 104 to worklist
  Adding insn 439 to worklist
processing block 9 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
  Adding insn 109 to worklist
  Adding insn 513 to worklist
  Adding insn 102 to worklist
  Adding insn 438 to worklist
  Adding insn 99 to worklist
  Adding insn 437 to worklist
  Adding insn 97 to worklist
  Adding insn 436 to worklist
  Adding insn 374 to worklist
  Adding insn 96 to worklist
  Adding insn 94 to worklist
  Adding insn 93 to worklist
  Adding insn 435 to worklist
  Adding insn 434 to worklist
  Adding insn 92 to worklist
  Adding insn 433 to worklist
  Adding insn 432 to worklist
  Adding insn 481 to worklist
  Adding insn 480 to worklist
  Adding insn 479 to worklist
processing block 8 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
  Adding insn 86 to worklist
  Adding insn 482 to worklist
  Adding insn 84 to worklist
  Adding insn 431 to worklist
  Adding insn 83 to worklist
  Adding insn 430 to worklist
processing block 7 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 15 to worklist
processing block 6 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 79 to worklist
processing block 35 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 514 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 67 to worklist
  Adding insn 429 to worklist
processing block 4 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 61 to worklist
processing block 3 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 57 to worklist
processing block 2 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 53 to worklist
  Adding insn 46 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 428 to worklist
  Adding insn 39 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 483 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 491 to worklist
  Adding insn 485 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 36 n_edges 57 count 45 (  1.2)
deleting insn with uid = 493.
deleting insn with uid = 14.
deleting insn with uid = 51.
deleting insn with uid = 52.
;;   ======================================================
;;   -- basic block 2 from 484 to 54 -- after reload
;;   ======================================================

;;	  0-->   484 [--sp]=bp                         :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   485 bp=sp                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   486 [--sp]=r15                        :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   492 use bp                            :nothing
;;	  2-->   487 [--sp]=r14                        :c2_decodern,(c2_p4+c2_p3)
;;	  3-->   488 [--sp]=r13                        :c2_decodern,(c2_p4+c2_p3)
;;	  4-->   489 [--sp]=r12                        :c2_decodern,(c2_p4+c2_p3)
;;	  5-->   490 [--sp]=bx                         :c2_decodern,(c2_p4+c2_p3)
;;	  6-->   491 {sp=sp-0x38;clobber flags;clobber :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   494 unspec/v{0;}                      :c2_decoder0
;;	 13-->    11 r12=di                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->    12 bx=si                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->    30: debug width => bx                :nothing
;;	 13-->    31: debug height => r12              :nothing
;;	 13-->    32: debug size => 0x4                :nothing
;;	 13-->    37 di=0x20                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->   483 si=r12+0x1#0                      :c2_decodern,c2_p0
;;	 14-->    13 [bp-0x3c]=xmm0                    :c2_decodern,(c2_p4+c2_p3)
;;	 15-->    34 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 16-->    35 {si=si<<0x3;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	 17-->    38 call <...>                        :c2_decoder0
;;	 17-->   428 si=bx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 17-->    46 di=0x20                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 18-->    42 {si=si*r12;clobber flags;}        :c2_decodern,c2_p1
;;	 18-->    39 r13=ax                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 18-->    41: debug idx => r13                 :nothing
;;	 21-->    43 {si=si<<0x2;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	 22-->    44 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 23-->    47 call <...>                        :c2_decoder0
;;	 23-->    50: debug heap => ax                 :nothing
;;	 24-->    53 flags=cmp(ax,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 25-->    54 pc={(flags==0)?L161:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 25
;;   new head = 484
;;   new tail = 54

;;   ======================================================
;;   -- basic block 3 from 57 to 58 -- after reload
;;   ======================================================

;;	  0-->    57 flags=cmp(r13,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    58 pc={(flags==0)?L161:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 57
;;   new tail = 58

;;   ======================================================
;;   -- basic block 4 from 60 to 62 -- after reload
;;   ======================================================

;;	  0-->    60: debug i => 0                     :nothing
;;	  0-->    61 flags=cmp(r12,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    62 pc={(flags<=0)?L155:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 60
;;   new tail = 62

deleting insn with uid = 68.
;;   ======================================================
;;   -- basic block 5 from 429 to 74 -- after reload
;;   ======================================================

;;	  0-->   429 dx=r13                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    67 {dx=dx<<0x3c;clobber flags;}      :c2_decodern,c2_p0|c2_p5
;;	  2-->    69 {dx=dx 0>>0x3f;clobber flags;}    :c2_decodern,c2_p0|c2_p5
;;	  3-->    70 flags=cmp(dx,r12)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    71 dx={(leu(flags,0))?dx:r12}        :c2_decoder0,(c2_p0|c2_p1|c2_p5)*2
;;	  6-->    73 flags=cmp(dx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    72 si=zxn(dx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->    74 pc={(flags==0)?L355:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 7
;;   new head = 429
;;   new tail = 74

;;   ======================================================
;;   -- basic block 6 from 76 to 80 -- after reload
;;   ======================================================

;;	  0-->    79 flags=cmp(r12,dx)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    76 [r13]=ax                          :c2_decodern,(c2_p4+c2_p3)
;;	  0-->    78: debug i => 0x1                   :nothing
;;	  1-->    80 pc={(flags==0)?L155:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 76
;;   new tail = 80

;;   ======================================================
;;   -- basic block 7 from 15 to 15 -- after reload
;;   ======================================================

;;	  0-->    15 cx=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 15
;;   new tail = 15

;;   ======================================================
;;   -- basic block 8 from 430 to 87 -- after reload
;;   ======================================================

;;	  0-->   430 r9=r12                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    83 {r9=r9-dx;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   431 di=r9                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->    84 {di=di 0>>0x2;clobber flags;}     :c2_decodern,c2_p0|c2_p5
;;	  4-->   482 r8=di*0x4#0                       :c2_decodern,c2_p0
;;	  5-->    86 flags=cmp(r8,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    87 pc={(flags==0)?L130:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 6
;;   new head = 430
;;   new tail = 87

deleting insn with uid = 101.
;;   ======================================================
;;   -- basic block 9 from 479 to 515 -- after reload
;;   ======================================================

;;	  0-->   480 r11=cx+0x2#0                      :c2_decodern,c2_p0
;;	  0-->   109 xmm7=const_vector                 :nothing
;;	  1-->   481 r10=cx+0x3#0                      :c2_decodern,c2_p0
;;	  1-->   432 xmm1=r11                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   479 dx=cx+0x1#0                       :c2_decodern,c2_p0
;;	  2-->   433 xmm0=r10                          :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->    92 xmm1=vec_concat                   :nothing
;;	  3-->   435 xmm2=dx                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   434 xmm0=cx                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    93 xmm0=vec_concat                   :nothing
;;	  4-->    96 xmm2=[`*.LC3']                    :c2_decodern,c2_p2
;;	  4-->    94 xmm0=vec_concat                   :nothing
;;	  5-->   102 dx=si*0x8+r13                     :c2_decodern,c2_p0
;;	  5-->   436 xmm1=bx                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   513 {si=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    97 xmm4=vec_duplicate                :nothing
;;	  6-->   437 xmm1=ax                           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   374 xmm8=xmm2                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->    99 xmm1=vec_duplicate                :nothing
;;	  7-->   438 xmm3=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->   515 pc=L123                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 7
;;   new head = 479
;;   new tail = 515

;;   ======================================================
;;   -- basic block 10 from 17 to 17 -- after reload
;;   ======================================================

;;	  0-->    17 xmm0=xmm6                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 17
;;   new tail = 17

;;   ======================================================
;;   -- basic block 11 from 439 to 125 -- after reload
;;   ======================================================

;;	  0-->   440 xmm1=xmm4                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   442 xmm5=xmm4                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   439 xmm6=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   409 xmm1=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	  1-->   121 {si=si+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   104 xmm6=xmm6+xmm8                    :c2_decodern,c2_p0|c2_p5
;;	  2-->   410 xmm5=xmm5 0>>0x20                 :c2_decodern,c2_p1
;;	  3-->   411 xmm0=xmm0 0>>0x20                 :c2_decodern,c2_p1
;;	  4-->   412 xmm0=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	  4-->   446 xmm5=xmm2                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   413 xmm1=vec_select                   :nothing
;;	  5-->   418 xmm5=xmm5 0>>0x20                 :c2_decodern,c2_p1
;;	  7-->   414 xmm0=vec_select                   :nothing
;;	  7-->   415 xmm1=vec_select                   :nothing
;;	  7-->   444 xmm0=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->   417 xmm1=xmm1 0>>0x20                 :c2_decodern,c2_p1
;;	  9-->   419 xmm1=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	 10-->   416 xmm0=zxn(vec_select)*zxn(vec_selec:c2_decodern,c2_p1
;;	 12-->   421 xmm1=vec_select                   :nothing
;;	 13-->   420 xmm0=vec_select                   :nothing
;;	 13-->   422 xmm0=vec_select                   :nothing
;;	 13-->   448 xmm1=xmm7                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->   110 xmm1=xmm1>xmm0                    :c2_decodern,c2_p1
;;	 14-->   449 xmm5=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 17-->   111 xmm5=vec_select                   :nothing
;;	 17-->   116 xmm0=vec_select                   :nothing
;;	 17-->   112 xmm5=xmm5+xmm3                    :c2_decodern,c2_p0|c2_p5
;;	 18-->   117 xmm0=xmm0+xmm3                    :c2_decodern,c2_p0|c2_p5
;;	 18-->   113 [dx]=xmm5                         :c2_decodern,(c2_p4+c2_p3)
;;	 19-->   118 [dx+0x10]=xmm0                    :c2_decodern,(c2_p4+c2_p3)
;;	 19-->   120: debug i => D#17                  :nothing
;;	 19-->   122 {dx=dx+0x20;clobber flags;}       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 19-->   124 flags=cmp(si,di)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 20-->   125 pc={(ltu(flags,0))?L359:pc}       :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 20
;;   new head = 439
;;   new tail = 125

;;   ======================================================
;;   -- basic block 12 from 127 to 129 -- after reload
;;   ======================================================

;;	  0-->   127 {cx=cx+r8;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   128 flags=cmp(r9,r8)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   129 pc={(flags==0)?L155:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 127
;;   new tail = 129

deleting insn with uid = 139.
;;   ======================================================
;;   -- basic block 13 from 478 to 140 -- after reload
;;   ======================================================

;;	  0-->   478 di=bx*0x4#0                       :c2_decodern,c2_p0
;;	  0-->   451 si=bx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   138 dx=sxn(cx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   134 {si=si*cx;clobber flags;}         :c2_decodern,c2_p1
;;	  1-->   140 dx=dx*0x8+r13                     :c2_decodern,c2_p0
;;	  1-->   133 di=sxn(di)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   135 {si=si<<0x2;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	  5-->   136 si=sxn(si)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   137 {si=ax+si;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 6
;;   new head = 478
;;   new tail = 140

;;   ======================================================
;;   -- basic block 14 from 142 to 150 -- after reload
;;   ======================================================

;;	  0-->   143 {cx=cx+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   145: debug i => cx                    :nothing
;;	  0-->   142 [dx]=si                           :c2_decodern,(c2_p4+c2_p3)
;;	  0-->   146 {si=si+di;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   147 {dx=dx+0x8;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   149 flags=cmp(r12,cx)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   150 pc={(flags>0)?L148:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 142
;;   new tail = 150

;;   ======================================================
;;   -- basic block 15 from 157 to 158 -- after reload
;;   ======================================================

;;	  0-->   157 dx=sxn(r12)                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   158 [dx*0x8+r13]=ax                   :c2_decodern,(c2_p4+c2_p3)
;;	Ready list (final):  
;;   total time = 1
;;   new head = 157
;;   new tail = 158

;;   ======================================================
;;   -- basic block 16 from 172 to 191 -- after reload
;;   ======================================================

;;	  0-->   172: debug g optimized away           :nothing
;;	  0-->   173: debug sum => 0.0                 :nothing
;;	  0-->   475 ax=r12-0x1#0                      :c2_decodern,c2_p0
;;	  0-->   510 {cx=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   477 xmm1=0.0                          :nothing
;;	  1-->   452 dx=ax                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   175 {dx=dx 0>>0x1f;clobber flags;}    :c2_decodern,c2_p0|c2_p5
;;	  3-->   176 {dx=dx+ax;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   476 ax=bx-0x1#0                       :c2_decodern,c2_p0
;;	  4-->   177 {dx=dx>>0x1;clobber flags;}       :c2_decodern,c2_p0|c2_p5
;;	  5-->   455 r15=ax                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   454 [bp-0x40]=dx                      :c2_decodern,(c2_p4+c2_p3)
;;	  5-->   179: debug yoff => [bp-0x40]          :nothing
;;	  6-->   181 {r15=r15 0>>0x1f;clobber flags;}  :c2_decodern,c2_p0|c2_p5
;;	  7-->   182 {r15=r15+ax;clobber flags;}       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->   183 {r15=r15>>0x1;clobber flags;}     :c2_decodern,c2_p0|c2_p5
;;	  8-->   185: debug xoff => r15                :nothing
;;	  8-->   186: debug tmp => 0.0                 :nothing
;;	  8-->   188: debug y => 0                     :nothing
;;	  8-->   189: debug sum => 0.0                 :nothing
;;	  8-->   190 flags=cmp(r12,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  9-->   191 pc={(flags<=0)?L340:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 9
;;   new head = 172
;;   new tail = 191

;;   ======================================================
;;   -- basic block 17 from 230 to 234 -- after reload
;;   ======================================================

;;	  0-->   230: debug x => 0                     :nothing
;;	  0-->   231: debug sum => xmm1                :nothing
;;	  0-->   233 flags=cmp(bx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   234 pc={(flags<=0)?L232:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 230
;;   new tail = 234

;;   ======================================================
;;   -- basic block 18 from 236 to 509 -- after reload
;;   ======================================================

;;	  0-->   462 xmm0=[bp-0x3c]                    :c2_decodern,c2_p2
;;	  0-->   236 ax=cx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   509 {r14=0;clobber flags;}            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   459 dx=[bp-0x40]                      :c2_decodern,c2_p2
;;	  2-->   239 {ax=ax-[bp-0x40];clobber flags;}  :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  2-->   241 xmm0=xmm0+xmm0                    :c2_decodern,c2_p1
;;	  5-->   242 xmm0=xmm0*[bp-0x3c]               :c2_decodern,(c2_p2+c2_p0)
;;	  5-->   238 {dx=dx-cx;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   240 {ax=ax*dx;clobber flags;}         :c2_decodern,c2_p1
;;	  9-->   464 [bp-0x34]=xmm0                    :c2_decodern,(c2_p4+c2_p3)
;;	 10-->   461 [bp-0x38]=ax                      :c2_decodern,(c2_p4+c2_p3)
;;	Ready list (final):  
;;   total time = 10
;;   new head = 236
;;   new tail = 509

;;   ======================================================
;;   -- basic block 19 from 456 to 220 -- after reload
;;   ======================================================

;;	  0-->   456 ax=r14                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   457 si=r15                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   424 [bp-0x58]=cx                      :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   199 {si=si-r14;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   198 {ax=ax-r15;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   425 [bp-0x50]=xmm1                    :c2_decodern,(c2_p4+c2_p3)
;;	  2-->   200 {ax=ax*si;clobber flags;}         :c2_decodern,c2_p1
;;	  5-->   201 {ax=ax+[bp-0x38];clobber flags;}  :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  9-->   202 xmm0=flt(ax)                      :c2_decodern,c2_p1
;;	 13-->   203 xmm0=xmm0/[bp-0x34]               :nothing
;;	 13-->   471 xmm0=vec_select                   :nothing
;;	 13-->   472 xmm0=fxn(vec_select)              :nothing
;;	 14-->   206 call <...>                        :c2_decoder0
;;	 14-->   426 cx=[bp-0x58]                      :c2_decodern,c2_p2
;;	 15-->   473 xmm0=vec_duplicate                :nothing
;;	 15-->   427 xmm1=[bp-0x50]                    :c2_decodern,c2_p2
;;	 15-->   474 xmm0=vec_concat                   :nothing
;;	 15-->   209: debug tmp => xmm0                :nothing
;;	 17-->   212 xmm1=xmm1+xmm0                    :c2_decodern,c2_p1
;;	 17-->   215: debug x => D#19                  :nothing
;;	 17-->   216: debug sum => xmm1                :nothing
;;	 18-->   210 ax=[cx*0x8+r13]                   :c2_decodern,c2_p2
;;	 22-->   211 [r14*0x4+ax]=xmm0                 :c2_decodern,(c2_p4+c2_p3)
;;	 22-->   217 {r14=r14+0x1;clobber flags;}      :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 23-->   219 flags=cmp(bx,r14)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 24-->   220 pc={(flags>0)?L218:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 24
;;   new head = 456
;;   new tail = 220

;;   ======================================================
;;   -- basic block 20 from 223 to 227 -- after reload
;;   ======================================================

;;	  0-->   223: debug y => D#20                  :nothing
;;	  0-->   224: debug sum => xmm1                :nothing
;;	  0-->   225 {cx=cx+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   226 flags=cmp(r12,cx)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   227 pc={(flags>0)?L390:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 223
;;   new tail = 227

;;   ======================================================
;;   -- basic block 21 from 247 to 466 -- after reload
;;   ======================================================

;;	  0-->   247: debug y => 0                     :nothing
;;	  0-->   465 xmm0=xmm1                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   508 {r9=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   336 xmm0=vec_duplicate                :nothing
;;	  1-->   466 xmm2=xmm0                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 247
;;   new tail = 466

;;   ======================================================
;;   -- basic block 22 from 292 to 295 -- after reload
;;   ======================================================

;;	  0-->   292: debug x => 0                     :nothing
;;	  0-->   294 flags=cmp(bx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   295 pc={(flags<=0)?L293:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 292
;;   new tail = 295

;;   ======================================================
;;   -- basic block 23 from 297 to 308 -- after reload
;;   ======================================================

;;	  0-->   297 r8=[r9*0x8+r13]                   :c2_decodern,c2_p2
;;	  4-->   467 cx=r8                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   299 dx=r8                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   300 {cx=cx&0xf;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   301 {cx=cx 0>>0x2;clobber flags;}     :c2_decodern,c2_p0|c2_p5
;;	  7-->   302 {cx=-cx;clobber flags;}           :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->   303 {cx=cx&0x3;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  9-->   304 flags=cmp(cx,bx)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 10-->   305 cx={(leu(flags,0))?cx:bx}         :c2_decoder0,(c2_p0|c2_p1|c2_p5)*2
;;	 10-->   507 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 12-->   307 flags=cmp(cx,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 12-->   306 si=zxn(cx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->   308 pc={(flags==0)?L325:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 13
;;   new head = 297
;;   new tail = 308

;;   ======================================================
;;   -- basic block 24 from 311 to 320 -- after reload
;;   ======================================================

;;	  0-->   311 xmm0=[dx]                         :c2_decodern,c2_p2
;;	  0-->   314 {ax=ax+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   316: debug x => ax                    :nothing
;;	  2-->   312 xmm0=xmm0/xmm1                    :c2_decodern,c2_p0,c2_ssediv*17
;;	 20-->   313 [dx]=xmm0                         :c2_decodern,(c2_p4+c2_p3)
;;	 20-->   317 {dx=dx+0x4;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 20-->   319 flags=cmp(cx,ax)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 21-->   320 pc={(gtu(flags,0))?L318:pc}       :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 21
;;   new head = 311
;;   new tail = 320

;;   ======================================================
;;   -- basic block 25 from 323 to 324 -- after reload
;;   ======================================================

;;	  0-->   323 flags=cmp(bx,cx)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   324 pc={(flags==0)?L293:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 323
;;   new tail = 324

;;   ======================================================
;;   -- basic block 26 from 468 to 332 -- after reload
;;   ======================================================

;;	  0-->   468 r11=bx                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   327 {r11=r11-cx;clobber flags;}       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   469 di=r11                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   328 {di=di 0>>0x2;clobber flags;}     :c2_decodern,c2_p0|c2_p5
;;	  4-->   470 r10=di*0x4#0                      :c2_decodern,c2_p0
;;	  5-->   331 flags=cmp(r10,0)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   332 pc={(flags==0)?L330:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 6
;;   new head = 468
;;   new tail = 332

;;   ======================================================
;;   -- basic block 27 from 335 to 506 -- after reload
;;   ======================================================

;;	  0-->   335 si=si*0x4+r8                      :c2_decodern,c2_p0
;;	  0-->   505 {dx=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   506 {cx=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 335
;;   new tail = 506

;;   ======================================================
;;   -- basic block 28 from 251 to 260 -- after reload
;;   ======================================================

;;	  0-->   251 xmm0=[si+dx]                      :c2_decodern,c2_p2
;;	  0-->   256 {cx=cx+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   252 xmm0=xmm0/xmm2                    :c2_decodern,c2_p0,c2_ssediv*17
;;	 20-->   253 [si+dx]=xmm0                      :c2_decodern,(c2_p4+c2_p3)
;;	 20-->   255: debug x => D#16                  :nothing
;;	 20-->   257 {dx=dx+0x10;clobber flags;}       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 20-->   259 flags=cmp(cx,di)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 21-->   260 pc={(ltu(flags,0))?L258:pc}       :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 21
;;   new head = 251
;;   new tail = 260

;;   ======================================================
;;   -- basic block 29 from 262 to 264 -- after reload
;;   ======================================================

;;	  0-->   262 {ax=ax+r10;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   263 flags=cmp(r11,r10)                :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   264 pc={(flags==0)?L293:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 262
;;   new tail = 264

deleting insn with uid = 267.
;;   ======================================================
;;   -- basic block 30 from 266 to 268 -- after reload
;;   ======================================================

;;	  0-->   266 dx=sxn(ax)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   268 dx=dx*0x4+r8                      :c2_decodern,c2_p0
;;	Ready list (final):  
;;   total time = 1
;;   new head = 266
;;   new tail = 268

;;   ======================================================
;;   -- basic block 31 from 271 to 280 -- after reload
;;   ======================================================

;;	  0-->   271 xmm0=[dx]                         :c2_decodern,c2_p2
;;	  0-->   274 {ax=ax+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   276: debug x => ax                    :nothing
;;	  2-->   272 xmm0=xmm0/xmm1                    :c2_decodern,c2_p0,c2_ssediv*17
;;	 20-->   273 [dx]=xmm0                         :c2_decodern,(c2_p4+c2_p3)
;;	 20-->   277 {dx=dx+0x4;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 20-->   279 flags=cmp(bx,ax)                  :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 21-->   280 pc={(flags>0)?L278:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 21
;;   new head = 271
;;   new tail = 280

;;   ======================================================
;;   -- basic block 32 from 286 to 289 -- after reload
;;   ======================================================

;;	  0-->   286: debug y => D#18                  :nothing
;;	  0-->   287 {r9=r9+0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   288 flags=cmp(r12,r9)                 :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   289 pc={(flags>0)?L290:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 2
;;   new head = 286
;;   new tail = 289

deleting insn with uid = 495.
;;   ======================================================
;;   -- basic block 33 from 346 to 503 -- after reload
;;   ======================================================

;;	  0-->   496 {sp=sp+0x38;clobber flags;clobber :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   346 ax=r13                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   349 use ax                            :nothing
;;	  1-->   497 bx=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  5-->   498 r12=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  9-->   499 r13=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 13-->   500 r14=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 17-->   501 r15=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 21-->   502 bp=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 22-->   503 return                            :c2_decoder0
;;	Ready list (final):  
;;   total time = 22
;;   new head = 346
;;   new tail = 503

;;   ======================================================
;;   -- basic block 34 from 163 to 517 -- after reload
;;   ======================================================

;;	  0-->   163: debug __stream => [`stderr']     :nothing
;;	  0-->   164: debug __fmt => `*.LC4'           :nothing
;;	  0-->   167 di=[`stderr']                     :c2_decodern,c2_p2
;;	  0-->   165 dx=`*.LC4'                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   511 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   166 si=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   512 {r13=0;clobber flags;}            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   169 call <...>                        :c2_decoder0
;;	  4-->   517 pc=L170                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 4
;;   new head = 163
;;   new tail = 517

;;   ======================================================
;;   -- basic block 35 from 514 to 519 -- after reload
;;   ======================================================

;;	  0-->   514 {cx=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   519 pc=L81                            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 0
;;   new head = 514
;;   new tail = 519





izp_gaussianMatrix

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15] 45[xmm8]
;;  ref usage 	r0={21d,30u,2e} r1={30d,33u} r2={20d,29u,1e} r3={3d,16u} r4={26d,23u} r5={14d,12u} r6={3d,52u} r7={15d,56u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={85d,24u} r18={4d} r19={4d} r20={1d,1u} r21={36d,40u,2e} r22={22d,24u} r23={8d,5u} r24={6d,2u} r25={6d,2u} r26={12d,7u} r27={7d,2u} r28={6d,1u} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={7d,7u} r38={9d,6u} r39={6d,4u} r40={7d,4u} r41={3d,16u} r42={4d,12u,1e} r43={4d,7u} r44={6d,8u} r45={5d,1u} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 902{472d,424u,6e} in 289{285 regular + 4 call} insns.
(note 10 0 28 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 28 10 14 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 14 28 51 2 NOTE_INSN_FUNCTION_BEG)

(note 51 14 52 2 NOTE_INSN_DELETED)

(note 52 51 484 2 NOTE_INSN_DELETED)

(insn/f:TI 484 52 485 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg/f:DI 6 bp)) ../src/izp-gaussian.c:598 42 {*pushdi2_rex64}
     (nil))

(insn/f:TI 485 484 486 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) ../src/izp-gaussian.c:598 62 {*movdi_internal_rex64}
     (nil))

(insn/f 486 485 492 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 44 r15)) ../src/izp-gaussian.c:598 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))

(insn 492 486 487 2 (use (reg/f:DI 6 bp)) ../src/izp-gaussian.c:598 -1
     (nil))

(insn/f:TI 487 492 488 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 43 r14)) ../src/izp-gaussian.c:598 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f:TI 488 487 489 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 42 r13)) ../src/izp-gaussian.c:598 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f:TI 489 488 490 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) ../src/izp-gaussian.c:598 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f:TI 490 489 491 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) ../src/izp-gaussian.c:598 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f:TI 491 490 493 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) ../src/izp-gaussian.c:598 911 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 493 491 494 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 494 493 11 2 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) ../src/izp-gaussian.c:598 631 {blockage}
     (nil))

(insn:TI 11 494 12 2 (set (reg/v:SI 41 r12 [orig:243 n ] [243])
        (reg:SI 5 di [ n ])) ../src/izp-gaussian.c:598 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ n ])
        (nil)))

(insn 12 11 30 2 (set (reg/v:SI 3 bx [orig:244 m ] [244])
        (reg:SI 4 si [ m ])) ../src/izp-gaussian.c:598 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ m ])
        (nil)))

(debug_insn 30 12 31 2 (var_location:SI width (reg/v:SI 3 bx [orig:244 m ] [244])) -1
     (nil))

(debug_insn 31 30 32 2 (var_location:SI height (reg/v:SI 41 r12 [orig:243 n ] [243])) -1
     (nil))

(debug_insn 32 31 37 2 (var_location:SI size (const_int 4 [0x4])) -1
     (nil))

(insn 37 32 483 2 (set (reg:DI 5 di)
        (const_int 32 [0x20])) ../src/izp-gaussian.c:583 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 483 37 13 2 (set (reg:SI 4 si [246])
        (subreg:SI (plus:DI (reg:DI 41 r12 [orig:243 n ] [243])
                (const_int 1 [0x1])) 0)) ../src/izp-gaussian.c:583 250 {*lea_2}
     (nil))

(insn 13 483 34 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [4 %sfp+-12 S4 A32])
        (reg:SF 21 xmm0 [ sigma ])) ../src/izp-gaussian.c:598 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ sigma ])
        (nil)))

(insn:TI 34 13 35 2 (set (reg:DI 4 si [247])
        (sign_extend:DI (reg:SI 4 si [246]))) ../src/izp-gaussian.c:583 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 35 34 38 2 (parallel [
            (set (reg:DI 4 si [248])
                (ashift:DI (reg:DI 4 si [247])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:583 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 38 35 428 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memalign") [flags 0x41]  <function_decl 0x2ae3457b0b00 memalign>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:583 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 428 38 46 2 (set (reg:SI 4 si [250])
        (reg/v:SI 3 bx [orig:244 m ] [244])) ../src/izp-gaussian.c:584 64 {*movsi_internal}
     (nil))

(insn 46 428 42 2 (set (reg:DI 5 di)
        (const_int 32 [0x20])) ../src/izp-gaussian.c:584 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 42 46 39 2 (parallel [
            (set (reg:SI 4 si [250])
                (mult:SI (reg:SI 4 si [250])
                    (reg/v:SI 41 r12 [orig:243 n ] [243])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:584 333 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 39 42 41 2 (set (reg/v/f:DI 42 r13 [orig:116 g ] [116])
        (reg:DI 0 ax)) ../src/izp-gaussian.c:583 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 249)
            (nil))))

(debug_insn 41 39 43 2 (var_location:DI idx (reg/v/f:DI 42 r13 [orig:116 g ] [116])) ../src/izp-gaussian.c:583 -1
     (nil))

(insn:TI 43 41 44 2 (parallel [
            (set (reg:SI 4 si [251])
                (ashift:SI (reg:SI 4 si [250])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:584 497 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 44 43 47 2 (set (reg:DI 4 si [252])
        (sign_extend:DI (reg:SI 4 si [251]))) ../src/izp-gaussian.c:584 126 {*extendsidi2_rex64}
     (nil))

(call_insn:TI 47 44 50 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memalign") [flags 0x41]  <function_decl 0x2ae3457b0b00 memalign>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:584 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(debug_insn 50 47 53 2 (var_location:DI heap (reg/v/f:DI 0 ax [orig:120 heap ] [120])) ../src/izp-gaussian.c:584 -1
     (nil))

(insn:TI 53 50 54 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:120 heap ] [120])
            (const_int 0 [0]))) ../src/izp-gaussian.c:586 3 {*cmpdi_ccno_1}
     (nil))

(jump_insn:TI 54 53 371 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) ../src/izp-gaussian.c:586 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 434 [0x1b2])
            (nil)))
 -> 161)
;; End of basic block 2 -> ( 34 3)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  34 [4.3%]  (can_fallthru)
;; Succ edge  3 [95.7%]  (fallthru,can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  2 [95.7%]  (fallthru,can_fallthru)
(note 371 54 55 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 55 371 56 3 NOTE_INSN_DELETED)

(note 56 55 57 3 NOTE_INSN_DELETED)

(insn:TI 57 56 58 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 42 r13 [orig:116 g ] [116])
            (const_int 0 [0]))) ../src/izp-gaussian.c:586 3 {*cmpdi_ccno_1}
     (nil))

(jump_insn:TI 58 57 59 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) ../src/izp-gaussian.c:586 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 434 [0x1b2])
            (nil)))
 -> 161)
;; End of basic block 3 -> ( 4 34)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  4 [95.7%]  (fallthru,can_fallthru)
;; Succ edge  34 [4.3%]  (can_fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  3 [95.7%]  (fallthru,can_fallthru)
(note 59 58 60 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(debug_insn 60 59 61 4 (var_location:SI i (const_int 0 [0])) -1
     (nil))

(insn:TI 61 60 62 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 41 r12 [orig:243 n ] [243])
            (const_int 0 [0]))) ../src/izp-gaussian.c:587 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 62 61 63 4 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 155)
            (pc))) ../src/izp-gaussian.c:587 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 155)
;; End of basic block 4 -> ( 5 15)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  5 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  15 [9.0%]  (can_fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 1 [dx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  4 [91.0%]  (fallthru,can_fallthru)
(note 63 62 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 66 63 68 5 NOTE_INSN_DELETED)

(note 68 66 429 5 NOTE_INSN_DELETED)

(insn:TI 429 68 67 5 (set (reg:DI 1 dx [259])
        (reg/v/f:DI 42 r13 [orig:116 g ] [116])) ../src/izp-gaussian.c:598 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 67 429 69 5 (parallel [
            (set (reg:DI 1 dx [259])
                (ashift:DI (reg:DI 1 dx [259])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 69 67 70 5 (parallel [
            (set (reg:DI 1 dx [261])
                (lshiftrt:DI (reg:DI 1 dx [259])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 533 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 70 69 71 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [261])
            (reg/v:SI 41 r12 [orig:243 n ] [243]))) ../src/izp-gaussian.c:598 6 {*cmpsi_1}
     (nil))

(insn:TI 71 70 73 5 (set (reg:SI 1 dx [orig:204 prolog_loop_niters.1071 ] [204])
        (if_then_else:SI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:SI 1 dx [261])
            (reg/v:SI 41 r12 [orig:243 n ] [243]))) ../src/izp-gaussian.c:598 885 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn:TI 73 71 72 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:204 prolog_loop_niters.1071 ] [204])
            (const_int 0 [0]))) ../src/izp-gaussian.c:598 2 {*cmpsi_ccno_1}
     (nil))

(insn 72 73 74 5 (set (reg:DI 4 si [orig:205 prolog_loop_niters.1072 ] [205])
        (zero_extend:DI (reg:SI 1 dx [orig:204 prolog_loop_niters.1071 ] [204]))) ../src/izp-gaussian.c:598 114 {*zero_extendsidi2_rex64}
     (nil))

(jump_insn:TI 74 72 75 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 355)
            (pc))) ../src/izp-gaussian.c:598 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 355)
;; End of basic block 5 -> ( 6 35)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  6 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  35 (can_fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru,can_fallthru)
(note 75 74 79 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 79 75 76 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 41 r12 [orig:243 n ] [243])
            (reg:SI 1 dx [orig:204 prolog_loop_niters.1071 ] [204]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (nil))

(insn 76 79 78 6 (set (mem/f:DI (reg/v/f:DI 42 r13 [orig:116 g ] [116]) [2 MEM[base: D.9109_87, offset: 0B]+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:120 heap ] [120])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(debug_insn 78 76 80 6 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))

(jump_insn:TI 80 78 351 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 155)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 155)
;; End of basic block 6 -> ( 7 15)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  7 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  15 (can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 2 [cx]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru,can_fallthru)
(note 351 80 15 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 15 351 81 7 (set (reg/v:SI 2 cx [orig:217 i ] [217])
        (const_int 1 [0x1])) ../src/izp-gaussian.c:587 64 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  8 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 7 35) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 5 [di] 17 [flags] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]

;; Pred edge  7 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  35 [100.0%]  (can_fallthru)
(code_label 81 15 82 8 104 "" [1 uses])

(note 82 81 430 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 430 82 83 8 (set (reg:SI 38 r9 [orig:214 niters.1075 ] [214])
        (reg/v:SI 41 r12 [orig:243 n ] [243])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 83 430 431 8 (parallel [
            (set (reg:SI 38 r9 [orig:214 niters.1075 ] [214])
                (minus:SI (reg:SI 38 r9 [orig:214 niters.1075 ] [214])
                    (reg:SI 1 dx [orig:204 prolog_loop_niters.1071 ] [204])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 291 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:204 prolog_loop_niters.1071 ] [204])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 431 83 84 8 (set (reg:SI 5 di [orig:215 bnd.1076 ] [215])
        (reg:SI 38 r9 [orig:214 niters.1075 ] [214])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 84 431 482 8 (parallel [
            (set (reg:SI 5 di [orig:215 bnd.1076 ] [215])
                (lshiftrt:SI (reg:SI 5 di [orig:215 bnd.1076 ] [215])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 531 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 482 84 86 8 (set (reg:SI 37 r8 [orig:216 ratio_mult_vf.1077 ] [216])
        (subreg:SI (mult:DI (reg:DI 5 di [orig:215 bnd.1076 ] [215])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn:TI 86 482 87 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 37 r8 [orig:216 ratio_mult_vf.1077 ] [216])
            (const_int 0 [0]))) ../src/izp-gaussian.c:588 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 87 86 88 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 130)
;; End of basic block 8 -> ( 9 13)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]


;; Succ edge  9 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  13 (can_fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 4 [si] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 39 [r10] 40 [r11] 45 [xmm8]
;; live  kill	 17 [flags]

;; Pred edge  8 [100.0%]  (fallthru,can_fallthru)
(note 88 87 101 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 101 88 480 9 NOTE_INSN_DELETED)

(insn:TI 480 101 109 9 (set (reg:SI 40 r11 [264])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:217 i ] [217])
                (const_int 2 [0x2])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 109 480 481 9 (set (reg:V4SI 28 xmm7 [326])
        (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])
        (nil)))

(insn:TI 481 109 432 9 (set (reg:SI 39 r10 [265])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:217 i ] [217])
                (const_int 3 [0x3])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 432 481 479 9 (set (reg:SI 22 xmm1)
        (reg:SI 40 r11 [264])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 40 r11 [264])
        (nil)))

(insn:TI 479 432 433 9 (set (reg:SI 1 dx [263])
        (subreg:SI (plus:DI (reg:DI 2 cx [orig:217 i ] [217])
                (const_int 1 [0x1])) 0)) ../src/izp-gaussian.c:588 250 {*lea_2}
     (nil))

(insn 433 479 92 9 (set (reg:SI 21 xmm0)
        (reg:SI 39 r10 [265])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 39 r10 [265])
        (nil)))

(insn:TI 92 433 435 9 (set (reg:V2SI 22 xmm1 [266])
        (vec_concat:V2SI (reg:SI 22 xmm1)
            (reg:SI 21 xmm0))) ../src/izp-gaussian.c:588 1791 {*vec_concatv2si_sse2}
     (expr_list:REG_DEAD (reg:SI 21 xmm0)
        (nil)))

(insn 435 92 434 9 (set (reg:SI 23 xmm2)
        (reg:SI 1 dx [263])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [263])
        (nil)))

(insn 434 435 93 9 (set (reg:SI 21 xmm0)
        (reg/v:SI 2 cx [orig:217 i ] [217])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn:TI 93 434 96 9 (set (reg:V2SI 21 xmm0 [267])
        (vec_concat:V2SI (reg:SI 21 xmm0)
            (reg:SI 23 xmm2))) ../src/izp-gaussian.c:588 1791 {*vec_concatv2si_sse2}
     (expr_list:REG_DEAD (reg:SI 23 xmm2)
        (nil)))

(insn 96 93 94 9 (set (reg:V4SI 23 xmm2 [324])
        (mem/u/c/i:V4SI (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5 S16 A128])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
            ])
        (nil)))

(insn 94 96 102 9 (set (reg:V4SI 21 xmm0 [orig:225 vect_vec_iv_.1082 ] [225])
        (vec_concat:V4SI (reg:V2SI 21 xmm0 [267])
            (reg:V2SI 22 xmm1 [266]))) ../src/izp-gaussian.c:588 1794 {*vec_concatv4si_1}
     (expr_list:REG_DEAD (reg:V2SI 22 xmm1 [266])
        (nil)))

(insn:TI 102 94 436 9 (set (reg:DI 1 dx [orig:149 ivtmp.1153 ] [149])
        (plus:DI (mult:DI (reg:DI 4 si [orig:205 prolog_loop_niters.1072 ] [205])
                (const_int 8 [0x8]))
            (reg/v/f:DI 42 r13 [orig:116 g ] [116]))) ../src/izp-gaussian.c:588 249 {*lea_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:205 prolog_loop_niters.1072 ] [205])
        (nil)))

(insn 436 102 513 9 (set (reg:SI 22 xmm1)
        (reg/v:SI 3 bx [orig:244 m ] [244])) ../src/izp-gaussian.c:588 64 {*movsi_internal}
     (nil))

(insn 513 436 97 9 (parallel [
            (set (reg:DI 4 si [orig:124 ivtmp.1151 ] [124])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 97 513 437 9 (set (reg:V4SI 25 xmm4 [orig:228 vect_cst_.1084 ] [228])
        (vec_duplicate:V4SI (reg:SI 22 xmm1))) ../src/izp-gaussian.c:588 1785 {*vec_dupv4si}
     (expr_list:REG_DEAD (reg:SI 22 xmm1)
        (nil)))

(insn 437 97 374 9 (set (reg:DI 22 xmm1)
        (reg/v/f:DI 0 ax [orig:120 heap ] [120])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(insn 374 437 99 9 (set (reg:V4SI 45 xmm8 [orig:226 vect_cst_.1081 ] [226])
        (reg:V4SI 23 xmm2 [324])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
                (const_int 4 [0x4])
            ])
        (nil)))

(insn:TI 99 374 438 9 (set (reg:V2DI 22 xmm1)
        (vec_duplicate:V2DI (reg:DI 22 xmm1))) ../src/izp-gaussian.c:588 1787 {*vec_dupv2di_sse3}
     (nil))

(insn 438 99 515 9 (set (reg:V2DI 24 xmm3 [orig:233 vect_cst_.1089 ] [233])
        (reg:V2DI 22 xmm1)) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1)
        (nil)))

(jump_insn 515 438 516 9 (set (pc)
        (label_ref 123)) 606 {jump}
     (nil)
 -> 123)
;; End of basic block 9 -> ( 11)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]


;; Succ edge  11 [100.0%]  (can_fallthru)

(barrier 516 515 359)

;; Start of basic block ( 11) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; lr  use 	 6 [bp] 7 [sp] 27 [xmm6]
;; lr  def 	 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; live  gen 	 21 [xmm0]
;; live  kill	

;; Pred edge  11 [91.0%]  (can_fallthru)
(code_label 359 516 358 10 126 "" [1 uses])

(note 358 359 17 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 17 358 123 10 (set (reg:V4SI 21 xmm0 [orig:225 vect_vec_iv_.1082 ] [225])
        (reg:V4SI 27 xmm6 [orig:227 vect_vec_iv_.1082 ] [227])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 27 xmm6 [orig:227 vect_vec_iv_.1082 ] [227])
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]


;; Succ edge  11 [100.0%]  (fallthru,dfs_back,can_fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 45 [xmm8]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 23 [xmm2] 24 [xmm3] 25 [xmm4] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  kill	 17 [flags]

;; Pred edge  10 [100.0%]  (fallthru,dfs_back,can_fallthru)
;; Pred edge  9 [100.0%]  (can_fallthru)
(code_label 123 17 103 11 107 "" [1 uses])

(note 103 123 440 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 440 103 442 11 (set (reg:V4SI 22 xmm1)
        (reg:V4SI 25 xmm4 [orig:228 vect_cst_.1084 ] [228])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn 442 440 439 11 (set (reg:V1TI 26 xmm5)
        (reg:V1TI 25 xmm4)) ../src/izp-gaussian.c:588 1125 {*movv1ti_internal}
     (nil))

(insn 439 442 409 11 (set (reg:V4SI 27 xmm6 [orig:227 vect_vec_iv_.1082 ] [227])
        (reg:V4SI 21 xmm0 [orig:225 vect_vec_iv_.1082 ] [225])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 409 439 121 11 (set (reg:V2DI 22 xmm1)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [orig:225 vect_vec_iv_.1082 ] [225])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (nil))

(insn 121 409 104 11 (parallel [
            (set (reg:SI 4 si [orig:124 ivtmp.1151 ] [124])
                (plus:SI (reg:SI 4 si [orig:124 ivtmp.1151 ] [124])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 104 121 410 11 (set (reg:V4SI 27 xmm6 [orig:227 vect_vec_iv_.1082 ] [227])
        (plus:V4SI (reg:V4SI 27 xmm6 [orig:227 vect_vec_iv_.1082 ] [227])
            (reg:V4SI 45 xmm8 [orig:226 vect_cst_.1081 ] [226]))) ../src/izp-gaussian.c:588 1570 {*addv4si3}
     (expr_list:REG_EQUAL (plus:V4SI (reg:V4SI 21 xmm0 [orig:225 vect_vec_iv_.1082 ] [225])
            (const_vector:V4SI [
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                    (const_int 4 [0x4])
                ]))
        (nil)))

(insn:TI 410 104 411 11 (set (reg:V1TI 26 xmm5)
        (lshiftrt:V1TI (reg:V1TI 26 xmm5)
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 411 410 412 11 (set (reg:V1TI 21 xmm0 [329])
        (lshiftrt:V1TI (reg:V1TI 21 xmm0 [orig:225 vect_vec_iv_.1082 ] [225])
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 412 411 446 11 (set (reg:V2DI 21 xmm0 [330])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0 [329])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 26 xmm5 [328])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (expr_list:REG_DEAD (reg:V4SI 26 xmm5 [328])
        (nil)))

(insn 446 412 413 11 (set (reg:V1TI 26 xmm5)
        (reg:V1TI 23 xmm2)) ../src/izp-gaussian.c:588 1125 {*movv1ti_internal}
     (nil))

(insn 413 446 418 11 (set (reg:V4SI 22 xmm1 [331])
        (vec_select:V4SI (reg:V4SI 22 xmm1 [327])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn:TI 418 413 414 11 (set (reg:V1TI 26 xmm5)
        (lshiftrt:V1TI (reg:V1TI 26 xmm5)
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 414 418 415 11 (set (reg:V4SI 21 xmm0 [332])
        (vec_select:V4SI (reg:V4SI 21 xmm0 [330])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn 415 414 444 11 (set (reg:V4SI 22 xmm1 [271])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 22 xmm1 [331])
                (reg:V4SI 21 xmm0 [332]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 21 xmm0 [332])
        (nil)))

(insn 444 415 417 11 (set (reg:V4SI 21 xmm0)
        (reg:V4SI 22 xmm1 [271])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 417 444 419 11 (set (reg:V1TI 22 xmm1 [334])
        (lshiftrt:V1TI (reg:V1TI 22 xmm1 [271])
            (const_int 32 [0x20]))) ../src/izp-gaussian.c:588 1615 {sse2_lshrv1ti3}
     (nil))

(insn:TI 419 417 416 11 (set (reg:V2DI 22 xmm1 [336])
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 22 xmm1 [334])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 26 xmm5 [335])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (expr_list:REG_DEAD (reg:V4SI 26 xmm5 [335])
        (nil)))

(insn:TI 416 419 421 11 (set (reg:V2DI 21 xmm0)
        (mult:V2DI (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 21 xmm0)
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ])))
            (zero_extend:V2DI (vec_select:V2SI (reg:V4SI 23 xmm2 [324])
                    (parallel [
                            (const_int 0 [0])
                            (const_int 2 [0x2])
                        ]))))) ../src/izp-gaussian.c:588 1598 {*sse2_umulv2siv2di3}
     (nil))

(insn:TI 421 416 420 11 (set (reg:V4SI 22 xmm1 [338])
        (vec_select:V4SI (reg:V4SI 22 xmm1 [336])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn:TI 420 421 422 11 (set (reg:V4SI 21 xmm0 [337])
        (vec_select:V4SI (reg:V4SI 21 xmm0 [333])
            (parallel [
                    (const_int 0 [0])
                    (const_int 2 [0x2])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ]))) ../src/izp-gaussian.c:588 1770 {sse2_pshufd_1}
     (nil))

(insn 422 420 448 11 (set (reg:V4SI 21 xmm0 [orig:230 vect_var_.1085 ] [230])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 21 xmm0 [337])
                (reg:V4SI 22 xmm1 [338]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [338])
        (nil)))

(insn 448 422 110 11 (set (reg:V4SI 22 xmm1 [276])
        (reg:V4SI 28 xmm7 [326])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 110 448 449 11 (set (reg:V4SI 22 xmm1 [276])
        (gt:V4SI (reg:V4SI 22 xmm1 [276])
            (reg:V4SI 21 xmm0 [orig:230 vect_var_.1085 ] [230]))) ../src/izp-gaussian.c:588 1665 {sse2_gtv4si3}
     (expr_list:REG_EQUAL (gt:V4SI (const_vector:V4SI [
                    (const_int 0 [0])
                    (const_int 0 [0])
                    (const_int 0 [0])
                    (const_int 0 [0])
                ])
            (reg:V4SI 21 xmm0 [orig:230 vect_var_.1085 ] [230]))
        (nil)))

(insn 449 110 111 11 (set (reg:V4SI 26 xmm5)
        (reg:V4SI 21 xmm0 [orig:230 vect_var_.1085 ] [230])) ../src/izp-gaussian.c:588 1123 {*movv4si_internal}
     (nil))

(insn:TI 111 449 116 11 (set (reg:V4SI 26 xmm5)
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 26 xmm5)
                (reg:V4SI 22 xmm1 [276]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:588 1752 {vec_interleave_lowv4si}
     (nil))

(insn 116 111 112 11 (set (reg:V4SI 21 xmm0 [278])
        (vec_select:V4SI (vec_concat:V8SI (reg:V4SI 21 xmm0 [orig:230 vect_var_.1085 ] [230])
                (reg:V4SI 22 xmm1 [276]))
            (parallel [
                    (const_int 2 [0x2])
                    (const_int 6 [0x6])
                    (const_int 3 [0x3])
                    (const_int 7 [0x7])
                ]))) ../src/izp-gaussian.c:588 1750 {vec_interleave_highv4si}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [276])
        (nil)))

(insn 112 116 117 11 (set (reg:V2DI 26 xmm5 [277])
        (plus:V2DI (reg:V2DI 26 xmm5 [273])
            (reg:V2DI 24 xmm3 [orig:233 vect_cst_.1089 ] [233]))) ../src/izp-gaussian.c:588 1572 {*addv2di3}
     (nil))

(insn:TI 117 112 113 11 (set (reg:V2DI 21 xmm0 [282])
        (plus:V2DI (reg:V2DI 21 xmm0 [278])
            (reg:V2DI 24 xmm3 [orig:233 vect_cst_.1089 ] [233]))) ../src/izp-gaussian.c:588 1572 {*addv2di3}
     (nil))

(insn 113 117 118 11 (set (mem:V2DI (reg:DI 1 dx [orig:149 ivtmp.1153 ] [149]) [2 MEM[base: D.9179_311, offset: 0B]+0 S16 A128])
        (reg:V2DI 26 xmm5 [277])) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 26 xmm5 [277])
        (nil)))

(insn:TI 118 113 120 11 (set (mem:V2DI (plus:DI (reg:DI 1 dx [orig:149 ivtmp.1153 ] [149])
                (const_int 16 [0x10])) [2 MEM[base: D.9179_311, offset: 16B]+0 S16 A128])
        (reg:V2DI 21 xmm0 [282])) ../src/izp-gaussian.c:588 1124 {*movv2di_internal}
     (expr_list:REG_DEAD (reg:V2DI 21 xmm0 [282])
        (nil)))

(debug_insn 120 118 122 11 (var_location:SI i (debug_expr:SI D#17)) -1
     (nil))

(insn 122 120 124 11 (parallel [
            (set (reg:DI 1 dx [orig:149 ivtmp.1153 ] [149])
                (plus:DI (reg:DI 1 dx [orig:149 ivtmp.1153 ] [149])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 124 122 125 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 4 si [orig:124 ivtmp.1151 ] [124])
            (reg:SI 5 di [orig:215 bnd.1076 ] [215]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 125 124 126 11 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 359)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 359)
;; End of basic block 11 -> ( 10 12)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 23 [xmm2] 24 [xmm3] 25 [xmm4] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 45 [xmm8]


;; Succ edge  10 [91.0%]  (can_fallthru)
;; Succ edge  12 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  11 [9.0%]  (fallthru,can_fallthru,loop_exit)
(note 126 125 127 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 127 126 128 12 (parallel [
            (set (reg/v:SI 2 cx [orig:217 i ] [217])
                (plus:SI (reg/v:SI 2 cx [orig:217 i ] [217])
                    (reg:SI 37 r8 [orig:216 ratio_mult_vf.1077 ] [216])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:588 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 128 127 129 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 38 r9 [orig:214 niters.1075 ] [214])
            (reg:SI 37 r8 [orig:216 ratio_mult_vf.1077 ] [216]))) ../src/izp-gaussian.c:588 6 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:214 niters.1075 ] [214])
        (expr_list:REG_DEAD (reg:SI 37 r8 [orig:216 ratio_mult_vf.1077 ] [216])
            (nil))))

(jump_insn:TI 129 128 130 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 155)
            (pc))) ../src/izp-gaussian.c:588 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 155)
;; End of basic block 12 -> ( 13 15)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  13 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  15 (can_fallthru)

;; Start of basic block ( 12 8) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  12 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  8 (can_fallthru)
(code_label 130 129 131 13 106 "" [1 uses])

(note 131 130 139 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 139 131 478 13 NOTE_INSN_DELETED)

(insn:TI 478 139 451 13 (set (reg:SI 5 di [283])
        (subreg:SI (mult:DI (reg:DI 3 bx [orig:244 m ] [244])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:598 250 {*lea_2}
     (nil))

(insn 451 478 138 13 (set (reg:SI 4 si [284])
        (reg/v:SI 3 bx [orig:244 m ] [244])) ../src/izp-gaussian.c:598 64 {*movsi_internal}
     (nil))

(insn 138 451 134 13 (set (reg:DI 1 dx [orig:287 i ] [287])
        (sign_extend:DI (reg/v:SI 2 cx [orig:217 i ] [217]))) ../src/izp-gaussian.c:598 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 134 138 140 13 (parallel [
            (set (reg:SI 4 si [284])
                (mult:SI (reg:SI 4 si [284])
                    (reg/v:SI 2 cx [orig:217 i ] [217])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 333 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 140 134 133 13 (set (reg:DI 1 dx [orig:148 ivtmp.1103 ] [148])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:287 i ] [287])
                (const_int 8 [0x8]))
            (reg/v/f:DI 42 r13 [orig:116 g ] [116]))) ../src/izp-gaussian.c:598 249 {*lea_1}
     (nil))

(insn 133 140 135 13 (set (reg:DI 5 di [orig:186 D.9091 ] [186])
        (sign_extend:DI (reg:SI 5 di [283]))) ../src/izp-gaussian.c:598 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 135 133 136 13 (parallel [
            (set (reg:SI 4 si [285])
                (ashift:SI (reg:SI 4 si [284])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 497 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 136 135 137 13 (set (reg:DI 4 si [286])
        (sign_extend:DI (reg:SI 4 si [285]))) ../src/izp-gaussian.c:598 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 137 136 148 13 (parallel [
            (set (reg:DI 4 si [orig:176 ivtmp.1101 ] [176])
                (plus:DI (reg/v/f:DI 0 ax [orig:120 heap ] [120])
                    (reg:DI 4 si [286])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  14 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 14 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  14 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  13 [100.0%]  (fallthru,can_fallthru)
(code_label 148 137 141 14 109 "" [1 uses])

(note 141 148 143 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 143 141 145 14 (parallel [
            (set (reg/v:SI 2 cx [orig:217 i ] [217])
                (plus:SI (reg/v:SI 2 cx [orig:217 i ] [217])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(debug_insn 145 143 142 14 (var_location:SI i (reg/v:SI 2 cx [orig:217 i ] [217])) -1
     (nil))

(insn 142 145 146 14 (set (mem/f:DI (reg:DI 1 dx [orig:148 ivtmp.1103 ] [148]) [2 MEM[base: D.9099_302, offset: 0B]+0 S8 A64])
        (reg:DI 4 si [orig:176 ivtmp.1101 ] [176])) ../src/izp-gaussian.c:588 62 {*movdi_internal_rex64}
     (nil))

(insn 146 142 147 14 (parallel [
            (set (reg:DI 4 si [orig:176 ivtmp.1101 ] [176])
                (plus:DI (reg:DI 4 si [orig:176 ivtmp.1101 ] [176])
                    (reg:DI 5 di [orig:186 D.9091 ] [186])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 147 146 149 14 (parallel [
            (set (reg:DI 1 dx [orig:148 ivtmp.1103 ] [148])
                (plus:DI (reg:DI 1 dx [orig:148 ivtmp.1103 ] [148])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:587 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 149 147 150 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 41 r12 [orig:243 n ] [243])
            (reg/v:SI 2 cx [orig:217 i ] [217]))) ../src/izp-gaussian.c:587 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 150 149 155 14 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) ../src/izp-gaussian.c:587 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 148)
;; End of basic block 14 -> ( 14 15)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  14 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  15 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 14 4 6 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 1 [dx]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx]
;; live  kill	

;; Pred edge  14 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  4 [9.0%]  (can_fallthru)
;; Pred edge  6 (can_fallthru)
;; Pred edge  12 (can_fallthru)
(code_label 155 150 156 15 103 "" [3 uses])

(note 156 155 157 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:TI 157 156 158 15 (set (reg:DI 1 dx [orig:289 n ] [289])
        (sign_extend:DI (reg/v:SI 41 r12 [orig:243 n ] [243]))) ../src/izp-gaussian.c:590 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 158 157 170 15 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:289 n ] [289])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 42 r13 [orig:116 g ] [116])) [2 *D.8927_95+0 S8 A64])
        (reg/v/f:DI 0 ax [orig:120 heap ] [120])) ../src/izp-gaussian.c:590 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:289 n ] [289])
        (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:120 heap ] [120])
            (nil))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  16 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 15 34) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 22 [xmm1] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 22 [xmm1] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  15 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  34 [100.0%]  (can_fallthru)
(code_label 170 158 171 16 110 "" [1 uses])

(note 171 170 172 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(debug_insn 172 171 173 16 (var_location:DI g (clobber (const_int 0 [0]))) ../src/izp-gaussian.c:600 -1
     (nil))

(debug_insn 173 172 475 16 (var_location:SF sum (const_double:SF 0.0 [0x0.0p+0])) ../src/izp-gaussian.c:601 -1
     (nil))

(insn:TI 475 173 510 16 (set (reg:SI 0 ax [290])
        (subreg:SI (plus:DI (reg:DI 41 r12 [orig:243 n ] [243])
                (const_int -1 [0xffffffffffffffff])) 0)) ../src/izp-gaussian.c:602 250 {*lea_2}
     (nil))

(insn 510 475 477 16 (parallel [
            (set (reg:DI 2 cx [orig:97 ivtmp.1144 ] [97])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:606 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 477 510 452 16 (set (reg/v:SF 22 xmm1 [orig:96 sum ] [96])
        (const_double:SF 0.0 [0x0.0p+0])) ../src/izp-gaussian.c:606 110 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn:TI 452 477 175 16 (set (reg:SI 1 dx [291])
        (reg:SI 0 ax [290])) ../src/izp-gaussian.c:602 64 {*movsi_internal}
     (nil))

(insn:TI 175 452 176 16 (parallel [
            (set (reg:SI 1 dx [291])
                (lshiftrt:SI (reg:SI 1 dx [291])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:602 531 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 176 175 476 16 (parallel [
            (set (reg:SI 1 dx)
                (plus:SI (reg:SI 1 dx [291])
                    (reg:SI 0 ax [290])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:602 252 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [290])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 476 176 177 16 (set (reg:SI 0 ax [294])
        (subreg:SI (plus:DI (reg:DI 3 bx [orig:244 m ] [244])
                (const_int -1 [0xffffffffffffffff])) 0)) ../src/izp-gaussian.c:603 250 {*lea_2}
     (nil))

(insn 177 476 455 16 (parallel [
            (set (reg:SI 1 dx)
                (ashiftrt:SI (reg:SI 1 dx)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:602 532 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (div:SI (reg:SI 0 ax [290])
                (const_int 2 [0x2]))
            (nil))))

(insn:TI 455 177 454 16 (set (reg:SI 44 r15 [295])
        (reg:SI 0 ax [294])) ../src/izp-gaussian.c:603 64 {*movsi_internal}
     (nil))

(insn 454 455 179 16 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [4 %sfp+-16 S4 A32])
        (reg:SI 1 dx)) ../src/izp-gaussian.c:602 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx)
        (nil)))

(debug_insn 179 454 181 16 (var_location:SI yoff (mem/c:SI (plus:DI (reg/f:DI 6 bp)
            (const_int -64 [0xffffffffffffffc0])) [4 %sfp+-16 S4 A32])) ../src/izp-gaussian.c:602 -1
     (nil))

(insn:TI 181 179 182 16 (parallel [
            (set (reg:SI 44 r15 [295])
                (lshiftrt:SI (reg:SI 44 r15 [295])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:603 531 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 182 181 183 16 (parallel [
            (set (reg:SI 44 r15 [297])
                (plus:SI (reg:SI 44 r15 [295])
                    (reg:SI 0 ax [294])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:603 252 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [294])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 183 182 185 16 (parallel [
            (set (reg:SI 44 r15 [297])
                (ashiftrt:SI (reg:SI 44 r15 [297])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:603 532 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (div:SI (reg:SI 0 ax [294])
                (const_int 2 [0x2]))
            (nil))))

(debug_insn 185 183 186 16 (var_location:SI xoff (reg:SI 44 r15 [297])) ../src/izp-gaussian.c:603 -1
     (nil))

(debug_insn 186 185 188 16 (var_location:SF tmp (const_double:SF 0.0 [0x0.0p+0])) ../src/izp-gaussian.c:605 -1
     (nil))

(debug_insn 188 186 189 16 (var_location:SI y (const_int 0 [0])) -1
     (nil))

(debug_insn 189 188 190 16 (var_location:SF sum (const_double:SF 0.0 [0x0.0p+0])) -1
     (nil))

(insn 190 189 191 16 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 41 r12 [orig:243 n ] [243])
            (const_int 0 [0]))) ../src/izp-gaussian.c:606 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 191 190 390 16 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 340)
            (pc))) ../src/izp-gaussian.c:606 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 340)
;; End of basic block 16 -> ( 17 33)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  17 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  33 [9.0%]  (can_fallthru)

;; Start of basic block ( 16 20) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  16 [91.0%]  (fallthru,can_fallthru)
;; Pred edge  20 [91.0%]  (dfs_back,can_fallthru)
(code_label 390 191 375 17 134 "" [1 uses])

(note 375 390 230 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(debug_insn 230 375 231 17 (var_location:SI x (const_int 0 [0])) -1
     (nil))

(debug_insn 231 230 233 17 (var_location:SF sum (reg/v:SF 22 xmm1 [orig:96 sum ] [96])) -1
     (nil))

(insn:TI 233 231 234 17 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 3 bx [orig:244 m ] [244])
            (const_int 0 [0]))) ../src/izp-gaussian.c:607 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 234 233 235 17 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 232)
            (pc))) ../src/izp-gaussian.c:607 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 232)
;; End of basic block 17 -> ( 18 20)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  18 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  20 [9.0%]  (can_fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0] 43 [r14]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 21 [xmm0] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  17 [91.0%]  (fallthru,can_fallthru)
(note 235 234 462 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:TI 462 235 236 18 (set (reg:SF 21 xmm0)
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [4 %sfp+-12 S4 A32])) ../src/izp-gaussian.c:610 110 {*movsf_internal}
     (nil))

(insn 236 462 509 18 (set (reg:SI 0 ax [orig:105 D.9168 ] [105])
        (reg:SI 2 cx [orig:97 ivtmp.1144 ] [97])) ../src/izp-gaussian.c:598 64 {*movsi_internal}
     (nil))

(insn 509 236 459 18 (parallel [
            (set (reg:DI 43 r14 [orig:109 ivtmp.1137 ] [109])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:610 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 459 509 239 18 (set (reg:SI 1 dx)
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [4 %sfp+-16 S4 A32])) ../src/izp-gaussian.c:598 64 {*movsi_internal}
     (nil))

(insn:TI 239 459 241 18 (parallel [
            (set (reg:SI 0 ax [307])
                (minus:SI (reg:SI 0 ax [orig:105 D.9168 ] [105])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -64 [0xffffffffffffffc0])) [4 %sfp+-16 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 291 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 241 239 242 18 (set (reg:SF 21 xmm0)
        (plus:SF (reg:SF 21 xmm0)
            (reg:SF 21 xmm0))) ../src/izp-gaussian.c:610 729 {*fop_sf_comm_sse}
     (nil))

(insn:TI 242 241 238 18 (set (reg:SF 21 xmm0)
        (mult:SF (reg:SF 21 xmm0)
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [4 %sfp+-12 S4 A32]))) ../src/izp-gaussian.c:610 729 {*fop_sf_comm_sse}
     (nil))

(insn 238 242 240 18 (parallel [
            (set (reg:SI 1 dx)
                (minus:SI (reg:SI 1 dx)
                    (reg:SI 2 cx [orig:105 D.9168 ] [105])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 291 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 240 238 464 18 (parallel [
            (set (reg:SI 0 ax [307])
                (mult:SI (reg:SI 0 ax [307])
                    (reg:SI 1 dx)))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 333 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 1 dx)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 464 240 461 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [4 %sfp+-4 S4 A32])
        (reg:SF 21 xmm0)) ../src/izp-gaussian.c:610 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))

(insn:TI 461 464 218 18 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [4 %sfp+-8 S4 A32])
        (reg:SI 0 ax [307])) ../src/izp-gaussian.c:598 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [307])
        (nil)))
;; End of basic block 18 -> ( 19)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  19 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 19 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  19 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  18 [100.0%]  (fallthru,can_fallthru)
(code_label 218 461 195 19 113 "" [1 uses])

(note 195 218 456 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:TI 456 195 457 19 (set (reg:SI 0 ax [300])
        (reg:SI 43 r14 [orig:162 D.9148 ] [162])) ../src/izp-gaussian.c:598 64 {*movsi_internal}
     (nil))

(insn 457 456 424 19 (set (reg:SI 4 si)
        (reg:SI 44 r15 [297])) ../src/izp-gaussian.c:598 64 {*movsi_internal}
     (nil))

(insn 424 457 199 19 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [6 S8 A64])
        (reg:DI 2 cx)) ../src/izp-gaussian.c:608 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))

(insn:TI 199 424 198 19 (parallel [
            (set (reg:SI 4 si)
                (minus:SI (reg:SI 4 si)
                    (reg:SI 43 r14 [orig:162 D.9148 ] [162])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 291 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 198 199 425 19 (parallel [
            (set (reg:SI 0 ax [300])
                (minus:SI (reg:SI 0 ax [300])
                    (reg:SI 44 r15 [297])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 291 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 425 198 200 19 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [6 S4 A128])
        (reg:SF 22 xmm1)) ../src/izp-gaussian.c:608 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1)
        (nil)))

(insn:TI 200 425 201 19 (parallel [
            (set (reg:SI 0 ax [300])
                (mult:SI (reg:SI 0 ax [300])
                    (reg:SI 4 si [299])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:609 333 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 4 si [299])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 201 200 202 19 (parallel [
            (set (reg:SI 0 ax [301])
                (plus:SI (reg:SI 0 ax [300])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [4 %sfp+-8 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:609 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 202 201 203 19 (set (reg:SF 21 xmm0 [303])
        (float:SF (reg:SI 0 ax [301]))) ../src/izp-gaussian.c:610 217 {*floatsisf2_sse_interunit}
     (expr_list:REG_DEAD (reg:SI 0 ax [301])
        (nil)))

(insn:TI 203 202 471 19 (set (reg:SF 21 xmm0 [303])
        (div:SF (reg:SF 21 xmm0 [303])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [4 %sfp+-4 S4 A32]))) ../src/izp-gaussian.c:610 740 {*fop_sf_1_sse}
     (nil))

(insn 471 203 472 19 (set (reg:V4SF 21 xmm0 [303])
        (vec_select:V4SF (vec_concat:V8SF (reg:V4SF 21 xmm0 [303])
                (reg:V4SF 21 xmm0 [303]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:608 1472 {vec_interleave_lowv4sf}
     (nil))

(insn 472 471 206 19 (set (reg:V2DF 21 xmm0 [304])
        (float_extend:V2DF (vec_select:V2SF (reg:V4SF 21 xmm0 [303])
                (parallel [
                        (const_int 0 [0])
                        (const_int 1 [0x1])
                    ])))) ../src/izp-gaussian.c:608 1462 {sse2_cvtps2pd}
     (nil))

(call_insn:TI 206 472 426 19 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x2ae34552ee00 exp>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:608 929 {*call_value_0_rex64}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(insn 426 206 473 19 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [6 S8 A64])) ../src/izp-gaussian.c:611 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 473 426 427 19 (set (reg:V2DF 21 xmm0 [orig:90 tmp ] [90])
        (vec_duplicate:V2DF (reg:DF 21 xmm0 [orig:89 D.6886 ] [89]))) ../src/izp-gaussian.c:608 1553 {*vec_dupv2df_sse3}
     (nil))

(insn 427 473 474 19 (set (reg:SF 22 xmm1)
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [6 S4 A128])) ../src/izp-gaussian.c:612 110 {*movsf_internal}
     (nil))

(insn 474 427 209 19 (set (reg:V4SF 21 xmm0 [orig:90 tmp ] [90])
        (vec_concat:V4SF (float_truncate:V2SF (reg:V2DF 21 xmm0 [orig:90 tmp ] [90]))
            (const_vector:V2SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ]))) ../src/izp-gaussian.c:608 1459 {*sse2_cvtpd2ps}
     (nil))

(debug_insn 209 474 212 19 (var_location:SF tmp (reg/v:SF 21 xmm0 [orig:90 tmp ] [90])) ../src/izp-gaussian.c:608 -1
     (nil))

(insn:TI 212 209 215 19 (set (reg/v:SF 22 xmm1 [orig:96 sum ] [96])
        (plus:SF (reg/v:SF 22 xmm1 [orig:96 sum ] [96])
            (reg/v:SF 21 xmm0 [orig:90 tmp ] [90]))) ../src/izp-gaussian.c:612 729 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:90 tmp ] [90])
        (nil)))

(debug_insn 215 212 216 19 (var_location:SI x (debug_expr:SI D#19)) -1
     (nil))

(debug_insn 216 215 210 19 (var_location:SF sum (reg/v:SF 22 xmm1 [orig:96 sum ] [96])) -1
     (nil))

(insn:TI 210 216 211 19 (set (reg/f:DI 0 ax [orig:305 MEM[base: g_97, index: ivtmp.1144_126, step: 8, offset: 0B] ] [305])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 2 cx [orig:97 ivtmp.1144 ] [97])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 42 r13 [orig:116 g ] [116])) [2 MEM[base: g_97, index: ivtmp.1144_126, step: 8, offset: 0B]+0 S8 A64])) ../src/izp-gaussian.c:611 62 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (mult:DI (reg:DI 2 cx [orig:97 ivtmp.1144 ] [97])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 42 r13 [orig:116 g ] [116])) [2 MEM[base: g_97, index: ivtmp.1144_126, step: 8, offset: 0B]+0 S8 A64])
        (nil)))

(insn:TI 211 210 217 19 (set (mem:SF (plus:DI (mult:DI (reg:DI 43 r14 [orig:109 ivtmp.1137 ] [109])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [orig:305 MEM[base: g_97, index: ivtmp.1144_126, step: 8, offset: 0B] ] [305])) [3 *D.6893_39+0 S4 A32])
        (reg/v:SF 21 xmm0 [orig:90 tmp ] [90])) ../src/izp-gaussian.c:611 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:305 MEM[base: g_97, index: ivtmp.1144_126, step: 8, offset: 0B] ] [305])
        (nil)))

(insn 217 211 219 19 (parallel [
            (set (reg:DI 43 r14 [orig:109 ivtmp.1137 ] [109])
                (plus:DI (reg:DI 43 r14 [orig:109 ivtmp.1137 ] [109])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:612 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 219 217 220 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 3 bx [orig:244 m ] [244])
            (reg:SI 43 r14 [orig:109 ivtmp.1137 ] [109]))) ../src/izp-gaussian.c:607 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 220 219 232 19 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 218)
            (pc))) ../src/izp-gaussian.c:607 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 218)
;; End of basic block 19 -> ( 19 20)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  19 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  20 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 19 17) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  19 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  17 [9.0%]  (can_fallthru)
(code_label 232 220 221 20 115 "" [1 uses])

(note 221 232 223 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(debug_insn 223 221 224 20 (var_location:SI y (debug_expr:SI D#20)) -1
     (nil))

(debug_insn 224 223 225 20 (var_location:SF sum (reg/v:SF 22 xmm1 [orig:96 sum ] [96])) -1
     (nil))

(insn:TI 225 224 226 20 (parallel [
            (set (reg:DI 2 cx [orig:97 ivtmp.1144 ] [97])
                (plus:DI (reg:DI 2 cx [orig:97 ivtmp.1144 ] [97])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:607 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 226 225 227 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 41 r12 [orig:243 n ] [243])
            (reg:SI 2 cx [orig:97 ivtmp.1144 ] [97]))) ../src/izp-gaussian.c:606 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 227 226 245 20 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 390)
            (pc))) ../src/izp-gaussian.c:606 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 390)
;; End of basic block 20 -> ( 17 21)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 44 [r15]


;; Succ edge  17 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  21 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 17 [flags] 21 [xmm0] 23 [xmm2] 38 [r9]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13]
;; live  gen 	 21 [xmm0] 23 [xmm2] 38 [r9]
;; live  kill	 17 [flags]

;; Pred edge  20 [9.0%]  (fallthru,can_fallthru,loop_exit)
(code_label 245 227 246 21 114 "" [0 uses])

(note 246 245 247 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(debug_insn 247 246 465 21 (var_location:SI y (const_int 0 [0])) -1
     (nil))

(insn:TI 465 247 508 21 (set (reg:SF 21 xmm0)
        (reg/v:SF 22 xmm1 [orig:96 sum ] [96])) ../src/izp-gaussian.c:618 110 {*movsf_internal}
     (nil))

(insn 508 465 336 21 (parallel [
            (set (reg:DI 38 r9 [orig:195 ivtmp.1132 ] [195])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:606 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 336 508 466 21 (set (reg:V4SF 21 xmm0)
        (vec_duplicate:V4SF (reg:SF 21 xmm0))) ../src/izp-gaussian.c:618 1492 {*vec_dupv4sf}
     (nil))

(insn 466 336 290 21 (set (reg:V4SF 23 xmm2 [orig:325 vect_cst_.1061 ] [325])
        (reg:V4SF 21 xmm0)) ../src/izp-gaussian.c:618 1126 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 21 xmm0)
        (nil)))
;; End of basic block 21 -> ( 22)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]


;; Succ edge  22 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 32 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  32 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  21 [100.0%]  (fallthru,can_fallthru)
(code_label 290 466 291 22 116 "" [1 uses])

(note 291 290 292 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(debug_insn 292 291 294 22 (var_location:SI x (const_int 0 [0])) -1
     (nil))

(insn:TI 294 292 295 22 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 3 bx [orig:244 m ] [244])
            (const_int 0 [0]))) ../src/izp-gaussian.c:618 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 295 294 296 22 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 293)
            (pc))) ../src/izp-gaussian.c:618 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 293)
;; End of basic block 22 -> ( 23 32)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]


;; Succ edge  23 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  32 [9.0%]  (can_fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 38 [r9] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  22 [91.0%]  (fallthru,can_fallthru)
(note 296 295 297 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:TI 297 296 467 23 (set (reg/f:DI 37 r8 [orig:164 pretmp.1033 ] [164])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 38 r9 [orig:195 ivtmp.1132 ] [195])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 42 r13 [orig:116 g ] [116])) [2 MEM[base: g_97, index: ivtmp.1132_217, step: 8, offset: 0B]+0 S8 A64])) ../src/izp-gaussian.c:618 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 467 297 299 23 (set (reg:DI 2 cx [317])
        (reg/f:DI 37 r8 [orig:164 pretmp.1033 ] [164])) ../src/izp-gaussian.c:598 62 {*movdi_internal_rex64}
     (nil))

(insn 299 467 300 23 (set (reg:DI 1 dx [orig:182 ivtmp.1121 ] [182])
        (reg/f:DI 37 r8 [orig:164 pretmp.1033 ] [164])) ../src/izp-gaussian.c:598 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 300 299 301 23 (parallel [
            (set (reg:DI 2 cx [317])
                (and:DI (reg:DI 2 cx [317])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 379 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 301 300 302 23 (parallel [
            (set (reg:DI 2 cx [317])
                (lshiftrt:DI (reg:DI 2 cx [317])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 533 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 302 301 303 23 (parallel [
            (set (reg:DI 2 cx [317])
                (neg:DI (reg:DI 2 cx [317])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 448 {*negdi2_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 303 302 304 23 (parallel [
            (set (reg:SI 2 cx [318])
                (and:SI (reg:SI 2 cx [317])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 380 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 304 303 305 23 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [318])
            (reg/v:SI 3 bx [orig:244 m ] [244]))) ../src/izp-gaussian.c:598 6 {*cmpsi_1}
     (nil))

(insn:TI 305 304 507 23 (set (reg:SI 2 cx [orig:102 prolog_loop_niters.1047 ] [102])
        (if_then_else:SI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:SI 2 cx [318])
            (reg/v:SI 3 bx [orig:244 m ] [244]))) ../src/izp-gaussian.c:598 885 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))

(insn 507 305 307 23 (parallel [
            (set (reg:DI 0 ax [orig:181 x ] [181])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 307 507 306 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx [orig:102 prolog_loop_niters.1047 ] [102])
            (const_int 0 [0]))) ../src/izp-gaussian.c:598 2 {*cmpsi_ccno_1}
     (nil))

(insn 306 307 308 23 (set (reg:DI 4 si [orig:169 prolog_loop_niters.1048 ] [169])
        (zero_extend:DI (reg:SI 2 cx [orig:102 prolog_loop_niters.1047 ] [102]))) ../src/izp-gaussian.c:598 114 {*zero_extendsidi2_rex64}
     (nil))

(jump_insn:TI 308 306 318 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 325)
            (pc))) ../src/izp-gaussian.c:598 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 325)
;; End of basic block 23 -> ( 24 26)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]


;; Succ edge  24 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  26 (can_fallthru)

;; Start of basic block ( 23 24) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]

;; Pred edge  23 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  24 [91.0%]  (dfs_back,can_fallthru)
(code_label 318 308 309 24 122 "" [1 uses])

(note 309 318 311 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:TI 311 309 314 24 (set (reg:SF 21 xmm0 [320])
        (mem:SF (reg:DI 1 dx [orig:182 ivtmp.1121 ] [182]) [3 MEM[base: D.9126_89, offset: 0B]+0 S4 A32])) ../src/izp-gaussian.c:619 110 {*movsf_internal}
     (nil))

(insn 314 311 316 24 (parallel [
            (set (reg/v:SI 0 ax [orig:181 x ] [181])
                (plus:SI (reg/v:SI 0 ax [orig:181 x ] [181])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:618 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(debug_insn 316 314 312 24 (var_location:SI x (reg/v:SI 0 ax [orig:181 x ] [181])) -1
     (nil))

(insn:TI 312 316 313 24 (set (reg:SF 21 xmm0 [320])
        (div:SF (reg:SF 21 xmm0 [320])
            (reg/v:SF 22 xmm1 [orig:96 sum ] [96]))) ../src/izp-gaussian.c:619 740 {*fop_sf_1_sse}
     (nil))

(insn:TI 313 312 317 24 (set (mem:SF (reg:DI 1 dx [orig:182 ivtmp.1121 ] [182]) [3 MEM[base: D.9126_89, offset: 0B]+0 S4 A32])
        (reg:SF 21 xmm0 [320])) ../src/izp-gaussian.c:619 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [320])
        (nil)))

(insn 317 313 319 24 (parallel [
            (set (reg:DI 1 dx [orig:182 ivtmp.1121 ] [182])
                (plus:DI (reg:DI 1 dx [orig:182 ivtmp.1121 ] [182])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:618 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 319 317 320 24 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:102 prolog_loop_niters.1047 ] [102])
            (reg/v:SI 0 ax [orig:181 x ] [181]))) ../src/izp-gaussian.c:618 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 320 319 321 24 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 318)
            (pc))) ../src/izp-gaussian.c:618 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 318)
;; End of basic block 24 -> ( 24 25)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]


;; Succ edge  24 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  25 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  24 [9.0%]  (fallthru,can_fallthru,loop_exit)
(note 321 320 323 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:TI 323 321 324 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 3 bx [orig:244 m ] [244])
            (reg:SI 2 cx [orig:102 prolog_loop_niters.1047 ] [102]))) ../src/izp-gaussian.c:618 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 324 323 325 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 293)
            (pc))) ../src/izp-gaussian.c:618 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 293)
;; End of basic block 25 -> ( 26 32)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]


;; Succ edge  26 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  32 (can_fallthru)

;; Start of basic block ( 23 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags] 39 [r10] 40 [r11]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 5 [di] 17 [flags] 39 [r10] 40 [r11]
;; live  kill	 17 [flags]

;; Pred edge  23 (can_fallthru)
;; Pred edge  25 [100.0%]  (fallthru,can_fallthru)
(code_label 325 324 326 26 121 "" [1 uses])

(note 326 325 468 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:TI 468 326 327 26 (set (reg:SI 40 r11 [orig:178 niters.1051 ] [178])
        (reg/v:SI 3 bx [orig:244 m ] [244])) ../src/izp-gaussian.c:618 64 {*movsi_internal}
     (nil))

(insn:TI 327 468 469 26 (parallel [
            (set (reg:SI 40 r11 [orig:178 niters.1051 ] [178])
                (minus:SI (reg:SI 40 r11 [orig:178 niters.1051 ] [178])
                    (reg:SI 2 cx [orig:102 prolog_loop_niters.1047 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:618 291 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:102 prolog_loop_niters.1047 ] [102])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 469 327 328 26 (set (reg:SI 5 di [orig:179 bnd.1052 ] [179])
        (reg:SI 40 r11 [orig:178 niters.1051 ] [178])) ../src/izp-gaussian.c:618 64 {*movsi_internal}
     (nil))

(insn:TI 328 469 470 26 (parallel [
            (set (reg:SI 5 di [orig:179 bnd.1052 ] [179])
                (lshiftrt:SI (reg:SI 5 di [orig:179 bnd.1052 ] [179])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:618 531 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 470 328 331 26 (set (reg:SI 39 r10 [orig:180 ratio_mult_vf.1053 ] [180])
        (subreg:SI (mult:DI (reg:DI 5 di [orig:179 bnd.1052 ] [179])
                (const_int 4 [0x4])) 0)) ../src/izp-gaussian.c:618 250 {*lea_2}
     (nil))

(insn:TI 331 470 332 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 39 r10 [orig:180 ratio_mult_vf.1053 ] [180])
            (const_int 0 [0]))) ../src/izp-gaussian.c:618 2 {*cmpsi_ccno_1}
     (nil))

(jump_insn:TI 332 331 333 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) ../src/izp-gaussian.c:618 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 330)
;; End of basic block 26 -> ( 27 30)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]


;; Succ edge  27 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  30 (can_fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 2 [cx] 4 [si]
;; live  kill	 17 [flags]

;; Pred edge  26 [100.0%]  (fallthru,can_fallthru)
(note 333 332 334 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 334 333 335 27 NOTE_INSN_DELETED)

(insn:TI 335 334 505 27 (set (reg/f:DI 4 si [orig:190 vect_p.1058 ] [190])
        (plus:DI (mult:DI (reg:DI 4 si [orig:169 prolog_loop_niters.1048 ] [169])
                (const_int 4 [0x4]))
            (reg/f:DI 37 r8 [orig:164 pretmp.1033 ] [164]))) ../src/izp-gaussian.c:618 249 {*lea_1}
     (nil))

(insn 505 335 506 27 (parallel [
            (set (reg:DI 1 dx [orig:166 ivtmp.1126 ] [166])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:606 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 506 505 258 27 (parallel [
            (set (reg:DI 2 cx [orig:177 ivtmp.1123 ] [177])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:606 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 27 -> ( 28)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]


;; Succ edge  28 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 28 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 23 [xmm2]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]

;; Pred edge  28 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  27 [100.0%]  (fallthru,can_fallthru)
(code_label 258 506 250 28 117 "" [1 uses])

(note 250 258 251 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn:TI 251 250 256 28 (set (reg:V4SF 21 xmm0 [310])
        (mem:V4SF (plus:DI (reg/f:DI 4 si [orig:190 vect_p.1058 ] [190])
                (reg:DI 1 dx [orig:166 ivtmp.1126 ] [166])) [3 MEM[base: vect_p.1058_207, index: ivtmp.1126_156, offset: 0B]+0 S16 A128])) ../src/izp-gaussian.c:619 1126 {*movv4sf_internal}
     (nil))

(insn 256 251 252 28 (parallel [
            (set (reg:SI 2 cx [orig:177 ivtmp.1123 ] [177])
                (plus:SI (reg:SI 2 cx [orig:177 ivtmp.1123 ] [177])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:619 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 252 256 253 28 (set (reg:V4SF 21 xmm0 [310])
        (div:V4SF (reg:V4SF 21 xmm0 [310])
            (reg:V4SF 23 xmm2 [orig:325 vect_cst_.1061 ] [325]))) ../src/izp-gaussian.c:619 1194 {sse_divv4sf3}
     (nil))

(insn:TI 253 252 255 28 (set (mem:V4SF (plus:DI (reg/f:DI 4 si [orig:190 vect_p.1058 ] [190])
                (reg:DI 1 dx [orig:166 ivtmp.1126 ] [166])) [3 MEM[base: vect_p.1058_207, index: ivtmp.1126_156, offset: 0B]+0 S16 A128])
        (reg:V4SF 21 xmm0 [310])) ../src/izp-gaussian.c:619 1126 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 21 xmm0 [310])
        (nil)))

(debug_insn 255 253 257 28 (var_location:SI x (debug_expr:SI D#16)) -1
     (nil))

(insn 257 255 259 28 (parallel [
            (set (reg:DI 1 dx [orig:166 ivtmp.1126 ] [166])
                (plus:DI (reg:DI 1 dx [orig:166 ivtmp.1126 ] [166])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:619 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 259 257 260 28 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:177 ivtmp.1123 ] [177])
            (reg:SI 5 di [orig:179 bnd.1052 ] [179]))) ../src/izp-gaussian.c:619 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 260 259 261 28 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 258)
            (pc))) ../src/izp-gaussian.c:619 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 258)
;; End of basic block 28 -> ( 28 29)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]


;; Succ edge  28 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  29 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 39 [r10] 40 [r11]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  28 [9.0%]  (fallthru,can_fallthru,loop_exit)
(note 261 260 262 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn:TI 262 261 263 29 (parallel [
            (set (reg/v:SI 0 ax [orig:181 x ] [181])
                (plus:SI (reg/v:SI 0 ax [orig:181 x ] [181])
                    (reg:SI 39 r10 [orig:180 ratio_mult_vf.1053 ] [180])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:619 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 263 262 264 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 40 r11 [orig:178 niters.1051 ] [178])
            (reg:SI 39 r10 [orig:180 ratio_mult_vf.1053 ] [180]))) ../src/izp-gaussian.c:619 6 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 40 r11 [orig:178 niters.1051 ] [178])
        (expr_list:REG_DEAD (reg:SI 39 r10 [orig:180 ratio_mult_vf.1053 ] [180])
            (nil))))

(jump_insn:TI 264 263 330 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 293)
            (pc))) ../src/izp-gaussian.c:619 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0])
            (nil)))
 -> 293)
;; End of basic block 29 -> ( 30 32)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]


;; Succ edge  30 [100.0%]  (fallthru,can_fallthru)
;; Succ edge  32 (can_fallthru)

;; Start of basic block ( 29 26) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 1 [dx]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx]
;; live  kill	

;; Pred edge  29 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  26 (can_fallthru)
(code_label 330 264 265 30 124 "" [1 uses])

(note 265 330 267 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 267 265 266 30 NOTE_INSN_DELETED)

(insn:TI 266 267 268 30 (set (reg:DI 1 dx [orig:311 x ] [311])
        (sign_extend:DI (reg/v:SI 0 ax [orig:181 x ] [181]))) ../src/izp-gaussian.c:598 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 268 266 278 30 (set (reg:DI 1 dx [orig:206 ivtmp.1116 ] [206])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:311 x ] [311])
                (const_int 4 [0x4]))
            (reg/f:DI 37 r8 [orig:164 pretmp.1033 ] [164]))) ../src/izp-gaussian.c:598 249 {*lea_1}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:164 pretmp.1033 ] [164])
        (nil)))
;; End of basic block 30 -> ( 31)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]


;; Succ edge  31 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 31 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]

;; Pred edge  31 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  30 [100.0%]  (fallthru,can_fallthru)
(code_label 278 268 269 31 119 "" [1 uses])

(note 269 278 271 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:TI 271 269 274 31 (set (reg:SF 21 xmm0 [314])
        (mem:SF (reg:DI 1 dx [orig:206 ivtmp.1116 ] [206]) [3 MEM[base: D.9119_238, offset: 0B]+0 S4 A32])) ../src/izp-gaussian.c:619 110 {*movsf_internal}
     (nil))

(insn 274 271 276 31 (parallel [
            (set (reg/v:SI 0 ax [orig:181 x ] [181])
                (plus:SI (reg/v:SI 0 ax [orig:181 x ] [181])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:618 252 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(debug_insn 276 274 272 31 (var_location:SI x (reg/v:SI 0 ax [orig:181 x ] [181])) -1
     (nil))

(insn:TI 272 276 273 31 (set (reg:SF 21 xmm0 [314])
        (div:SF (reg:SF 21 xmm0 [314])
            (reg/v:SF 22 xmm1 [orig:96 sum ] [96]))) ../src/izp-gaussian.c:619 740 {*fop_sf_1_sse}
     (nil))

(insn:TI 273 272 277 31 (set (mem:SF (reg:DI 1 dx [orig:206 ivtmp.1116 ] [206]) [3 MEM[base: D.9119_238, offset: 0B]+0 S4 A32])
        (reg:SF 21 xmm0 [314])) ../src/izp-gaussian.c:619 110 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [314])
        (nil)))

(insn 277 273 279 31 (parallel [
            (set (reg:DI 1 dx [orig:206 ivtmp.1116 ] [206])
                (plus:DI (reg:DI 1 dx [orig:206 ivtmp.1116 ] [206])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:618 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 279 277 280 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 3 bx [orig:244 m ] [244])
            (reg/v:SI 0 ax [orig:181 x ] [181]))) ../src/izp-gaussian.c:618 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 280 279 293 31 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 278)
            (pc))) ../src/izp-gaussian.c:618 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 278)
;; End of basic block 31 -> ( 31 32)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]


;; Succ edge  31 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  32 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 31 22 29 25) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 38 [r9] 41 [r12]
;; lr  def 	 17 [flags] 38 [r9]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags] 38 [r9]
;; live  kill	 17 [flags]

;; Pred edge  31 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  22 [9.0%]  (can_fallthru)
;; Pred edge  29 (can_fallthru)
;; Pred edge  25 (can_fallthru)
(code_label 293 280 284 32 120 "" [3 uses])

(note 284 293 286 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(debug_insn 286 284 287 32 (var_location:SI y (debug_expr:SI D#18)) -1
     (nil))

(insn:TI 287 286 288 32 (parallel [
            (set (reg:DI 38 r9 [orig:195 ivtmp.1132 ] [195])
                (plus:DI (reg:DI 38 r9 [orig:195 ivtmp.1132 ] [195])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:618 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 288 287 289 32 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 41 r12 [orig:243 n ] [243])
            (reg:SI 38 r9 [orig:195 ivtmp.1132 ] [195]))) ../src/izp-gaussian.c:617 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 289 288 340 32 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 290)
            (pc))) ../src/izp-gaussian.c:617 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 290)
;; End of basic block 32 -> ( 22 33)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 23 [xmm2] 38 [r9] 41 [r12] 42 [r13]


;; Succ edge  22 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  33 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 32 16) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp] 20 [frame] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  32 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  16 [9.0%]  (can_fallthru)
(code_label 340 289 341 33 112 "" [1 uses])

(note 341 340 521 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note 521 341 496 33 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 496 521 346 33 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) ../src/izp-gaussian.c:624 911 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 346 496 349 33 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 42 r13 [orig:116 g ] [116])) ../src/izp-gaussian.c:624 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:116 g ] [116])
        (nil)))

(insn 349 346 497 33 (use (reg/i:DI 0 ax)) ../src/izp-gaussian.c:624 -1
     (nil))

(insn:TI 497 349 498 33 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:624 52 {*popdi1}
     (nil))

(insn:TI 498 497 499 33 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:624 52 {*popdi1}
     (nil))

(insn:TI 499 498 500 33 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:624 52 {*popdi1}
     (nil))

(insn:TI 500 499 501 33 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:624 52 {*popdi1}
     (nil))

(insn:TI 501 500 502 33 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:624 52 {*popdi1}
     (nil))

(insn/f:TI 502 501 503 33 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:624 52 {*popdi1}
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))

(jump_insn:TI 503 502 504 33 (return) ../src/izp-gaussian.c:624 634 {return_internal}
     (nil))
;; End of basic block 33 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  EXIT [100.0%] 

(barrier 504 503 161)

;; Start of basic block ( 3 2) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  3 [4.3%]  (can_fallthru)
;; Pred edge  2 [4.3%]  (can_fallthru)
(code_label 161 504 162 34 102 "" [2 uses])

(note 162 161 163 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(debug_insn 163 162 164 34 (var_location:DI __stream (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2ae34564c320 stderr>) [2 stderr+0 S8 A64])) ../src/izp-gaussian.c:593 -1
     (nil))

(debug_insn 164 163 167 34 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ae345ba6dc0 *.LC4>)) ../src/izp-gaussian.c:593 -1
     (nil))

(insn:TI 167 164 165 34 (set (reg:DI 5 di)
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2ae34564c320 stderr>) [2 stderr+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (nil))

(insn 165 167 511 34 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ae345ba6dc0 *.LC4>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (nil))

(insn 511 165 166 34 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 166 511 512 34 (set (reg:SI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 64 {*movsi_internal}
     (nil))

(insn 512 166 169 34 (parallel [
            (set (reg/v/f:DI 42 r13 [orig:116 g ] [116])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 169 512 517 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2ae34567a300 __fprintf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(jump_insn 517 169 518 34 (set (pc)
        (label_ref 170)) 606 {jump}
     (nil)
 -> 170)
;; End of basic block 34 -> ( 16)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  16 [100.0%]  (can_fallthru)

(barrier 518 517 355)

;; Start of basic block ( 5) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]

;; Pred edge  5 (can_fallthru)
(code_label 355 518 354 35 125 "" [1 uses])

(note 354 355 514 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn:TI 514 354 519 35 (parallel [
            (set (reg:DI 2 cx [orig:217 i ] [217])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:598 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 519 514 520 35 (set (pc)
        (label_ref 81)) 606 {jump}
     (nil)
 -> 81)
;; End of basic block 35 -> ( 8)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]


;; Succ edge  8 [100.0%]  (can_fallthru)

(barrier 520 519 423)

(note 423 520 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function main (main) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 13 (    1)


main

Dataflow summary:
def_info->table_size = 1386, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 18[fpsr] 21[xmm0] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14]
;;  ref usage 	r0={46d,38u} r1={51d,24u} r2={41d,13u} r3={7d,15u,2e} r4={47d,20u} r5={57d,29u} r6={3d,25u,2e} r7={13d,55u} r8={28d} r9={28d} r10={28d} r11={28d} r12={28d} r13={28d} r14={28d} r15={28d} r17={54d,4u} r18={30d} r19={28d} r20={1d,1u} r21={36d,8u} r22={29d} r23={29d} r24={29d} r25={29d} r26={29d} r27={29d} r28={29d} r29={28d} r30={28d} r31={28d} r32={28d} r33={28d} r34={28d} r35={28d} r36={28d} r37={33d,4u} r38={30d,1u} r39={28d} r40={28d} r41={4d,11u} r42={3d,4u} r43={3d,5u} r45={28d} r46={28d} r47={28d} r48={28d} r49={28d} r50={28d} r51={28d} r52={28d} 
;;    total ref usage 1679{1418d,257u,4e} in 201{173 regular + 28 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 0 )->[2]->( 10 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 2 )->[3]->( 12 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 3 )->[4]->( 11 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags] 18 [fpsr]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]

( 5 11 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 21 [xmm0] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 6 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 7 [sp] 20 [frame]

( 8 10 12 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 0 [ax] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 2 )->[10]->( 9 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 7 [sp] 20 [frame]

( 4 )->[11]->( 6 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 1 [dx] 2 [cx] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]

( 3 )->[12]->( 9 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 7 [sp] 20 [frame]

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(20){ }u-1(41){ }u-1(42){ }u-1(43){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 2 to worklist
  Adding insn 263 to worklist
  Adding insn 261 to worklist
  Adding insn 259 to worklist
  Adding insn 258 to worklist
  Adding insn 257 to worklist
  Adding insn 256 to worklist
  Adding insn 254 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 37 to worklist
  Adding insn 31 to worklist
  Adding insn 164 to worklist
  Adding insn 162 to worklist
  Adding insn 161 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 148 to worklist
  Adding insn 144 to worklist
  Adding insn 138 to worklist
  Adding insn 136 to worklist
  Adding insn 134 to worklist
  Adding insn 132 to worklist
  Adding insn 128 to worklist
  Adding insn 121 to worklist
  Adding insn 119 to worklist
  Adding insn 117 to worklist
  Adding insn 115 to worklist
  Adding insn 113 to worklist
  Adding insn 111 to worklist
  Adding insn 109 to worklist
  Adding insn 107 to worklist
  Adding insn 103 to worklist
  Adding insn 102 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 93 to worklist
  Adding insn 92 to worklist
  Adding insn 90 to worklist
  Adding insn 86 to worklist
  Adding insn 84 to worklist
  Adding insn 81 to worklist
  Adding insn 79 to worklist
  Adding insn 73 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 64 to worklist
  Adding insn 200 to worklist
  Adding insn 198 to worklist
  Adding insn 196 to worklist
  Adding insn 193 to worklist
  Adding insn 191 to worklist
  Adding insn 187 to worklist
  Adding insn 208 to worklist
  Adding insn 223 to worklist
  Adding insn 219 to worklist
  Adding insn 218 to worklist
  Adding insn 216 to worklist
  Adding insn 214 to worklist
  Adding insn 212 to worklist
  Adding insn 271 to worklist
  Adding insn 233 to worklist
  Adding insn 284 to worklist
  Adding insn 26 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 286 to worklist
  Adding insn 288 to worklist
  Adding insn 55 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
Finished finding needed instructions:
processing block 9 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 270 to worklist
  Adding insn 269 to worklist
  Adding insn 268 to worklist
  Adding insn 267 to worklist
  Adding insn 266 to worklist
  Adding insn 265 to worklist
processing block 10 lr out =  0 [ax] 7 [sp] 20 [frame]
  Adding insn 281 to worklist
  Adding insn 280 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 17 to worklist
processing block 12 lr out =  0 [ax] 7 [sp] 20 [frame]
  Adding insn 6 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 49 to worklist
processing block 8 lr out =  0 [ax] 7 [sp] 20 [frame]
  Adding insn 274 to worklist
  Adding insn 273 to worklist
  Adding insn 221 to worklist
  Adding insn 220 to worklist
  Adding insn 217 to worklist
  Adding insn 215 to worklist
  Adding insn 213 to worklist
  Adding insn 211 to worklist
processing block 7 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
  Adding insn 207 to worklist
  Adding insn 206 to worklist
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 203 to worklist
  Adding insn 275 to worklist
processing block 6 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
  Adding insn 199 to worklist
  Adding insn 195 to worklist
  Adding insn 194 to worklist
  Adding insn 192 to worklist
  Adding insn 190 to worklist
  Adding insn 189 to worklist
  Adding insn 188 to worklist
  Adding insn 186 to worklist
  Adding insn 185 to worklist
  Adding insn 184 to worklist
  Adding insn 183 to worklist
  Adding insn 253 to worklist
  Adding insn 276 to worklist
  Adding insn 180 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 251 to worklist
  Adding insn 250 to worklist
processing block 11 lr out =  0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]
  Adding insn 173 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 170 to worklist
  Adding insn 249 to worklist
  Adding insn 169 to worklist
  Adding insn 248 to worklist
processing block 5 lr out =  0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]
  Adding insn 165 to worklist
processing block 4 lr out =  0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
  Adding insn 163 to worklist
  Adding insn 247 to worklist
  Adding insn 159 to worklist
  Adding insn 158 to worklist
  Adding insn 157 to worklist
  Adding insn 149 to worklist
  Adding insn 147 to worklist
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 143 to worklist
  Adding insn 142 to worklist
  Adding insn 141 to worklist
  Adding insn 140 to worklist
  Adding insn 139 to worklist
  Adding insn 137 to worklist
  Adding insn 135 to worklist
  Adding insn 133 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 278 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 101 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 246 to worklist
  Adding insn 91 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 85 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 277 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
processing block 3 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 44 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 279 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
processing block 2 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 3 to worklist
  Adding insn 260 to worklist
  Adding insn 255 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 13 (    1)
deleting insn with uid = 262.
deleting insn with uid = 4.
deleting insn with uid = 10.
;;   ======================================================
;;   -- basic block 2 from 254 to 15 -- after reload
;;   ======================================================

;;	  0-->   254 [--sp]=bp                         :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   255 bp=sp                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   256 [--sp]=r14                        :c2_decodern,(c2_p4+c2_p3)
;;	  1-->   261 use bp                            :nothing
;;	  2-->   257 [--sp]=r13                        :c2_decodern,(c2_p4+c2_p3)
;;	  3-->   258 [--sp]=r12                        :c2_decodern,(c2_p4+c2_p3)
;;	  4-->   259 [--sp]=bx                         :c2_decodern,(c2_p4+c2_p3)
;;	  5-->   260 {sp=sp-0x30;clobber flags;clobber :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   263 unspec/v{0;}                      :c2_decoder0
;;	 12-->     2 [bp-0x44]=di                      :c2_decodern,(c2_p4+c2_p3)
;;	 12-->    12 di=bp-0x44                        :c2_decodern,c2_p0
;;	 12-->     3 bx=si                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->    13 call <...>                        :c2_decoder0
;;	 13-->    14 flags=cmp([bp-0x44],0x1)          :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 17-->    15 pc={(flags<=0)?L282:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 17
;;   new head = 254
;;   new tail = 15

;;   ======================================================
;;   -- basic block 3 from 31 to 45 -- after reload
;;   ======================================================

;;	  0-->    31: debug __fmt => `*.LC7'           :nothing
;;	  0-->    32 dx=[bx+0x8]                       :c2_decodern,c2_p2
;;	  0-->    34 si=`*.LC7'                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    35 di=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   279 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    37 call <...>                        :c2_decoder0
;;	  4-->    38 di=[bx+0x8]                       :c2_decodern,c2_p2
;;	  4-->    39 si=`*.LC8'                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->    41 call <...>                        :c2_decoder0
;;	  8-->    43: debug fp => ax                   :nothing
;;	  9-->    44 flags=cmp(ax,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 10-->    45 pc={(flags==0)?L283:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 10
;;   new head = 31
;;   new tail = 45

deleting insn with uid = 98.
deleting insn with uid = 122.
deleting insn with uid = 156.
deleting insn with uid = 160.
;;   ======================================================
;;   -- basic block 4 from 60 to 164 -- after reload
;;   ======================================================

;;	  0-->    60 cx=`maxval'                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    61 dx=`rows'                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    62 si=`cols'                         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    63 di=ax                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->    64 call <...>                        :c2_decoder0
;;	  2-->    68 cx=[`cols']                       :c2_decodern,c2_p2
;;	  2-->    70 si=`*.LC10'                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->    69 dx=[`rows']                       :c2_decodern,c2_p2
;;	  3-->    66 [`image']=ax                      :c2_decodern,(c2_p4+c2_p3)
;;	  3-->    67: debug __fmt => `*.LC10'          :nothing
;;	  3-->    71 di=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   277 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->    73 call <...>                        :c2_decoder0
;;	  7-->    76 dx=[`rows']                       :c2_decodern,c2_p2
;;	  7-->    75 cx=`newCols'                      :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->    77 si=[`cols']                       :c2_decodern,c2_p2
;;	  8-->    74 r8=`newRows'                      :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  9-->    78 di=[`image']                      :c2_decodern,c2_p2
;;	 13-->    79 call <...>                        :c2_decoder0
;;	 14-->    80 r12=ax                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->    81: debug extendedImage => r12       :nothing
;;	 14-->    82 ax=[`image']                      :c2_decodern,c2_p2
;;	 18-->    83 di=[ax]                           :c2_decodern,c2_p2
;;	 22-->    84 call <...>                        :c2_decoder0
;;	 22-->    85 di=[`image']                      :c2_decodern,c2_p2
;;	 26-->    86 call <...>                        :c2_decoder0
;;	 26-->    88 si=0x7                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 26-->    89 di=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 27-->    87 xmm0=[`*.LC11']                   :c2_decodern,c2_p2
;;	 29-->    90 call <...>                        :c2_decoder0
;;	 30-->    91 r13=ax                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 30-->    92: debug gaussRow => r13            :nothing
;;	 31-->    93 {ax=asm_operands;dx=asm_operands;c:nothing
;;	 32-->    96: debug hi => dx                   :nothing
;;	 32-->    97: debug lo => ax                   :nothing
;;	 32-->   246 bx=dx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 32-->   100 ax=zxn(ax)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 32-->   104 si=`*.LC12'                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 33-->    99 {bx=bx<<0x20;clobber flags;}      :c2_decodern,c2_p0|c2_p5
;;	 33-->   105 di=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 34-->   101 {bx=bx|ax;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 34-->   102: debug start optimized away       :nothing
;;	 34-->   103: debug __fmt => `*.LC12'          :nothing
;;	 34-->   278 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 35-->   107 call <...>                        :c2_decoder0
;;	 35-->   124 cx=[`rows']                       :c2_decodern,c2_p2
;;	 35-->   126 si=bp-0x40                        :c2_decodern,c2_p0
;;	 36-->   125 dx=[`cols']                       :c2_decodern,c2_p2
;;	 36-->   123 r8=0x7                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 36-->   127 di=r12                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 37-->   109 [bp-0x40]=1.0628999769687652587890:c2_decodern,(c2_p4+c2_p3)
;;	 38-->   111 [bp-0x3c]=1.4032000303268432617187:c2_decodern,(c2_p4+c2_p3)
;;	 39-->   113 [bp-0x38]=1.6576999425888061523437:c2_decodern,(c2_p4+c2_p3)
;;	 40-->   115 [bp-0x34]=1.7523999512195587158203:c2_decodern,(c2_p4+c2_p3)
;;	 41-->   117 [bp-0x30]=1.6576999425888061523437:c2_decodern,(c2_p4+c2_p3)
;;	 42-->   119 [bp-0x2c]=1.4032000303268432617187:c2_decodern,(c2_p4+c2_p3)
;;	 43-->   121 [bp-0x28]=1.0628999769687652587890:c2_decodern,(c2_p4+c2_p3)
;;	 44-->   128 call <...>                        :c2_decoder0
;;	 44-->   129 dx=[`newRows']                    :c2_decodern,c2_p2
;;	 44-->   131 di=r12                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 45-->   130 si=[`newCols']                    :c2_decodern,c2_p2
;;	 49-->   132 call <...>                        :c2_decoder0
;;	 49-->   135 di=[r12]                          :c2_decodern,c2_p2
;;	 50-->   133 r14=ax                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 50-->   134: debug transposed => r14          :nothing
;;	 53-->   136 call <...>                        :c2_decoder0
;;	 53-->   137 di=r12                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 54-->   138 call <...>                        :c2_decoder0
;;	 54-->   140 cx=[`cols']                       :c2_decodern,c2_p2
;;	 54-->   143 di=r14                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 55-->   142 si=[r13]                          :c2_decodern,c2_p2
;;	 55-->   139 r8=0x7                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 56-->   141 dx=[`rows']                       :c2_decodern,c2_p2
;;	 60-->   144 call <...>                        :c2_decoder0
;;	 60-->   145 dx=[`newCols']                    :c2_decodern,c2_p2
;;	 60-->   147 di=r14                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 61-->   146 si=[`newRows']                    :c2_decodern,c2_p2
;;	 65-->   148 call <...>                        :c2_decoder0
;;	 66-->   149 r12=ax                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 66-->   150: debug extendedImage => r12       :nothing
;;	 67-->   151 {ax=asm_operands;dx=asm_operands;c:nothing
;;	 68-->   154: debug hi => dx                   :nothing
;;	 68-->   155: debug lo => ax                   :nothing
;;	 68-->   157 {dx=dx<<0x20;clobber flags;}      :c2_decodern,c2_p0|c2_p5
;;	 68-->   158 ax=zxn(ax)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 69-->   159 {dx=dx|ax;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 69-->   161: debug cycles => dx-bx            :nothing
;;	 69-->   162: debug __fmt => `*.LC18'          :nothing
;;	 70-->   247 ax=dx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 71-->   163 {flags=cmp(ax-bx,0);ax=ax-bx;}    :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 72-->   164 pc={(flags<0)?L168:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 72
;;   new head = 60
;;   new tail = 164

;;   ======================================================
;;   -- basic block 5 from 165 to 165 -- after reload
;;   ======================================================

;;	  0-->   165 xmm0=flt(ax)                      :c2_decodern,c2_p1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 165
;;   new tail = 165

deleting insn with uid = 176.
;;   ======================================================
;;   -- basic block 6 from 250 to 200 -- after reload
;;   ======================================================

;;	  0-->   178 cx=[`rows']                       :c2_decodern,c2_p2
;;	  0-->   276 {dx=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   184 si=`*.LC18'                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   185 di=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   250 xmm0=vec_select                   :nothing
;;	  1-->   251 xmm0=fxn(vec_select)              :nothing
;;	  2-->   177 xmm0=xmm0/[`*.LC17']              :nothing
;;	  4-->   179 {cx=cx*[`cols'];clobber flags;}   :c2_decoder0,(c2_p2+c2_p1)
;;	  7-->   180 cx=sxn(cx)                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->   253 {ax=udiv(ax,cx);dx=umod(ax,cx);use:nothing
;;	  8-->   183 dx=ax                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  8-->   186 ax=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  9-->   187 call <...>                        :c2_decoder0
;;	  9-->   188 dx=[`newRows']                    :c2_decodern,c2_p2
;;	  9-->   190 di=r12                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 10-->   189 si=[`newCols']                    :c2_decodern,c2_p2
;;	 14-->   191 call <...>                        :c2_decoder0
;;	 14-->   194 si=`*.LC19'                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->   195 di=`*.LC20'                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 15-->   192 bx=ax                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 15-->   193: debug uintImage => bx            :nothing
;;	 16-->   196 call <...>                        :c2_decoder0
;;	 16-->   198: debug fpOut => ax                :nothing
;;	 17-->   199 flags=cmp(ax,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 18-->   200 pc={(flags==0)?L209:pc}           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 18
;;   new head = 250
;;   new tail = 200

;;   ======================================================
;;   -- basic block 7 from 275 to 208 -- after reload
;;   ======================================================

;;	  0-->   203 r8=[`maxval']                     :c2_decodern,c2_p2
;;	  0-->   275 {r9=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   206 si=bx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   204 cx=[`newRows']                    :c2_decodern,c2_p2
;;	  1-->   207 di=ax                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   205 dx=[`newCols']                    :c2_decodern,c2_p2
;;	  6-->   208 call <...>                        :c2_decoder0
;;	Ready list (final):  
;;   total time = 6
;;   new head = 275
;;   new tail = 208

;;   ======================================================
;;   -- basic block 8 from 211 to 274 -- after reload
;;   ======================================================

;;	  0-->   211 di=[r12]                          :c2_decodern,c2_p2
;;	  4-->   212 call <...>                        :c2_decoder0
;;	  4-->   213 di=r12                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   214 call <...>                        :c2_decoder0
;;	  5-->   215 di=[bx]                           :c2_decodern,c2_p2
;;	  9-->   216 call <...>                        :c2_decoder0
;;	  9-->   217 di=bx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 10-->   218 call <...>                        :c2_decoder0
;;	 10-->   219: debug __fmt => `*.LC21'          :nothing
;;	 10-->   220 si=`*.LC21'                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 10-->   221 di=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 11-->   273 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 12-->   223 call <...>                        :c2_decoder0
;;	 12-->   274 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	Ready list (final):  
;;   total time = 12
;;   new head = 211
;;   new tail = 274

deleting insn with uid = 264.
;;   ======================================================
;;   -- basic block 9 from 233 to 271 -- after reload
;;   ======================================================

;;	  0-->   265 {sp=sp+0x30;clobber flags;clobber :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   233 use ax                            :nothing
;;	  1-->   266 bx=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  5-->   267 r12=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  9-->   268 r13=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 13-->   269 r14=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 17-->   270 bp=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 18-->   271 return                            :c2_decoder0
;;	Ready list (final):  
;;   total time = 18
;;   new head = 233
;;   new tail = 271

;;   ======================================================
;;   -- basic block 10 from 17 to 284 -- after reload
;;   ======================================================

;;	  0-->    17 di=[bx]                           :c2_decodern,c2_p2
;;	  4-->    18 call <...>                        :c2_decoder0
;;	  4-->    20: debug prog => ax                 :nothing
;;	  4-->    21: debug __fmt => `*.LC6'           :nothing
;;	  4-->    23 si=`*.LC6'                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    24 di=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->    22 dx=ax                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   280 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    26 call <...>                        :c2_decoder0
;;	  6-->   281 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->   284 pc=L224                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 6
;;   new head = 17
;;   new tail = 284

;;   ======================================================
;;   -- basic block 11 from 248 to 286 -- after reload
;;   ======================================================

;;	  0-->   248 dx=ax                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->   249 cx=ax                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   169 {dx=dx 0>>0x1;clobber flags;}     :c2_decodern,c2_p0|c2_p5
;;	  1-->   170 {cx=cx&0x1;clobber flags;}        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->   171 {dx=dx|cx;clobber flags;}         :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->   172 xmm0=flt(dx)                      :c2_decodern,c2_p1
;;	  7-->   173 xmm0=xmm0+xmm0                    :c2_decodern,c2_p1
;;	  7-->   286 pc=L174                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 7
;;   new head = 248
;;   new tail = 286

;;   ======================================================
;;   -- basic block 12 from 47 to 288 -- after reload
;;   ======================================================

;;	  0-->    47: debug __stream => [`stderr']     :nothing
;;	  0-->    48: debug __fmt => `*.LC9'           :nothing
;;	  0-->    49 cx=[bx+0x8]                       :c2_decodern,c2_p2
;;	  0-->    51 dx=`*.LC9'                        :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    52 si=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    53 di=[`stderr']                     :c2_decodern,c2_p2
;;	  5-->    55 call <...>                        :c2_decoder0
;;	  5-->     6 ax=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->   288 pc=L224                           :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 5
;;   new head = 47
;;   new tail = 288





main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 18[fpsr] 21[xmm0] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14]
;;  ref usage 	r0={46d,38u} r1={51d,24u} r2={41d,13u} r3={7d,15u,2e} r4={47d,20u} r5={57d,29u} r6={3d,25u,2e} r7={13d,55u} r8={28d} r9={28d} r10={28d} r11={28d} r12={28d} r13={28d} r14={28d} r15={28d} r17={54d,4u} r18={30d} r19={28d} r20={1d,1u} r21={36d,8u} r22={29d} r23={29d} r24={29d} r25={29d} r26={29d} r27={29d} r28={29d} r29={28d} r30={28d} r31={28d} r32={28d} r33={28d} r34={28d} r35={28d} r36={28d} r37={33d,4u} r38={30d,1u} r39={28d} r40={28d} r41={4d,11u} r42={3d,4u} r43={3d,5u} r45={28d} r46={28d} r47={28d} r48={28d} r49={28d} r50={28d} r51={28d} r52={28d} 
;;    total ref usage 1679{1418d,257u,4e} in 201{173 regular + 28 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 8 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 4 254 2 NOTE_INSN_DELETED)

(insn/f:TI 254 10 255 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg/f:DI 6 bp)) ../src/izp-gaussian.c:74 42 {*pushdi2_rex64}
     (nil))

(insn/f:TI 255 254 256 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) ../src/izp-gaussian.c:74 62 {*movdi_internal_rex64}
     (nil))

(insn/f 256 255 261 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 43 r14)) ../src/izp-gaussian.c:74 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn 261 256 257 2 (use (reg/f:DI 6 bp)) ../src/izp-gaussian.c:74 -1
     (nil))

(insn/f:TI 257 261 258 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 42 r13)) ../src/izp-gaussian.c:74 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f:TI 258 257 259 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) ../src/izp-gaussian.c:74 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f:TI 259 258 260 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) ../src/izp-gaussian.c:74 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f:TI 260 259 262 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) ../src/izp-gaussian.c:74 911 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 262 260 263 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 263 262 2 2 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) ../src/izp-gaussian.c:74 631 {blockage}
     (nil))

(insn:TI 2 263 12 2 (set (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [5 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) ../src/izp-gaussian.c:74 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ argc ])
        (nil)))

(insn 12 2 3 2 (set (reg:DI 5 di)
        (plus:DI (reg/f:DI 6 bp)
            (const_int -68 [0xffffffffffffffbc]))) ../src/izp-gaussian.c:76 249 {*lea_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 6 bp)
            (const_int -68 [0xffffffffffffffbc]))
        (nil)))

(insn 3 12 13 2 (set (reg/v/f:DI 3 bx [orig:124 argv ] [124])
        (reg:DI 4 si [ argv ])) ../src/izp-gaussian.c:74 62 {*movdi_internal_rex64}
     (nil))

(call_insn:TI 13 3 14 2 (call (mem:QI (symbol_ref:DI ("pgm_init") [flags 0x41]  <function_decl 0x2ae34578a600 pgm_init>) [0 S1 A8])
        (const_int 0 [0])) ../src/izp-gaussian.c:76 618 {*call_0}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 14 13 15 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [5 argc+0 S4 A32])
            (const_int 1 [0x1]))) ../src/izp-gaussian.c:78 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 15 14 29 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 282)
            (pc))) ../src/izp-gaussian.c:78 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1912 [0x778])
            (nil)))
 -> 282)
;; End of basic block 2 -> ( 10 3)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]


;; Succ edge  10 [19.1%]  (can_fallthru)
;; Succ edge  3 [80.9%]  (fallthru,can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  2 [80.9%]  (fallthru,can_fallthru)
(code_label 29 15 30 3 136 "" [0 uses])

(note 30 29 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(debug_insn 31 30 32 3 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2ae345d4ca00 *.LC7>)) ../src/izp-gaussian.c:86 -1
     (nil))

(insn:TI 32 31 34 3 (set (reg/f:DI 1 dx [orig:126 MEM[(char * *)argv_2(D) + 8B] ] [126])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:124 argv ] [124])
                (const_int 8 [0x8])) [2 MEM[(char * *)argv_2(D) + 8B]+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:124 argv ] [124])
                (const_int 8 [0x8])) [2 MEM[(char * *)argv_2(D) + 8B]+0 S8 A64])
        (nil)))

(insn 34 32 35 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2ae345d4ca00 *.LC7>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (nil))

(insn 35 34 279 3 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 64 {*movsi_internal}
     (nil))

(insn:TI 279 35 37 3 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 37 279 38 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2ae34567a400 __printf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(insn 38 37 39 3 (set (reg/f:DI 5 di [orig:127 MEM[(char * *)argv_2(D) + 8B] ] [127])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:124 argv ] [124])
                (const_int 8 [0x8])) [2 MEM[(char * *)argv_2(D) + 8B]+0 S8 A64])) ../src/izp-gaussian.c:87 62 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:124 argv ] [124])
                (const_int 8 [0x8])) [2 MEM[(char * *)argv_2(D) + 8B]+0 S8 A64])
        (nil)))

(insn 39 38 41 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2ae345d4caa0 *.LC8>)) ../src/izp-gaussian.c:87 62 {*movdi_internal_rex64}
     (nil))

(call_insn:TI 41 39 43 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2ae345655b00 fopen>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:87 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(debug_insn 43 41 44 3 (var_location:DI fp (reg/v/f:DI 0 ax [orig:66 fp ] [66])) ../src/izp-gaussian.c:87 -1
     (nil))

(insn:TI 44 43 45 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:66 fp ] [66])
            (const_int 0 [0]))) ../src/izp-gaussian.c:89 3 {*cmpdi_ccno_1}
     (nil))

(jump_insn:TI 45 44 58 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 283)
            (pc))) ../src/izp-gaussian.c:89 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil)))
 -> 283)
;; End of basic block 3 -> ( 12 4)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]


;; Succ edge  12 [10.1%]  (can_fallthru)
;; Succ edge  4 [89.9%]  (fallthru,can_fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags] 18 [fpsr]

;; Pred edge  3 [89.9%]  (fallthru,can_fallthru)
(code_label 58 45 59 4 138 "" [0 uses])

(note 59 58 98 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 98 59 122 4 NOTE_INSN_DELETED)

(note 122 98 156 4 NOTE_INSN_DELETED)

(note 156 122 160 4 NOTE_INSN_DELETED)

(note 160 156 60 4 NOTE_INSN_DELETED)

(insn:TI 60 160 61 4 (set (reg:DI 2 cx)
        (symbol_ref:DI ("maxval")  <var_decl 0x2ae3457e0d20 maxval>)) ../src/izp-gaussian.c:95 62 {*movdi_internal_rex64}
     (nil))

(insn 61 60 62 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("rows")  <var_decl 0x2ae3457e0b40 rows>)) ../src/izp-gaussian.c:95 62 {*movdi_internal_rex64}
     (nil))

(insn 62 61 63 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("cols")  <var_decl 0x2ae3457e0aa0 cols>)) ../src/izp-gaussian.c:95 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 63 62 64 4 (set (reg:DI 5 di)
        (reg/v/f:DI 0 ax [orig:66 fp ] [66])) ../src/izp-gaussian.c:95 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:66 fp ] [66])
        (nil)))

(call_insn:TI 64 63 68 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pgm_readpgm") [flags 0x41]  <function_decl 0x2ae34578a800 pgm_readpgm>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:95 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 68 64 70 4 (set (reg:SI 2 cx)
        (mem/c/i:SI (symbol_ref:DI ("cols")  <var_decl 0x2ae3457e0aa0 cols>) [5 cols+0 S4 A32])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 64 {*movsi_internal}
     (nil))

(insn 70 68 69 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2ae345d4cbe0 *.LC10>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 69 70 66 4 (set (reg:SI 1 dx)
        (mem/c/i:SI (symbol_ref:DI ("rows")  <var_decl 0x2ae3457e0b40 rows>) [5 rows+0 S4 A32])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 64 {*movsi_internal}
     (nil))

(insn 66 69 67 4 (set (mem/f/c/i:DI (symbol_ref:DI ("image") [flags 0x2]  <var_decl 0x2ae3457e0dc0 image>) [2 image+0 S8 A64])
        (reg/f:DI 0 ax [orig:70 image.5 ] [70])) ../src/izp-gaussian.c:95 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 image.5 ] [70])
        (nil)))

(debug_insn 67 66 71 4 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2ae345d4cbe0 *.LC10>)) ../src/izp-gaussian.c:96 -1
     (nil))

(insn 71 67 277 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 64 {*movsi_internal}
     (nil))

(insn:TI 277 71 73 4 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 73 277 76 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2ae34567a400 __printf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn 76 73 75 4 (set (reg:SI 1 dx)
        (mem/c/i:SI (symbol_ref:DI ("rows")  <var_decl 0x2ae3457e0b40 rows>) [5 rows+0 S4 A32])) ../src/izp-gaussian.c:99 64 {*movsi_internal}
     (nil))

(insn 75 76 77 4 (set (reg:DI 2 cx)
        (symbol_ref:DI ("newCols")  <var_decl 0x2ae3457e0be0 newCols>)) ../src/izp-gaussian.c:99 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 77 75 74 4 (set (reg:SI 4 si)
        (mem/c/i:SI (symbol_ref:DI ("cols")  <var_decl 0x2ae3457e0aa0 cols>) [5 cols+0 S4 A32])) ../src/izp-gaussian.c:99 64 {*movsi_internal}
     (nil))

(insn 74 77 78 4 (set (reg:DI 37 r8)
        (symbol_ref:DI ("newRows")  <var_decl 0x2ae3457e0c80 newRows>)) ../src/izp-gaussian.c:99 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 78 74 79 4 (set (reg:DI 5 di)
        (mem/f/c/i:DI (symbol_ref:DI ("image") [flags 0x2]  <var_decl 0x2ae3457e0dc0 image>) [2 image+0 S8 A64])) ../src/izp-gaussian.c:99 62 {*movdi_internal_rex64}
     (nil))

(call_insn:TI 79 78 80 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("izp_extendImage") [flags 0x3]  <function_decl 0x2ae345854900 izp_extendImage>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:99 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 37 r8))
                        (nil)))))))

(insn:TI 80 79 81 4 (set (reg/v/f:DI 41 r12 [orig:76 extendedImage ] [76])
        (reg:DI 0 ax)) ../src/izp-gaussian.c:99 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(debug_insn 81 80 82 4 (var_location:DI extendedImage (reg/v/f:DI 41 r12 [orig:76 extendedImage ] [76])) ../src/izp-gaussian.c:99 -1
     (nil))

(insn 82 81 83 4 (set (reg/f:DI 0 ax [orig:129 image ] [129])
        (mem/f/c/i:DI (symbol_ref:DI ("image") [flags 0x2]  <var_decl 0x2ae3457e0dc0 image>) [2 image+0 S8 A64])) ../src/izp-gaussian.c:103 62 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/c/i:DI (symbol_ref:DI ("image") [flags 0x2]  <var_decl 0x2ae3457e0dc0 image>) [2 image+0 S8 A64])
        (nil)))

(insn:TI 83 82 84 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 0 ax [orig:129 image ] [129]) [2 *image.8_30+0 S8 A64])) ../src/izp-gaussian.c:103 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:129 image ] [129])
        (nil)))

(call_insn:TI 84 83 85 4 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae34558b000 free>) [0 S1 A8])
        (const_int 0 [0])) ../src/izp-gaussian.c:103 618 {*call_0}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 85 84 86 4 (set (reg:DI 5 di)
        (mem/f/c/i:DI (symbol_ref:DI ("image") [flags 0x2]  <var_decl 0x2ae3457e0dc0 image>) [2 image+0 S8 A64])) ../src/izp-gaussian.c:104 62 {*movdi_internal_rex64}
     (nil))

(call_insn:TI 86 85 88 4 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae34558b000 free>) [0 S1 A8])
        (const_int 0 [0])) ../src/izp-gaussian.c:104 618 {*call_0}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 88 86 89 4 (set (reg:SI 4 si)
        (const_int 7 [0x7])) ../src/izp-gaussian.c:109 64 {*movsi_internal}
     (nil))

(insn 89 88 87 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ../src/izp-gaussian.c:109 64 {*movsi_internal}
     (nil))

(insn:TI 87 89 90 4 (set (reg:SF 21 xmm0)
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [3 S4 A32])) ../src/izp-gaussian.c:109 110 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))

(call_insn:TI 90 87 91 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("izp_gaussianMatrix") [flags 0x3]  <function_decl 0x2ae345854d00 izp_gaussianMatrix>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:109 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SF 21 xmm0))
                (nil)))))

(insn:TI 91 90 92 4 (set (reg/v/f:DI 42 r13 [orig:80 gaussRow ] [80])
        (reg:DI 0 ax)) ../src/izp-gaussian.c:109 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(debug_insn 92 91 93 4 (var_location:DI gaussRow (reg/v/f:DI 42 r13 [orig:80 gaussRow ] [80])) ../src/izp-gaussian.c:109 -1
     (nil))

(insn:TI 93 92 96 4 (parallel [
            (set (reg:SI 0 ax [orig:130 lo ] [130])
                (asm_operands/v:SI ("rdtsc") ("=a") 0 []
                     []
                     [] ../src/izp-gaussian.c:184))
            (set (reg:SI 1 dx [orig:131 hi ] [131])
                (asm_operands/v:SI ("rdtsc") ("=d") 1 []
                     []
                     [] ../src/izp-gaussian.c:184))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) ../src/izp-gaussian.c:637 -1
     (expr_list:REG_UNUSED (reg:QI 18 fpsr)
        (expr_list:REG_UNUSED (reg:QI 17 flags)
            (nil))))

(debug_insn 96 93 97 4 (var_location:SI hi (reg:SI 1 dx [orig:131 hi ] [131])) ../src/izp-gaussian.c:637 -1
     (nil))

(debug_insn 97 96 246 4 (var_location:SI lo (reg:SI 0 ax [orig:130 lo ] [130])) ../src/izp-gaussian.c:637 -1
     (nil))

(insn:TI 246 97 100 4 (set (reg/v:DI 3 bx [orig:116 start ] [116])
        (reg:DI 1 dx)) ../src/izp-gaussian.c:638 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx)
        (nil)))

(insn 100 246 104 4 (set (reg:DI 0 ax [orig:134 lo ] [134])
        (zero_extend:DI (reg:SI 0 ax [orig:130 lo ] [130]))) ../src/izp-gaussian.c:638 114 {*zero_extendsidi2_rex64}
     (nil))

(insn 104 100 99 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2ae345d4cdc0 *.LC12>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 99 104 105 4 (parallel [
            (set (reg/v:DI 3 bx [orig:116 start ] [116])
                (ashift:DI (reg/v:DI 3 bx [orig:116 start ] [116])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:638 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 105 99 101 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 64 {*movsi_internal}
     (nil))

(insn:TI 101 105 102 4 (parallel [
            (set (reg/v:DI 3 bx [orig:116 start ] [116])
                (ior:DI (reg/v:DI 3 bx [orig:116 start ] [116])
                    (reg:DI 0 ax [orig:134 lo ] [134])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:638 401 {*iordi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:134 lo ] [134])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(debug_insn 102 101 103 4 (var_location:DI start (clobber (const_int 0 [0]))) ../src/izp-gaussian.c:113 -1
     (nil))

(debug_insn 103 102 278 4 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2ae345d4cdc0 *.LC12>)) ../src/izp-gaussian.c:144 -1
     (nil))

(insn 278 103 107 4 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 107 278 124 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2ae34567a400 __printf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (nil)))))

(insn 124 107 126 4 (set (reg:SI 2 cx)
        (mem/c/i:SI (symbol_ref:DI ("rows")  <var_decl 0x2ae3457e0b40 rows>) [5 rows+0 S4 A32])) ../src/izp-gaussian.c:148 64 {*movsi_internal}
     (nil))

(insn 126 124 125 4 (set (reg:DI 4 si)
        (plus:DI (reg/f:DI 6 bp)
            (const_int -64 [0xffffffffffffffc0]))) ../src/izp-gaussian.c:148 249 {*lea_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 6 bp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))

(insn:TI 125 126 123 4 (set (reg:SI 1 dx)
        (mem/c/i:SI (symbol_ref:DI ("cols")  <var_decl 0x2ae3457e0aa0 cols>) [5 cols+0 S4 A32])) ../src/izp-gaussian.c:148 64 {*movsi_internal}
     (nil))

(insn 123 125 127 4 (set (reg:SI 37 r8)
        (const_int 7 [0x7])) ../src/izp-gaussian.c:148 64 {*movsi_internal}
     (nil))

(insn 127 123 109 4 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:76 extendedImage ] [76])) ../src/izp-gaussian.c:148 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 109 127 111 4 (set (mem/s/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [3 row+0 S4 A64])
        (const_double:SF 1.0628999769687652587890625e-1 [0x0.d9ae92p-3])) ../src/izp-gaussian.c:146 110 {*movsf_internal}
     (nil))

(insn:TI 111 109 113 4 (set (mem/s/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [3 row+4 S4 A32])
        (const_double:SF 1.40320003032684326171875e-1 [0x0.8fb00cp-2])) ../src/izp-gaussian.c:146 110 {*movsf_internal}
     (nil))

(insn:TI 113 111 115 4 (set (mem/s/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 row+8 S4 A64])
        (const_double:SF 1.65769994258880615234375e-1 [0x0.a9bf9cp-2])) ../src/izp-gaussian.c:146 110 {*movsf_internal}
     (nil))

(insn:TI 115 113 117 4 (set (mem/s/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [3 row+12 S4 A32])
        (const_double:SF 1.7523999512195587158203125e-1 [0x0.b3721dp-2])) ../src/izp-gaussian.c:146 110 {*movsf_internal}
     (nil))

(insn:TI 117 115 119 4 (set (mem/s/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 row+16 S4 A64])
        (const_double:SF 1.65769994258880615234375e-1 [0x0.a9bf9cp-2])) ../src/izp-gaussian.c:146 110 {*movsf_internal}
     (nil))

(insn:TI 119 117 121 4 (set (mem/s/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [3 row+20 S4 A32])
        (const_double:SF 1.40320003032684326171875e-1 [0x0.8fb00cp-2])) ../src/izp-gaussian.c:146 110 {*movsf_internal}
     (nil))

(insn:TI 121 119 128 4 (set (mem/s/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [3 row+24 S4 A64])
        (const_double:SF 1.0628999769687652587890625e-1 [0x0.d9ae92p-3])) ../src/izp-gaussian.c:146 110 {*movsf_internal}
     (nil))

(call_insn:TI 128 121 129 4 (call (mem:QI (symbol_ref:DI ("izp_convolve1D") [flags 0x3]  <function_decl 0x2ae345854b00 izp_convolve1D>) [0 S1 A8])
        (const_int 0 [0])) ../src/izp-gaussian.c:148 618 {*call_0}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 37 r8))
                        (nil)))))))

(insn 129 128 131 4 (set (reg:SI 1 dx)
        (mem/c/i:SI (symbol_ref:DI ("newRows")  <var_decl 0x2ae3457e0c80 newRows>) [5 newRows+0 S4 A32])) ../src/izp-gaussian.c:150 64 {*movsi_internal}
     (nil))

(insn 131 129 130 4 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:76 extendedImage ] [76])) ../src/izp-gaussian.c:150 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 130 131 132 4 (set (reg:SI 4 si)
        (mem/c/i:SI (symbol_ref:DI ("newCols")  <var_decl 0x2ae3457e0be0 newCols>) [5 newCols+0 S4 A32])) ../src/izp-gaussian.c:150 64 {*movsi_internal}
     (nil))

(call_insn:TI 132 130 135 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("izp_transpose") [flags 0x3]  <function_decl 0x2ae345854e00 izp_transpose>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:150 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (nil)))))

(insn 135 132 133 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 41 r12 [orig:76 extendedImage ] [76]) [2 *extendedImage_29+0 S8 A64])) ../src/izp-gaussian.c:152 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 133 135 134 4 (set (reg/v/f:DI 43 r14 [orig:85 transposed ] [85])
        (reg:DI 0 ax)) ../src/izp-gaussian.c:150 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(debug_insn 134 133 136 4 (var_location:DI transposed (reg/v/f:DI 43 r14 [orig:85 transposed ] [85])) ../src/izp-gaussian.c:150 -1
     (nil))

(call_insn:TI 136 134 137 4 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae34558b000 free>) [0 S1 A8])
        (const_int 0 [0])) ../src/izp-gaussian.c:152 618 {*call_0}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 137 136 138 4 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:76 extendedImage ] [76])) ../src/izp-gaussian.c:153 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:76 extendedImage ] [76])
        (nil)))

(call_insn:TI 138 137 140 4 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae34558b000 free>) [0 S1 A8])
        (const_int 0 [0])) ../src/izp-gaussian.c:153 618 {*call_0}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 140 138 143 4 (set (reg:SI 2 cx)
        (mem/c/i:SI (symbol_ref:DI ("cols")  <var_decl 0x2ae3457e0aa0 cols>) [5 cols+0 S4 A32])) ../src/izp-gaussian.c:155 64 {*movsi_internal}
     (nil))

(insn 143 140 142 4 (set (reg:DI 5 di)
        (reg/v/f:DI 43 r14 [orig:85 transposed ] [85])) ../src/izp-gaussian.c:155 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 142 143 139 4 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 42 r13 [orig:80 gaussRow ] [80]) [2 *gaussRow_33+0 S8 A64])) ../src/izp-gaussian.c:155 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:80 gaussRow ] [80])
        (nil)))

(insn 139 142 141 4 (set (reg:SI 37 r8)
        (const_int 7 [0x7])) ../src/izp-gaussian.c:155 64 {*movsi_internal}
     (nil))

(insn:TI 141 139 144 4 (set (reg:SI 1 dx)
        (mem/c/i:SI (symbol_ref:DI ("rows")  <var_decl 0x2ae3457e0b40 rows>) [5 rows+0 S4 A32])) ../src/izp-gaussian.c:155 64 {*movsi_internal}
     (nil))

(call_insn:TI 144 141 145 4 (call (mem:QI (symbol_ref:DI ("izp_convolve1D") [flags 0x3]  <function_decl 0x2ae345854b00 izp_convolve1D>) [0 S1 A8])
        (const_int 0 [0])) ../src/izp-gaussian.c:155 618 {*call_0}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 37 r8))
                        (nil)))))))

(insn 145 144 147 4 (set (reg:SI 1 dx)
        (mem/c/i:SI (symbol_ref:DI ("newCols")  <var_decl 0x2ae3457e0be0 newCols>) [5 newCols+0 S4 A32])) ../src/izp-gaussian.c:156 64 {*movsi_internal}
     (nil))

(insn 147 145 146 4 (set (reg:DI 5 di)
        (reg/v/f:DI 43 r14 [orig:85 transposed ] [85])) ../src/izp-gaussian.c:156 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:85 transposed ] [85])
        (nil)))

(insn:TI 146 147 148 4 (set (reg:SI 4 si)
        (mem/c/i:SI (symbol_ref:DI ("newRows")  <var_decl 0x2ae3457e0c80 newRows>) [5 newRows+0 S4 A32])) ../src/izp-gaussian.c:156 64 {*movsi_internal}
     (nil))

(call_insn:TI 148 146 149 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("izp_transpose") [flags 0x3]  <function_decl 0x2ae345854e00 izp_transpose>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:156 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (nil)))))

(insn:TI 149 148 150 4 (set (reg/v/f:DI 41 r12 [orig:92 extendedImage ] [92])
        (reg:DI 0 ax)) ../src/izp-gaussian.c:156 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(debug_insn 150 149 151 4 (var_location:DI extendedImage (reg/v/f:DI 41 r12 [orig:92 extendedImage ] [92])) ../src/izp-gaussian.c:156 -1
     (nil))

(insn:TI 151 150 154 4 (parallel [
            (set (reg:SI 0 ax [orig:143 lo ] [143])
                (asm_operands/v:SI ("rdtsc") ("=a") 0 []
                     []
                     [] ../src/izp-gaussian.c:184))
            (set (reg:SI 1 dx [orig:144 hi ] [144])
                (asm_operands/v:SI ("rdtsc") ("=d") 1 []
                     []
                     [] ../src/izp-gaussian.c:184))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) ../src/izp-gaussian.c:637 -1
     (expr_list:REG_UNUSED (reg:QI 18 fpsr)
        (expr_list:REG_UNUSED (reg:QI 17 flags)
            (nil))))

(debug_insn 154 151 155 4 (var_location:SI hi (reg:SI 1 dx [orig:144 hi ] [144])) ../src/izp-gaussian.c:637 -1
     (nil))

(debug_insn 155 154 157 4 (var_location:SI lo (reg:SI 0 ax [orig:143 lo ] [143])) ../src/izp-gaussian.c:637 -1
     (nil))

(insn:TI 157 155 158 4 (parallel [
            (set (reg:DI 1 dx [148])
                (ashift:DI (reg:DI 1 dx [orig:144 hi ] [144])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:638 498 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 158 157 159 4 (set (reg:DI 0 ax [orig:147 lo ] [147])
        (zero_extend:DI (reg:SI 0 ax [orig:143 lo ] [143]))) ../src/izp-gaussian.c:638 114 {*zero_extendsidi2_rex64}
     (nil))

(insn:TI 159 158 161 4 (parallel [
            (set (reg:DI 1 dx [148])
                (ior:DI (reg:DI 1 dx [148])
                    (reg:DI 0 ax [orig:147 lo ] [147])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:638 401 {*iordi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:147 lo ] [147])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(debug_insn 161 159 162 4 (var_location:DI cycles (minus:DI (reg:DI 1 dx [148])
        (reg/v:DI 3 bx [orig:116 start ] [116]))) ../src/izp-gaussian.c:162 -1
     (nil))

(debug_insn 162 161 247 4 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2ae345da3000 *.LC18>)) ../src/izp-gaussian.c:163 -1
     (nil))

(insn:TI 247 162 163 4 (set (reg/v:DI 0 ax [orig:93 cycles ] [93])
        (reg:DI 1 dx [148])) ../src/izp-gaussian.c:164 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [148])
        (nil)))

(insn:TI 163 247 164 4 (parallel [
            (set (reg:CCGOC 17 flags)
                (compare:CCGOC (minus:DI (reg/v:DI 0 ax [orig:93 cycles ] [93])
                        (reg/v:DI 3 bx [orig:116 start ] [116]))
                    (const_int 0 [0])))
            (set (reg/v:DI 0 ax [orig:93 cycles ] [93])
                (minus:DI (reg/v:DI 0 ax [orig:93 cycles ] [93])
                    (reg/v:DI 3 bx [orig:116 start ] [116])))
        ]) ../src/izp-gaussian.c:164 298 {*subdi_2}
     (expr_list:REG_DEAD (reg/v:DI 3 bx [orig:116 start ] [116])
        (nil)))

(jump_insn:TI 164 163 235 4 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) ../src/izp-gaussian.c:164 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil)))
 -> 168)
;; End of basic block 4 -> ( 11 5)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]


;; Succ edge  11 [21.0%]  (can_fallthru)
;; Succ edge  5 [79.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 21 [xmm0]
;; live  kill	

;; Pred edge  4 [79.0%]  (fallthru,can_fallthru)
(note 235 164 165 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 165 235 174 5 (set (reg:SF 21 xmm0 [149])
        (float:SF (reg/v:DI 0 ax [orig:93 cycles ] [93]))) ../src/izp-gaussian.c:164 219 {*floatdisf2_sse_interunit}
     (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]


;; Succ edge  6 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5 11) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 21 [xmm0] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]

;; Pred edge  5 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  11 [100.0%]  (can_fallthru)
(code_label 174 165 237 6 140 "" [1 uses])

(note 237 174 176 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 176 237 178 6 NOTE_INSN_DELETED)

(insn:TI 178 176 276 6 (set (reg:SI 2 cx [156])
        (mem/c/i:SI (symbol_ref:DI ("rows")  <var_decl 0x2ae3457e0b40 rows>) [5 rows+0 S4 A32])) ../src/izp-gaussian.c:163 64 {*movsi_internal}
     (nil))

(insn 276 178 184 6 (parallel [
            (set (reg:DI 1 dx [161])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:163 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 184 276 185 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2ae345da3000 *.LC18>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 185 184 250 6 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 64 {*movsi_internal}
     (nil))

(insn 250 185 251 6 (set (reg:V4SF 21 xmm0 [149])
        (vec_select:V4SF (vec_concat:V8SF (reg:V4SF 21 xmm0 [149])
                (reg:V4SF 21 xmm0 [149]))
            (parallel [
                    (const_int 0 [0])
                    (const_int 4 [0x4])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5])
                ]))) ../src/izp-gaussian.c:163 1472 {vec_interleave_lowv4sf}
     (nil))

(insn 251 250 177 6 (set (reg:V2DF 21 xmm0 [154])
        (float_extend:V2DF (vec_select:V2SF (reg:V4SF 21 xmm0 [149])
                (parallel [
                        (const_int 0 [0])
                        (const_int 1 [0x1])
                    ])))) ../src/izp-gaussian.c:163 1462 {sse2_cvtps2pd}
     (nil))

(insn:TI 177 251 179 6 (set (reg:DF 21 xmm0 [154])
        (div:DF (reg:DF 21 xmm0 [154])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [7 S8 A64]))) ../src/izp-gaussian.c:163 741 {*fop_df_1_sse}
     (nil))

(insn:TI 179 177 180 6 (parallel [
            (set (reg:SI 2 cx [156])
                (mult:SI (reg:SI 2 cx [156])
                    (mem/c/i:SI (symbol_ref:DI ("cols")  <var_decl 0x2ae3457e0aa0 cols>) [5 cols+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:163 333 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 180 179 253 6 (set (reg:DI 2 cx [158])
        (sign_extend:DI (reg:SI 2 cx [156]))) ../src/izp-gaussian.c:163 126 {*extendsidi2_rex64}
     (nil))

(insn:TI 253 180 183 6 (parallel [
            (set (reg:DI 0 ax [160])
                (udiv:DI (reg/v:DI 0 ax [orig:93 cycles ] [93])
                    (reg:DI 2 cx [158])))
            (set (reg:DI 1 dx [161])
                (umod:DI (reg/v:DI 0 ax [orig:93 cycles ] [93])
                    (reg:DI 2 cx [158])))
            (use (reg:DI 1 dx [161]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:163 366 {*udivmoddi4_noext}
     (expr_list:REG_DEAD (reg:DI 2 cx [158])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:DI 1 dx [161])
                (nil)))))

(insn 183 253 186 6 (set (reg:DI 1 dx)
        (reg:DI 0 ax [160])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [160])
        (nil)))

(insn 186 183 187 6 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 66 {*movqi_internal}
     (nil))

(call_insn:TI 187 186 188 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2ae34567a400 __printf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
                        (nil)))))))

(insn 188 187 190 6 (set (reg:SI 1 dx)
        (mem/c/i:SI (symbol_ref:DI ("newRows")  <var_decl 0x2ae3457e0c80 newRows>) [5 newRows+0 S4 A32])) ../src/izp-gaussian.c:168 64 {*movsi_internal}
     (nil))

(insn 190 188 189 6 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:92 extendedImage ] [92])) ../src/izp-gaussian.c:168 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 189 190 191 6 (set (reg:SI 4 si)
        (mem/c/i:SI (symbol_ref:DI ("newCols")  <var_decl 0x2ae3457e0be0 newCols>) [5 newCols+0 S4 A32])) ../src/izp-gaussian.c:168 64 {*movsi_internal}
     (nil))

(call_insn:TI 191 189 194 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("izp_toUintArray") [flags 0x3]  <function_decl 0x2ae345854f00 izp_toUintArray>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:168 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (nil)))))

(insn 194 191 195 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2ae345da30a0 *.LC19>)) ../src/izp-gaussian.c:171 62 {*movdi_internal_rex64}
     (nil))

(insn 195 194 192 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x2ae345da3140 *.LC20>)) ../src/izp-gaussian.c:171 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 192 195 193 6 (set (reg/v/f:DI 3 bx [orig:104 uintImage ] [104])
        (reg:DI 0 ax)) ../src/izp-gaussian.c:168 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(debug_insn 193 192 196 6 (var_location:DI uintImage (reg/v/f:DI 3 bx [orig:104 uintImage ] [104])) ../src/izp-gaussian.c:168 -1
     (nil))

(call_insn:TI 196 193 198 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2ae345655b00 fopen>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:171 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(debug_insn 198 196 199 6 (var_location:DI fpOut (reg/v/f:DI 0 ax [orig:105 fpOut ] [105])) ../src/izp-gaussian.c:171 -1
     (nil))

(insn:TI 199 198 200 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:105 fpOut ] [105])
            (const_int 0 [0]))) ../src/izp-gaussian.c:172 3 {*cmpdi_ccno_1}
     (nil))

(jump_insn:TI 200 199 201 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) ../src/izp-gaussian.c:172 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil)))
 -> 209)
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]


;; Succ edge  7 [69.8%]  (fallthru,can_fallthru)
;; Succ edge  8 [30.2%]  (can_fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]

;; Pred edge  6 [69.8%]  (fallthru,can_fallthru)
(note 201 200 203 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 203 201 275 7 (set (reg:SI 37 r8)
        (mem/c/i:SI (symbol_ref:DI ("maxval")  <var_decl 0x2ae3457e0d20 maxval>) [5 maxval+0 S4 A32])) ../src/izp-gaussian.c:173 64 {*movsi_internal}
     (nil))

(insn 275 203 206 7 (parallel [
            (set (reg:DI 38 r9)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:173 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 206 275 204 7 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:104 uintImage ] [104])) ../src/izp-gaussian.c:173 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 204 206 207 7 (set (reg:SI 2 cx)
        (mem/c/i:SI (symbol_ref:DI ("newRows")  <var_decl 0x2ae3457e0c80 newRows>) [5 newRows+0 S4 A32])) ../src/izp-gaussian.c:173 64 {*movsi_internal}
     (nil))

(insn 207 204 205 7 (set (reg:DI 5 di)
        (reg/v/f:DI 0 ax [orig:105 fpOut ] [105])) ../src/izp-gaussian.c:173 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:105 fpOut ] [105])
        (nil)))

(insn:TI 205 207 208 7 (set (reg:SI 1 dx)
        (mem/c/i:SI (symbol_ref:DI ("newCols")  <var_decl 0x2ae3457e0be0 newCols>) [5 newCols+0 S4 A32])) ../src/izp-gaussian.c:173 64 {*movsi_internal}
     (nil))

(call_insn:TI 208 205 209 7 (call (mem:QI (symbol_ref:DI ("pgm_writepgm") [flags 0x41]  <function_decl 0x2ae34578ab00 pgm_writepgm>) [0 S1 A8])
        (const_int 0 [0])) ../src/izp-gaussian.c:173 618 {*call_0}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 37 r8))
                        (expr_list:REG_DEP_TRUE (use (reg:SI 38 r9))
                            (nil))))))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]


;; Succ edge  8 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  6 [30.2%]  (can_fallthru)
;; Pred edge  7 [100.0%]  (fallthru,can_fallthru)
(code_label 209 208 210 8 141 "" [1 uses])

(note 210 209 211 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 211 210 212 8 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 41 r12 [orig:92 extendedImage ] [92]) [2 *extendedImage_47+0 S8 A64])) ../src/izp-gaussian.c:176 62 {*movdi_internal_rex64}
     (nil))

(call_insn:TI 212 211 213 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae34558b000 free>) [0 S1 A8])
        (const_int 0 [0])) ../src/izp-gaussian.c:176 618 {*call_0}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 213 212 214 8 (set (reg:DI 5 di)
        (reg/v/f:DI 41 r12 [orig:92 extendedImage ] [92])) ../src/izp-gaussian.c:177 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:92 extendedImage ] [92])
        (nil)))

(call_insn:TI 214 213 215 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae34558b000 free>) [0 S1 A8])
        (const_int 0 [0])) ../src/izp-gaussian.c:177 618 {*call_0}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 215 214 216 8 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 3 bx [orig:104 uintImage ] [104]) [2 *uintImage_61+0 S8 A64])) ../src/izp-gaussian.c:179 62 {*movdi_internal_rex64}
     (nil))

(call_insn:TI 216 215 217 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae34558b000 free>) [0 S1 A8])
        (const_int 0 [0])) ../src/izp-gaussian.c:179 618 {*call_0}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 217 216 218 8 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:104 uintImage ] [104])) ../src/izp-gaussian.c:180 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:104 uintImage ] [104])
        (nil)))

(call_insn:TI 218 217 219 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae34558b000 free>) [0 S1 A8])
        (const_int 0 [0])) ../src/izp-gaussian.c:180 618 {*call_0}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(debug_insn 219 218 220 8 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2ae345da31e0 *.LC21>)) ../src/izp-gaussian.c:182 -1
     (nil))

(insn 220 219 221 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2ae345da31e0 *.LC21>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (nil))

(insn 221 220 273 8 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 64 {*movsi_internal}
     (nil))

(insn:TI 273 221 223 8 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 223 273 274 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2ae34567a400 __printf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (nil)))))

(insn 274 223 224 8 (parallel [
            (set (reg:DI 0 ax [orig:59 D.7353 ] [59])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:183 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 0 [ax] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 7 [sp] 20 [frame]


;; Succ edge  9 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 8 10 12) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 0 [ax] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  8 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  10 [100.0%]  (can_fallthru)
;; Pred edge  12 [100.0%]  (can_fallthru)
(code_label 224 274 225 9 137 "" [2 uses])

(note 225 224 290 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 290 225 265 9 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 265 290 233 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) ../src/izp-gaussian.c:184 911 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 233 265 266 9 (use (reg/i:SI 0 ax)) ../src/izp-gaussian.c:184 -1
     (nil))

(insn:TI 266 233 267 9 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:184 52 {*popdi1}
     (nil))

(insn:TI 267 266 268 9 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:184 52 {*popdi1}
     (nil))

(insn:TI 268 267 269 9 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:184 52 {*popdi1}
     (nil))

(insn:TI 269 268 270 9 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:184 52 {*popdi1}
     (nil))

(insn/f:TI 270 269 271 9 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:184 52 {*popdi1}
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))

(jump_insn:TI 271 270 272 9 (return) ../src/izp-gaussian.c:184 634 {return_internal}
     (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  EXIT [100.0%] 

(barrier 272 271 282)

;; Start of basic block ( 2) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  2 [19.1%]  (can_fallthru)
(code_label 282 272 16 10 142 "" [1 uses])

(note 16 282 17 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 17 16 18 10 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 3 bx [orig:124 argv ] [124]) [2 *argv_2(D)+0 S8 A64])) ../src/izp-gaussian.c:79 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:124 argv ] [124])
        (nil)))

(call_insn:TI 18 17 20 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__xpg_basename") [flags 0x41]  <function_decl 0x2ae3457b0500 __xpg_basename>) [0 S1 A8])
            (const_int 0 [0]))) ../src/izp-gaussian.c:79 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(debug_insn 20 18 21 10 (var_location:DI prog (reg/v/f:DI 0 ax [orig:62 prog ] [62])) ../src/izp-gaussian.c:79 -1
     (nil))

(debug_insn 21 20 23 10 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ae345d4c960 *.LC6>)) ../src/izp-gaussian.c:80 -1
     (nil))

(insn 23 21 24 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ae345d4c960 *.LC6>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (nil))

(insn 24 23 22 10 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 64 {*movsi_internal}
     (nil))

(insn:TI 22 24 280 10 (set (reg:DI 1 dx)
        (reg/v/f:DI 0 ax [orig:62 prog ] [62])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:62 prog ] [62])
        (nil)))

(insn 280 22 26 10 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(call_insn:TI 26 280 281 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2ae34567a400 __printf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

(insn 281 26 284 10 (parallel [
            (set (reg:DI 0 ax [orig:59 D.7353 ] [59])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:82 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 284 281 285 10 (set (pc)
        (label_ref 224)) ../src/izp-gaussian.c:82 606 {jump}
     (nil)
 -> 224)
;; End of basic block 10 -> ( 9)
;; lr  out 	 0 [ax] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 7 [sp] 20 [frame]


;; Succ edge  9 [100.0%]  (can_fallthru)

(barrier 285 284 168)

;; Start of basic block ( 4) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 1 [dx] 2 [cx] 21 [xmm0]
;; live  kill	 17 [flags]

;; Pred edge  4 [21.0%]  (can_fallthru)
(code_label 168 285 236 11 139 "" [1 uses])

(note 236 168 248 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 248 236 249 11 (set (reg:DI 1 dx [151])
        (reg/v:DI 0 ax [orig:93 cycles ] [93])) ../src/izp-gaussian.c:164 62 {*movdi_internal_rex64}
     (nil))

(insn 249 248 169 11 (set (reg:DI 2 cx [152])
        (reg/v:DI 0 ax [orig:93 cycles ] [93])) ../src/izp-gaussian.c:164 62 {*movdi_internal_rex64}
     (nil))

(insn:TI 169 249 170 11 (parallel [
            (set (reg:DI 1 dx [151])
                (lshiftrt:DI (reg:DI 1 dx [151])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:164 533 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 170 169 171 11 (parallel [
            (set (reg:DI 2 cx [152])
                (and:DI (reg:DI 2 cx [152])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:164 379 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 171 170 172 11 (parallel [
            (set (reg:DI 1 dx [151])
                (ior:DI (reg:DI 1 dx [151])
                    (reg:DI 2 cx [152])))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:164 401 {*iordi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [152])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:TI 172 171 173 11 (set (reg:SF 21 xmm0 [149])
        (float:SF (reg:DI 1 dx [151]))) ../src/izp-gaussian.c:164 219 {*floatdisf2_sse_interunit}
     (expr_list:REG_DEAD (reg:DI 1 dx [151])
        (nil)))

(insn:TI 173 172 286 11 (set (reg:SF 21 xmm0 [149])
        (plus:SF (reg:SF 21 xmm0 [149])
            (reg:SF 21 xmm0 [149]))) ../src/izp-gaussian.c:164 729 {*fop_sf_comm_sse}
     (nil))

(jump_insn 286 173 287 11 (set (pc)
        (label_ref 174)) 606 {jump}
     (nil)
 -> 174)
;; End of basic block 11 -> ( 6)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12]


;; Succ edge  6 [100.0%]  (can_fallthru)

(barrier 287 286 283)

;; Start of basic block ( 3) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  3 [10.1%]  (can_fallthru)
(code_label 283 287 46 12 143 "" [1 uses])

(note 46 283 47 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(debug_insn 47 46 48 12 (var_location:DI __stream (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2ae34564c320 stderr>) [2 stderr+0 S8 A64])) ../src/izp-gaussian.c:90 -1
     (nil))

(debug_insn 48 47 49 12 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2ae345d4cb40 *.LC9>)) ../src/izp-gaussian.c:90 -1
     (nil))

(insn:TI 49 48 51 12 (set (reg/f:DI 2 cx [orig:128 MEM[(char * *)argv_2(D) + 8B] ] [128])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:124 argv ] [124])
                (const_int 8 [0x8])) [2 MEM[(char * *)argv_2(D) + 8B]+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:124 argv ] [124])
        (nil)))

(insn 51 49 52 12 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2ae345d4cb40 *.LC9>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (nil))

(insn 52 51 53 12 (set (reg:SI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 64 {*movsi_internal}
     (nil))

(insn:TI 53 52 55 12 (set (reg:DI 5 di)
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2ae34564c320 stderr>) [2 stderr+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 62 {*movdi_internal_rex64}
     (nil))

(call_insn:TI 55 53 6 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2ae34567a300 __fprintf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                        (nil)))))))

(insn 6 55 288 12 (set (reg:SI 0 ax [orig:59 D.7353 ] [59])
        (const_int 1 [0x1])) ../src/izp-gaussian.c:91 64 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 288 6 289 12 (set (pc)
        (label_ref 224)) ../src/izp-gaussian.c:91 606 {jump}
     (nil)
 -> 224)
;; End of basic block 12 -> ( 9)
;; lr  out 	 0 [ax] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 7 [sp] 20 [frame]


;; Succ edge  9 [100.0%]  (can_fallthru)

(barrier 289 288 245)

(note 245 289 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function izp_printMatrix (izp_printMatrix)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 11 count 11 (  1.4)


izp_printMatrix

Dataflow summary:
def_info->table_size = 131, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={9d,6u} r1={3d,2u} r2={3d} r3={3d,3u,1e} r4={5d,4u} r5={5d,3u} r6={3d,11u} r7={15d,26u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={14d,4u} r18={2d} r19={2d} r20={1d,1u} r21={5d,2u} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r41={3d,3u} r42={4d,5u} r43={4d,5u,1e} r44={3d,3u} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 243{163d,78u,2e} in 54{52 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 43 [r14]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 44 [r15]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 3 6 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 42 [r13]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 5 4 )->[5]->( 5 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 5 4 )->[6]->( 4 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 2 6 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp] 20 [frame]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(6){ }u-1(7){ }u-1(20){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 4 to worklist
  Adding insn 99 to worklist
  Adding insn 97 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 93 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 89 to worklist
  Adding insn 48 to worklist
  Adding insn 45 to worklist
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 18 to worklist
  Adding insn 42 to worklist
  Adding insn 39 to worklist
  Adding insn 37 to worklist
  Adding insn 33 to worklist
  Adding insn 108 to worklist
Finished finding needed instructions:
processing block 7 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 102 to worklist
  Adding insn 101 to worklist
processing block 6 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 113 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
processing block 5 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 30 to worklist
  Adding insn 28 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 19 to worklist
processing block 4 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 112 to worklist
  Adding insn 110 to worklist
  Adding insn 111 to worklist
processing block 3 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 53 to worklist
  Adding insn 51 to worklist
  Adding insn 86 to worklist
processing block 2 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
  Adding insn 12 to worklist
  Adding insn 114 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
  Adding insn 96 to worklist
  Adding insn 90 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 11 count 10 (  1.2)
deleting insn with uid = 98.
deleting insn with uid = 5.
;;   ======================================================
;;   -- basic block 2 from 89 to 13 -- after reload
;;   ======================================================

;;	  0-->    89 [--sp]=bp                         :c2_decodern,(c2_p4+c2_p3)
;;	  1-->    90 bp=sp                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    91 [--sp]=r15                        :c2_decodern,(c2_p4+c2_p3)
;;	  1-->    97 use bp                            :nothing
;;	  2-->    92 [--sp]=r14                        :c2_decodern,(c2_p4+c2_p3)
;;	  3-->    93 [--sp]=r13                        :c2_decodern,(c2_p4+c2_p3)
;;	  4-->    94 [--sp]=r12                        :c2_decodern,(c2_p4+c2_p3)
;;	  5-->    95 [--sp]=bx                         :c2_decodern,(c2_p4+c2_p3)
;;	  6-->    96 {sp=sp-0x18;clobber flags;clobber :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  7-->    99 unspec/v{0;}                      :c2_decoder0
;;	  7-->    11: debug i => 0                     :nothing
;;	  7-->   114 {r14=0;clobber flags;}            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->    12 flags=cmp(si,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->     2 bx=di                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 13-->     3 r12=si                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	 14-->     4 [bp-0x34]=dx                      :c2_decodern,(c2_p4+c2_p3)
;;	 14-->    13 pc={(flags<=0)?L58:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 14
;;   new head = 89
;;   new tail = 13

deleting insn with uid = 50.
deleting insn with uid = 52.
;;   ======================================================
;;   -- basic block 3 from 86 to 53 -- after reload
;;   ======================================================

;;	  0-->    86 ax=dx                             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    51 {ax=zxn(ax-0x1);clobber flags;}   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->    53 r15=ax*0x4+0x4                    :c2_decodern,c2_p0
;;	Ready list (final):  
;;   total time = 2
;;   new head = 86
;;   new tail = 53

;;   ======================================================
;;   -- basic block 4 from 45 to 48 -- after reload
;;   ======================================================

;;	  0-->    45: debug j => 0                     :nothing
;;	  0-->   111 ax=[bp-0x34]                      :c2_decodern,c2_p2
;;	  0-->   110 {r13=0;clobber flags;}            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->   112 flags=cmp(ax,0)                   :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->    48 pc={(flags<=0)?L46:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 5
;;   new head = 45
;;   new tail = 48

;;   ======================================================
;;   -- basic block 5 from 18 to 31 -- after reload
;;   ======================================================

;;	  0-->    18: debug __fmt => `*.LC22'          :nothing
;;	  0-->    19 ax=[r14*0x8+bx]                   :c2_decodern,c2_p2
;;	  0-->    22 si=`*.LC22'                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    23 di=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    87 xmm0=vec_merge                    :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    24 ax=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  4-->    28 {r13=r13+0x4;clobber flags;}      :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  5-->    88 xmm0=fxn(vec_select)              :nothing
;;	  5-->    25 call <...>                        :c2_decoder0
;;	  5-->    27: debug j => D#21                  :nothing
;;	  5-->    30 flags=cmp(r13,r15)                :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  6-->    31 pc={(flags!=0)?L29:pc}            :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 6
;;   new head = 18
;;   new tail = 31

;;   ======================================================
;;   -- basic block 6 from 33 to 42 -- after reload
;;   ======================================================

;;	  0-->    33: debug __fmt => `*.LC23'          :nothing
;;	  0-->   113 {ax=0;clobber flags;}             :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    34 si=`*.LC23'                       :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  0-->    35 di=0x1                            :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->    37 call <...>                        :c2_decoder0
;;	  1-->    39: debug i => D#22                  :nothing
;;	  1-->    40 {r14=r14+0x1;clobber flags;}      :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  2-->    41 flags=cmp(r12,r14)                :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  3-->    42 pc={(flags>0)?L76:pc}             :c2_decodern,c2_p5
;;	Ready list (final):  
;;   total time = 3
;;   new head = 33
;;   new tail = 42

;;   ======================================================
;;   -- basic block 7 from 101 to 108 -- after reload
;;   ======================================================

;;	  0-->   101 {sp=sp+0x18;clobber flags;clobber :c2_decodern,c2_p0|c2_p1|c2_p5
;;	  1-->   102 bx=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  5-->   103 r12=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	  9-->   104 r13=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 13-->   105 r14=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 17-->   106 r15=[sp++]                        :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 21-->   107 bp=[sp++]                         :c2_decodern,c2_p2,c2_p0|c2_p1|c2_p5
;;	 22-->   108 return                            :c2_decoder0
;;	Ready list (final):  
;;   total time = 22
;;   new head = 101
;;   new tail = 108





izp_printMatrix

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={9d,6u} r1={3d,2u} r2={3d} r3={3d,3u,1e} r4={5d,4u} r5={5d,3u} r6={3d,11u} r7={15d,26u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={14d,4u} r18={2d} r19={2d} r20={1d,1u} r21={5d,2u} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r41={3d,3u} r42={4d,5u} r43={4d,5u,1e} r44={3d,3u} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 243{163d,78u,2e} in 54{52 regular + 2 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 43 [r14]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 8 89 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 89 5 90 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg/f:DI 6 bp)) ../src/izp-gaussian.c:626 42 {*pushdi2_rex64}
     (nil))

(insn/f:TI 90 89 91 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) ../src/izp-gaussian.c:626 62 {*movdi_internal_rex64}
     (nil))

(insn/f 91 90 97 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 44 r15)) ../src/izp-gaussian.c:626 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))

(insn 97 91 92 2 (use (reg/f:DI 6 bp)) ../src/izp-gaussian.c:626 -1
     (nil))

(insn/f:TI 92 97 93 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 43 r14)) ../src/izp-gaussian.c:626 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f:TI 93 92 94 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 42 r13)) ../src/izp-gaussian.c:626 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f:TI 94 93 95 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) ../src/izp-gaussian.c:626 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f:TI 95 94 96 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) ../src/izp-gaussian.c:626 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f:TI 96 95 98 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) ../src/izp-gaussian.c:626 911 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 98 96 99 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 99 98 11 2 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) ../src/izp-gaussian.c:626 631 {blockage}
     (nil))

(debug_insn 11 99 114 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))

(insn 114 11 12 2 (parallel [
            (set (reg:DI 43 r14 [orig:68 ivtmp.1183 ] [68])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:627 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 12 114 2 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 4 si [orig:84 n ] [84])
            (const_int 0 [0]))) ../src/izp-gaussian.c:627 2 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:84 n ] [84])
        (nil)))

(insn 2 12 3 2 (set (reg/v/f:DI 3 bx [orig:83 mat ] [83])
        (reg:DI 5 di [ mat ])) ../src/izp-gaussian.c:626 62 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ mat ])
        (nil)))

(insn 3 2 4 2 (set (reg/v:SI 41 r12 [orig:84 n ] [84])
        (reg:SI 4 si [ n ])) ../src/izp-gaussian.c:626 64 {*movsi_internal}
     (nil))

(insn:TI 4 3 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [4 %sfp+-4 S4 A32])
        (reg:SI 1 dx [ m ])) ../src/izp-gaussian.c:626 64 {*movsi_internal}
     (nil))

(jump_insn 13 4 43 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) ../src/izp-gaussian.c:627 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 58)
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]


;; Succ edge  3 [91.0%]  (fallthru,can_fallthru)
;; Succ edge  7 [9.0%]  (can_fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 44 [r15]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  2 [91.0%]  (fallthru,can_fallthru)
(code_label 43 13 44 3 145 "" [0 uses])

(note 44 43 50 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 50 44 52 3 NOTE_INSN_DELETED)

(note 52 50 86 3 NOTE_INSN_DELETED)

(insn:TI 86 52 51 3 (set (reg:SI 0 ax)
        (reg:SI 1 dx [ m ])) 64 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ m ])
        (nil)))

(insn:TI 51 86 53 3 (parallel [
            (set (reg:DI 0 ax [92])
                (zero_extend:DI (plus:SI (reg:SI 0 ax)
                        (const_int -1 [0xffffffffffffffff]))))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:626 254 {*addsi_1_zext}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 53 51 76 3 (set (reg:DI 44 r15 [orig:94 D.9224 ] [94])
        (plus:DI (mult:DI (reg:DI 0 ax [92])
                (const_int 4 [0x4]))
            (const_int 4 [0x4]))) ../src/izp-gaussian.c:626 249 {*lea_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [92])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]


;; Succ edge  4 [100.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 3 6) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 42 [r13]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  3 [100.0%]  (fallthru,can_fallthru)
;; Pred edge  6 [91.0%]  (dfs_back,can_fallthru)
(code_label 76 53 65 4 151 "" [1 uses])

(note 65 76 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(debug_insn 45 65 111 4 (var_location:SI j (const_int 0 [0])) -1
     (nil))

(insn:TI 111 45 110 4 (set (reg:SI 0 ax)
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [4 %sfp+-4 S4 A32])) ../src/izp-gaussian.c:628 64 {*movsi_internal}
     (nil))

(insn 110 111 112 4 (parallel [
            (set (reg:DI 42 r13 [orig:61 ivtmp.1181 ] [61])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ../src/izp-gaussian.c:626 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 112 110 48 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax)
            (const_int 0 [0]))) ../src/izp-gaussian.c:628 2 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(jump_insn:TI 48 112 29 4 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 46)
            (pc))) ../src/izp-gaussian.c:628 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil)))
 -> 46)
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  6 [9.0%]  (can_fallthru)
;; Succ edge  5 [91.0%]  (fallthru,can_fallthru)

;; Start of basic block ( 5 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 21 [xmm0] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  5 [91.0%]  (dfs_back,can_fallthru)
;; Pred edge  4 [91.0%]  (fallthru,can_fallthru)
(code_label 29 48 17 5 147 "" [1 uses])

(note 17 29 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(debug_insn 18 17 19 5 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x2ae345dc75a0 *.LC22>)) ../src/izp-gaussian.c:629 -1
     (nil))

(insn:TI 19 18 22 5 (set (reg/f:DI 0 ax [orig:86 MEM[base: mat_9(D), index: ivtmp.1183_38, step: 8, offset: 0B] ] [86])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:68 ivtmp.1183 ] [68])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 3 bx [orig:83 mat ] [83])) [2 MEM[base: mat_9(D), index: ivtmp.1183_38, step: 8, offset: 0B]+0 S8 A64])) ../src/izp-gaussian.c:629 62 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:68 ivtmp.1183 ] [68])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 3 bx [orig:83 mat ] [83])) [2 MEM[base: mat_9(D), index: ivtmp.1183_38, step: 8, offset: 0B]+0 S8 A64])
        (nil)))

(insn 22 19 23 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x2ae345dc75a0 *.LC22>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (nil))

(insn 23 22 87 5 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 64 {*movsi_internal}
     (nil))

(insn:TI 87 23 24 5 (set (reg:V4SF 21 xmm0 [87])
        (vec_merge:V4SF (vec_duplicate:V4SF (mem:SF (plus:DI (reg/f:DI 0 ax [orig:86 MEM[base: mat_9(D), index: ivtmp.1183_38, step: 8, offset: 0B] ] [86])
                        (reg:DI 42 r13 [orig:61 ivtmp.1181 ] [61])) [3 *D.6865_14+0 S4 A32]))
            (const_vector:V4SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ])
            (const_int 1 [0x1]))) ../src/izp-gaussian.c:629 1502 {*vec_setv4sf_0_sse2}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:86 MEM[base: mat_9(D), index: ivtmp.1183_38, step: 8, offset: 0B] ] [86])
        (nil)))

(insn 24 87 28 5 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 66 {*movqi_internal}
     (nil))

(insn 28 24 88 5 (parallel [
            (set (reg:DI 42 r13 [orig:61 ivtmp.1181 ] [61])
                (plus:DI (reg:DI 42 r13 [orig:61 ivtmp.1181 ] [61])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 88 28 25 5 (set (reg:V2DF 21 xmm0 [87])
        (float_extend:V2DF (vec_select:V2SF (reg:V4SF 21 xmm0 [87])
                (parallel [
                        (const_int 0 [0])
                        (const_int 1 [0x1])
                    ])))) ../src/izp-gaussian.c:629 1462 {sse2_cvtps2pd}
     (nil))

(call_insn 25 88 27 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2ae34567a400 __printf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
                    (nil))))))

(debug_insn 27 25 30 5 (var_location:SI j (debug_expr:SI D#21)) -1
     (nil))

(insn 30 27 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 42 r13 [orig:61 ivtmp.1181 ] [61])
            (reg:DI 44 r15 [orig:94 D.9224 ] [94]))) ../src/izp-gaussian.c:628 7 {*cmpdi_1}
     (nil))

(jump_insn:TI 31 30 46 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 29)
            (pc))) ../src/izp-gaussian.c:628 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 29)
;; End of basic block 5 -> ( 5 6)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  5 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  6 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 43 [r14]
;; live  kill	 17 [flags]

;; Pred edge  5 [9.0%]  (fallthru,can_fallthru,loop_exit)
;; Pred edge  4 [9.0%]  (can_fallthru)
(code_label 46 31 32 6 148 "" [1 uses])

(note 32 46 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(debug_insn 33 32 113 6 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2ae345dc7640 *.LC23>)) ../src/izp-gaussian.c:631 -1
     (nil))

(insn:TI 113 33 34 6 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 56 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 34 113 35 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2ae345dc7640 *.LC23>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 62 {*movdi_internal_rex64}
     (nil))

(insn 35 34 37 6 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 64 {*movsi_internal}
     (nil))

(call_insn:TI 37 35 39 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x2ae34567a400 __printf_chk>) [0 S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 929 {*call_value_0_rex64}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (nil)))))

(debug_insn 39 37 40 6 (var_location:SI i (debug_expr:SI D#22)) -1
     (nil))

(insn 40 39 41 6 (parallel [
            (set (reg:DI 43 r14 [orig:68 ivtmp.1183 ] [68])
                (plus:DI (reg:DI 43 r14 [orig:68 ivtmp.1183 ] [68])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:105 253 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 41 40 42 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 41 r12 [orig:84 n ] [84])
            (reg:SI 43 r14 [orig:68 ivtmp.1183 ] [68]))) ../src/izp-gaussian.c:627 6 {*cmpsi_1}
     (nil))

(jump_insn:TI 42 41 58 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 76)
            (pc))) ../src/izp-gaussian.c:627 591 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil)))
 -> 76)
;; End of basic block 6 -> ( 4 7)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]


;; Succ edge  4 [91.0%]  (dfs_back,can_fallthru)
;; Succ edge  7 [9.0%]  (fallthru,can_fallthru,loop_exit)

;; Start of basic block ( 2 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 7 [sp] 20 [frame]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp] 20 [frame]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]

;; Pred edge  2 [9.0%]  (can_fallthru)
;; Pred edge  6 [9.0%]  (fallthru,can_fallthru,loop_exit)
(code_label 58 42 59 7 144 "" [1 uses])

(note 59 58 100 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 100 59 101 7 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 101 100 102 7 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) ../src/izp-gaussian.c:633 911 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:TI 102 101 103 7 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:633 52 {*popdi1}
     (nil))

(insn:TI 103 102 104 7 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:633 52 {*popdi1}
     (nil))

(insn:TI 104 103 105 7 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:633 52 {*popdi1}
     (nil))

(insn:TI 105 104 106 7 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:633 52 {*popdi1}
     (nil))

(insn:TI 106 105 107 7 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:633 52 {*popdi1}
     (nil))

(insn/f:TI 107 106 108 7 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0 S8 A8])) ../src/izp-gaussian.c:633 52 {*popdi1}
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))

(jump_insn:TI 108 107 109 7 (return) ../src/izp-gaussian.c:633 634 {return_internal}
     (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  EXIT [100.0%] 

(barrier 109 108 82)

(note 82 109 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
